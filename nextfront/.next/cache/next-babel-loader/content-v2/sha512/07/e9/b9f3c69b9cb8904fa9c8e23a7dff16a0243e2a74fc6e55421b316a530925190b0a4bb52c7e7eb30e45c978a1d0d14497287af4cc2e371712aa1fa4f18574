{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _classCallCheck from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport { Form } from 'react-bootstrap';\nimport styles from '../styles/selectstate.module.css';\n\nvar CountryStateSelection = /*#__PURE__*/function (_React$Component) {\n  _inherits(CountryStateSelection, _React$Component);\n\n  var _super = _createSuper(CountryStateSelection);\n\n  function CountryStateSelection(props) {\n    var _this;\n\n    _classCallCheck(this, CountryStateSelection);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"statefetch\", function (countryid) {\n      fetch(\"http://localhost:5000/country/\".concat(countryid)).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this.setState({\n          states: data\n        });\n\n        console.log(\"states :: \", data);\n      });\n    });\n\n    _this.state = {\n      states: []\n    };\n    return _this;\n  }\n\n  _createClass(CountryStateSelection, [{\n    key: \"statedown\",\n    value: function statedown(value) {\n      this.props.countryOptionHandler(value);\n      console.log(\"statedown --> \", value); // this.statefetch(value);\n\n      if (value === \"India\") {\n        this.statefetch(1);\n        console.log(\"this.state\", this.state.states);\n      } else if (value === \"Usa\") {\n        this.statefetch(2);\n      }\n    } //         try {\n    //             const response = await fetch(`http://localhost:5000/country/${countryid}`, {\n    //                 method: 'GET',\n    //             });\n    //             this.statelist = await response.json();\n    //             return statelist\n    //         } catch (error) {\n    //             console.error(error);\n    //         }\n    // statedown = async (props) => {\n    //     \n    //     const { country, state } = this.props.statedata;\n    //     let options = null;\n    //     if (country === \"India\") {\n    //         // type = India;\n    //         this.statefetch(1);\n    //         console.log(\"this.state\",this.state.states)\n    //     } else if (country === \"Usa\") {\n    //         this.statefetch(2);\n    //     } else if (country === \"Other Country\") {\n    //     }\n    //     if (country) {\n    //         console.log(\"done\")\n    //         options = await this.state.states.map((key) => <option key={key}>{key}</option>);\n    //         this.setState({ options: options })\n    //         console.log(\"options state\", options)\n    //     }\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/_jsxs(\"div\", {\n        className: \"\".concat(styles.statediv, \" row mx-0\"),\n        children: [/*#__PURE__*/_jsxs(Form.Group, {\n          className: \"col-md-6\",\n          children: [/*#__PURE__*/_jsx(Form.Label, {\n            children: \"Country\"\n          }), /*#__PURE__*/_jsxs(Form.Control, {\n            as: \"select\",\n            onChange: function onChange(e) {\n              return _this2.statedown(e.target.value);\n            },\n            required: true,\n            children: [/*#__PURE__*/_jsx(\"option\", {\n              value: \"\",\n              children: \"---Select Country---\"\n            }), /*#__PURE__*/_jsx(\"option\", {\n              value: \"India\",\n              children: \"India\"\n            }), /*#__PURE__*/_jsx(\"option\", {\n              value: \"Usa\",\n              children: \"Usa\"\n            })]\n          })]\n        }), /*#__PURE__*/_jsxs(Form.Group, {\n          className: \"col-md-6\",\n          children: [/*#__PURE__*/_jsx(Form.Label, {\n            children: \"State\"\n          }), /*#__PURE__*/_jsxs(Form.Control, {\n            as: \"select\",\n            onChange: this.props.stateOptionHandler,\n            required: true,\n            children: [/*#__PURE__*/_jsx(\"option\", {\n              value: \"\",\n              children: \"---Select State---\"\n            }), this.state.states.map(function (state) {\n              return /*#__PURE__*/_jsx(\"option\", {\n                value: [[state.statename], [state.id]],\n                children: state.statename\n              }, state.id);\n            })]\n          })]\n        })]\n      });\n    }\n  }]);\n\n  return CountryStateSelection;\n}(React.Component);\n\n;\nexport default CountryStateSelection;","map":null,"metadata":{},"sourceType":"module"}