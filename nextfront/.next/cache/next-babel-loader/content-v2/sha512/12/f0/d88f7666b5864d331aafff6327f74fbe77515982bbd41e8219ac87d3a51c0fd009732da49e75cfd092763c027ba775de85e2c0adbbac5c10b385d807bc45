{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _classCallCheck from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport { DropdownButton, Dropdown, Button, Form } from \"react-bootstrap\";\nimport Link from 'next/link'; // import './userbystate.styles.css';\n\nimport { withRouter } from 'next/router'; // import { WithRouterProps } from 'next/dist/client/with-router';\n// const router = withRouter();\n\nvar StateSelect = /*#__PURE__*/function (_React$Component) {\n  _inherits(StateSelect, _React$Component);\n\n  var _super = _createSuper(StateSelect);\n\n  function StateSelect(props) {\n    var _this;\n\n    _classCallCheck(this, StateSelect);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"statefetch\", function (countryid) {\n      fetch(\"http://localhost:5000/country/\".concat(countryid)).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this.setState({\n          states: data\n        });\n      });\n    });\n\n    _this.state = {\n      states: [],\n      users: null,\n      selectedstatename: null,\n      selectedstateid: null\n    };\n    return _this;\n  }\n\n  _createClass(StateSelect, [{\n    key: \"statedown\",\n    value: function statedown(value) {\n      console.log(\"statedown --> \", value);\n\n      if (value === \"India\") {\n        this.statefetch(1);\n        console.log(\"this.state\", this.state.states);\n      } else if (value === \"Usa\") {\n        this.statefetch(2);\n        console.log(\"this.state\", this.state.states);\n      } else if (value == \"\") {\n        this.setState({\n          states: null\n        });\n      }\n    }\n  }, {\n    key: \"statedropdown\",\n    value: function statedropdown(value) {\n      var _this2 = this;\n\n      if (value != \"\") {\n        var statedata = value.split(\",\");\n        var statename = statedata[0];\n        var stateid = statedata[1];\n        fetch(\"http://localhost:5000/users/state/\".concat(stateid)).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          _this2.setState({\n            users: data\n          });\n        });\n        this.setState({\n          selectedstatename: statename\n        });\n        this.setState({\n          selectedstateid: stateid\n        });\n      } else {\n        this.setState({\n          selectedstatename: null\n        });\n        this.setState({\n          selectedstateid: null\n        });\n      }\n    } // handleClick = (e) => {\n    //     const router = useRouter()\n    //     e.preventDefault()\n    //     router.push()\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      // const ButtonLink = React.forwardRef(({ onClick, href , ref}) => {\n      //     return (\n      //         <a href={href} onClick={onClick} ref={this.state.selectedstateid}>\n      //             {ref}\n      //         </a>\n      //     )\n      // })\n      var router = this.props.router;\n      return /*#__PURE__*/_jsx(\"div\", {\n        className: \"main-div\",\n        children: /*#__PURE__*/_jsx(\"fieldset\", {\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            className: \"row mx-0\",\n            children: [/*#__PURE__*/_jsxs(Form.Group, {\n              className: \"col-md-4\",\n              children: [/*#__PURE__*/_jsx(Form.Label, {\n                children: \"Country\"\n              }), /*#__PURE__*/_jsxs(Form.Control, {\n                as: \"select\",\n                onChange: function onChange(e) {\n                  return _this3.statedown(e.target.value);\n                },\n                required: true,\n                children: [/*#__PURE__*/_jsx(\"option\", {\n                  value: \"\",\n                  children: \"---Select Country---\"\n                }), /*#__PURE__*/_jsx(\"option\", {\n                  value: \"India\",\n                  children: \"India\"\n                }), /*#__PURE__*/_jsx(\"option\", {\n                  value: \"Usa\",\n                  children: \"Usa\"\n                })]\n              })]\n            }), /*#__PURE__*/_jsxs(Form.Group, {\n              className: \"col-md-4\",\n              children: [/*#__PURE__*/_jsx(Form.Label, {\n                children: \"State\"\n              }), /*#__PURE__*/_jsxs(Form.Control, {\n                as: \"select\",\n                onChange: function onChange(event) {\n                  return _this3.statedropdown(event.target.value);\n                },\n                required: true,\n                children: [/*#__PURE__*/_jsx(\"option\", {\n                  value: \"\",\n                  children: \"---Select State---\"\n                }), this.state.states != null ? this.state.states.map(function (state) {\n                  return /*#__PURE__*/_jsx(\"option\", {\n                    value: [[state.statename], [state.id]],\n                    children: state.statename\n                  }, state.id);\n                }) : \"\"]\n              })]\n            }), console.log(\"users: ==>\", this.state.users), this.state.users != \"Users Not Found\" && this.state.users != null ? /*#__PURE__*/_jsx(\"div\", {\n              children: /*#__PURE__*/_jsxs(Form.Group, {\n                className: \"col-md-4\",\n                children: [/*#__PURE__*/_jsxs(Form.Label, {\n                  children: [\"Selected State : \", /*#__PURE__*/_jsx(\"span\", {\n                    style: {\n                      color: \"blue\"\n                    },\n                    children: this.state.selectedstatename\n                  }), \" \"]\n                }), /*#__PURE__*/_jsx(Button, {\n                  variant: \"info\",\n                  size: \"sm\",\n                  onClick: function onClick() {\n                    router.push({\n                      pathname: '/usersbystateid/[stateid]',\n                      query: {\n                        stateid: _this3.state.selectedstateid\n                      }\n                    });\n                  },\n                  children: \"Search Users\"\n                })]\n              })\n            }) : \"\"]\n          })\n        })\n      });\n    }\n  }]);\n\n  return StateSelect;\n}(React.Component);\n\nexport default withRouter(StateSelect);","map":null,"metadata":{},"sourceType":"module"}