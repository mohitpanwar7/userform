{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/pages/_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from \"react\";\nimport SignInAndSignUpPage from \"../components/sign-in-and-sign-up.component\";\nimport Header from '../components/header.component';\nimport Cookies from 'js-cookie';\nimport '../styles/globals.css';\nimport { useRouter } from 'next/router';\nimport App from './index';\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  const router = useRouter();\n  console.log(\"pathname===>\", router.pathname);\n  const {\n    0: auth,\n    1: setAuth\n  } = useState(false);\n  useEffect(() => {\n    var token = Cookies.get(\"token\");\n\n    if (token != undefined) {\n      console.log(\"token======>\", token);\n      fetch('http://localhost:5000/userauth', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(token)\n      }).then(response => response.json()).then(response => {\n        console.log(\"token response===>\", response);\n\n        if (response.message != \"Token is invalid!\") {\n          Cookies.set(\"userid\", response.userid);\n          Cookies.set(\"email\", response.email);\n          Cookies.set(\"displayname\", response.displayname);\n        } else {\n          Cookies.remove(\"userid\", {\n            path: ''\n          });\n          Cookies.remove(\"email\", {\n            path: ''\n          });\n          Cookies.remove(\"displayname\", {\n            path: ''\n          });\n          Cookies.remove(\"token\", {\n            path: ''\n          }); // this.setState({ auth: false });\n\n          setAuth(false);\n        }\n      });\n      const userid = Cookies.get(\"userid\");\n      console.log(\"cookiesuserid\", userid);\n\n      if (userid != null) {\n        setAuth(true);\n      } else {\n        setAuth(false);\n      }\n    } else {\n      setAuth(false);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"100\"\n      },\n      children: auth ? /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 18\n      }, this) : /*#__PURE__*/_jsxDEV(ReRoute, {\n        auth: auth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 51\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\nexport default MyApp;\nexport const ReRoute = ({}) => {\n  const router = useRouter();\n  console.log(\"router path===>\", router.pathname);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"hi\"\n  }, void 0, false);\n};","map":{"version":3,"sources":["/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/pages/_app.js"],"names":["React","useEffect","useState","SignInAndSignUpPage","Header","Cookies","useRouter","App","MyApp","Component","pageProps","router","console","log","pathname","auth","setAuth","token","get","undefined","fetch","method","headers","body","JSON","stringify","then","response","json","message","set","userid","email","displayname","remove","path","marginTop","ReRoute"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport SignInAndSignUpPage from \"../components/sign-in-and-sign-up.component\";\nimport Header from '../components/header.component';\nimport Cookies from 'js-cookie';\nimport '../styles/globals.css'\nimport { useRouter } from 'next/router';\nimport App from './index';\n\nfunction MyApp({ Component, pageProps }) {\n  const router = useRouter()\n  console.log(\"pathname===>\",router.pathname)\n  const [auth, setAuth] = useState(false);\n  useEffect(() => {\n\n    var token = Cookies.get(\"token\")\n    if (token != undefined) {\n      console.log(\"token======>\", token)\n      fetch('http://localhost:5000/userauth',\n        {\n          method: 'POST',\n          headers: { 'Content-type': 'application/json' },\n          body: JSON.stringify(token)\n        })\n        .then(response => response.json())\n        .then(response => {\n          console.log(\"token response===>\", response)\n          if (response.message != \"Token is invalid!\") {\n            Cookies.set(\"userid\", response.userid);\n            Cookies.set(\"email\", response.email);\n            Cookies.set(\"displayname\", response.displayname);\n          } else {\n            Cookies.remove(\"userid\", { path: '' });\n            Cookies.remove(\"email\", { path: '' });\n            Cookies.remove(\"displayname\", { path: '' });\n            Cookies.remove(\"token\", { path: '' });\n            // this.setState({ auth: false });\n            setAuth(false)\n          }\n\n        })\n      const userid = Cookies.get(\"userid\")\n      console.log(\"cookiesuserid\", userid);\n      if (userid != null) {\n        setAuth(true)\n      } else {\n        setAuth(false)\n      }\n    } else {\n      setAuth(false)\n    }\n    \n  })\n\n\n  return (\n    <>\n      <div style={{ marginTop: \"100\" }}>\n        {/* {router.push('/users')} */}\n        {auth ? (<Component {...pageProps} />) : (<ReRoute auth={auth}/>) }\n      </div>\n    </>\n  )\n}\n\nexport default MyApp\n\nexport const ReRoute = ({}) => {\n  const router = useRouter()\n  console.log(\"router path===>\",router.pathname)\n  return ( <>hi\n  </> );\n}\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}