{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport FormInput from './form-input-sign-in-and-sign-out.component';\nimport { Button, Modal } from 'react-bootstrap';\nimport CustomButton from './custom-button.component';\nimport md5 from 'md5';\nimport styles from '../styles/sign-up.module.scss'; // import './sign-up.styles.scss';\n\nvar SignUp = /*#__PURE__*/function (_React$Component) {\n  _inherits(SignUp, _React$Component);\n\n  var _super = _createSuper(SignUp);\n\n  function SignUp() {\n    var _this;\n\n    _classCallCheck(this, SignUp);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var encpassword;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                encpassword = md5(_this.state.prevPassword);\n                console.log(\"Enc password===>\", encpassword);\n\n                _this.setState({\n                  password: encpassword\n                }, function () {\n                  var _this$state = _this.state,\n                      displayName = _this$state.displayName,\n                      email = _this$state.email,\n                      password = _this$state.password,\n                      prevPassword = _this$state.prevPassword,\n                      prevConfirmPassword = _this$state.prevConfirmPassword;\n\n                  if (prevPassword != prevConfirmPassword) {\n                    alert(\"password dont match\");\n                    return;\n                  }\n\n                  try {\n                    var data = {\n                      displayName: _this.state.displayName,\n                      email: _this.state.email,\n                      password: _this.state.password\n                    };\n                    fetch('http://127.0.0.1:5000/signup', {\n                      method: 'POST',\n                      headers: {\n                        'Content-type': 'application/json'\n                      },\n                      body: JSON.stringify(data)\n                    }).then(function (response) {\n                      return response.json();\n                    }).then(function (response) {\n                      if (response) {\n                        console.log(\"response==>\", response);\n\n                        if (response != \"\".concat(email, \" Already Registered\")) {\n                          _this.setState({\n                            userValid: true\n                          });\n\n                          _this.setState({\n                            show: true\n                          });\n                        } else {\n                          _this.setState({\n                            userValid: false\n                          });\n\n                          _this.setState({\n                            show: true\n                          });\n                        }\n                      }\n                    });\n                  } catch (error) {\n                    console.log(error);\n                  }\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    });\n\n    _this.state = {\n      displayName: '',\n      email: '',\n      prevPassword: '',\n      password: '',\n      prevConfirmPassword: '',\n      userValid: true,\n      show: false\n    };\n    return _this;\n  }\n\n  _createClass(SignUp, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          displayName = _this$state2.displayName,\n          email = _this$state2.email,\n          prevPassword = _this$state2.prevPassword,\n          prevConfirmPassword = _this$state2.prevConfirmPassword;\n\n      var handleClose = function handleClose() {\n        return _this2.setState({\n          show: false\n        });\n      };\n\n      return /*#__PURE__*/_jsxs(\"div\", {\n        className: styles.signup,\n        children: [/*#__PURE__*/_jsx(\"h2\", {\n          className: \"title\",\n          children: \"I do not have a account\"\n        }), /*#__PURE__*/_jsx(\"span\", {\n          children: \"Sign up with your email and password\"\n        }), /*#__PURE__*/_jsxs(\"form\", {\n          className: \"sign-up-form\",\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsx(FormInput, {\n            type: \"text\",\n            name: \"displayName\",\n            value: displayName,\n            onChange: this.handleChange,\n            label: \"Display Name\",\n            required: true\n          }), /*#__PURE__*/_jsx(FormInput, {\n            type: \"email\",\n            name: \"email\",\n            value: email,\n            onChange: this.handleChange,\n            label: \"Email\",\n            required: true\n          }), /*#__PURE__*/_jsx(FormInput, {\n            type: \"password\",\n            name: \"prevPassword\",\n            value: prevPassword,\n            onChange: this.handleChange,\n            label: \"Password\",\n            required: true\n          }), /*#__PURE__*/_jsx(FormInput, {\n            type: \"password\",\n            name: \"prevConfirmPassword\",\n            value: prevConfirmPassword,\n            onChange: this.handleChange,\n            label: \"Confirm Password\",\n            required: true\n          }), /*#__PURE__*/_jsx(CustomButton, {\n            type: \"submit\",\n            children: \"SIGN UP\"\n          })]\n        }), /*#__PURE__*/_jsxs(Modal, {\n          show: this.state.show,\n          onHide: handleClose,\n          children: [/*#__PURE__*/_jsx(Modal.Header, {\n            closeButton: true,\n            children: /*#__PURE__*/_jsx(Modal.Title, {\n              children: \"Report\"\n            })\n          }), this.state.userValid == true ? /*#__PURE__*/_jsxs(Modal.Body, {\n            children: [\"New User :\", this.state.displayName, \" is Created with Email : \", this.state.email, \" \"]\n          }) : /*#__PURE__*/_jsxs(Modal.Body, {\n            children: [\"Email : \", this.state.email, \" Is Already Registered.\"]\n          }), /*#__PURE__*/_jsx(Modal.Footer, {\n            children: /*#__PURE__*/_jsx(Button, {\n              variant: \"primary\",\n              onClick: handleClose,\n              children: \"Close\"\n            })\n          })]\n        })]\n      });\n    }\n  }]);\n\n  return SignUp;\n}(React.Component);\n\nexport default SignUp;","map":null,"metadata":{},"sourceType":"module"}