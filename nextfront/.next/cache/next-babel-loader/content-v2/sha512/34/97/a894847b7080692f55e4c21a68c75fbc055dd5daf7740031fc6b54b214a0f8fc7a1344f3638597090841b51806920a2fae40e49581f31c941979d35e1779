{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/components/userbystate.component.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport { DropdownButton, Dropdown, Button, Form } from \"react-bootstrap\";\nimport Link from 'next/link'; // import './userbystate.styles.css';\n\nimport { withRouter } from 'next/router';\nexport var StateSelect = /*#__PURE__*/function (_React$Component) {\n  _inherits(StateSelect, _React$Component);\n\n  var _super = _createSuper(StateSelect);\n\n  function StateSelect(props) {\n    var _this;\n\n    _classCallCheck(this, StateSelect);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"statefetch\", function (countryid) {\n      fetch(\"http://localhost:5000/country/\".concat(countryid)).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this.setState({\n          states: data\n        });\n      });\n    });\n\n    _this.state = {\n      states: [],\n      users: null,\n      selectedstatename: null,\n      selectedstateid: null\n    };\n    return _this;\n  }\n\n  _createClass(StateSelect, [{\n    key: \"statedown\",\n    value: function statedown(value) {\n      console.log(\"statedown --> \", value);\n\n      if (value === \"India\") {\n        this.statefetch(1);\n        console.log(\"this.state\", this.state.states);\n      } else if (value === \"Usa\") {\n        this.statefetch(2);\n        console.log(\"this.state\", this.state.states);\n      } else if (value == \"\") {\n        this.setState({\n          states: null\n        });\n      }\n    }\n  }, {\n    key: \"statedropdown\",\n    value: function statedropdown(value) {\n      var _this2 = this;\n\n      if (value != \"\") {\n        var statedata = value.split(\",\");\n        var statename = statedata[0];\n        var stateid = statedata[1];\n        fetch(\"http://localhost:5000/users/state/\".concat(stateid)).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          _this2.setState({\n            users: data\n          });\n        });\n        this.setState({\n          selectedstatename: statename\n        });\n        this.setState({\n          selectedstateid: stateid\n        });\n      } else {\n        this.setState({\n          selectedstatename: null\n        });\n        this.setState({\n          selectedstateid: null\n        });\n      }\n    } // handleClick = (e) => {\n    //     const router = useRouter()\n    //     e.preventDefault()\n    //     router.push()\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      // const ButtonLink = React.forwardRef(({ onClick, href , ref}) => {\n      //     return (\n      //         <a href={href} onClick={onClick} ref={this.state.selectedstateid}>\n      //             {ref}\n      //         </a>\n      //     )\n      // })\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-div\",\n        children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row mx-0\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"col-md-4\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Country\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                onChange: function onChange(e) {\n                  return _this3.statedown(e.target.value);\n                },\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"---Select Country---\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"India\",\n                  children: \"India\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Usa\",\n                  children: \"Usa\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"col-md-4\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"State\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                onChange: function onChange(event) {\n                  return _this3.statedropdown(event.target.value);\n                },\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"---Select State---\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 33\n                }, this), this.state.states != null ? this.state.states.map(function (state) {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: [[state.statename], [state.id]],\n                    children: state.statename\n                  }, state.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 97\n                  }, _this3);\n                }) : \"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 25\n            }, this), console.log(\"users: ==>\", this.state.users), this.state.users != \"Users Not Found\" && this.state.users != null ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-4\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: [\"Selected State : \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: \"blue\"\n                    },\n                    children: this.state.selectedstatename\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 164\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 135\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  onClick: function onClick() {\n                    router.push({\n                      pathname: '/users/[stateid]',\n                      query: {\n                        stateid: _this3.state.selectedstateid\n                      }\n                    });\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"info\",\n                    size: \"sm\",\n                    children: \"Search Users\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 364\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 248\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 102\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 97\n            }, this) : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return StateSelect;\n}(React.Component);","map":{"version":3,"sources":["/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/components/userbystate.component.js"],"names":["React","DropdownButton","Dropdown","Button","Form","Link","withRouter","StateSelect","props","countryid","fetch","then","response","json","data","setState","states","state","users","selectedstatename","selectedstateid","value","console","log","statefetch","statedata","split","statename","stateid","e","statedown","target","event","statedropdown","map","id","color","router","push","pathname","query","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { DropdownButton, Dropdown, Button, Form } from \"react-bootstrap\";\nimport Link from 'next/link';\n// import './userbystate.styles.css';\nimport { withRouter } from 'next/router'\n\n\n       \n\n\n\nexport class StateSelect extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            states: [],\n            users: null,\n            selectedstatename: null,\n            selectedstateid: null\n        }\n    }\n\n    statefetch = (countryid) => {\n        fetch(`http://localhost:5000/country/${countryid}`)\n            .then((response) => response.json())\n            .then(data => {\n                this.setState({ states: data });\n            });\n\n    }\n\n    statedown(value) {\n\n        console.log(\"statedown --> \", value)\n\n        if (value === \"India\") {\n            this.statefetch(1);\n            console.log(\"this.state\", this.state.states)\n        } else if (value === \"Usa\") {\n            this.statefetch(2);\n            console.log(\"this.state\", this.state.states)\n        } else if (value == \"\") {\n            this.setState({ states: null })\n        }\n    }\n    statedropdown(value) {\n        if (value != \"\") {\n            const statedata = value.split(\",\")\n            const statename = statedata[0]\n            const stateid = statedata[1]\n            fetch(`http://localhost:5000/users/state/${stateid}`)\n                .then((response) => response.json())\n                .then(data => {\n                    this.setState({ users: data });\n                });\n            this.setState({ selectedstatename: statename })\n            this.setState({ selectedstateid: stateid })\n\n        } else {\n            this.setState({ selectedstatename: null })\n            this.setState({ selectedstateid: null })\n        }\n\n    }\n    // handleClick = (e) => {\n    //     const router = useRouter()\n    //     e.preventDefault()\n    //     router.push()\n    // }\n\n    \n\n    render() {\n        // const ButtonLink = React.forwardRef(({ onClick, href , ref}) => {\n        //     return (\n        //         <a href={href} onClick={onClick} ref={this.state.selectedstateid}>\n        //             {ref}\n        //         </a>\n        //     )\n        // })\n        \n        return (\n            <div className=\"main-div\">\n                <fieldset>\n\n                    <div className=\"row mx-0\">\n                        <Form.Group className=\"col-md-4\">\n                            <Form.Label>Country</Form.Label>\n                            <Form.Control as=\"select\" onChange={(e) => this.statedown(e.target.value)} required>\n                                <option value=\"\">---Select Country---</option>\n                                <option value=\"India\">India</option>\n                                <option value=\"Usa\">Usa</option>\n\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group className=\"col-md-4\">\n                            <Form.Label>State</Form.Label>\n                            <Form.Control as=\"select\" onChange={(event) => this.statedropdown(event.target.value)} required>\n                                <option value=\"\">---Select State---</option>\n                                {/* { if (this.state.states != null){\n                                this.state.states.map(state => (\n                                    <option key={state.id} value={[[state.statename], [state.id]]}>{state.statename}</option>\n                                ))}\n                        } */}\n                                {(this.state.states != null) ? (this.state.states.map(state => (<option key={state.id} value={[[state.statename], [state.id]]}>{state.statename}</option>))) : \"\"}\n\n                            </Form.Control>\n\n                        </Form.Group>\n                        {console.log(\"users: ==>\", this.state.users)}\n                        {(this.state.users != \"Users Not Found\" && this.state.users != null) ? (<div><Form.Group className=\"col-md-4\"><Form.Label>Selected State : <span style={{ color: \"blue\" }}>{this.state.selectedstatename}</span> </Form.Label ><Link onClick={() => {router.push({ pathname: '/users/[stateid]', query: {stateid: this.state.selectedstateid} })}}><Button variant=\"info\" size=\"sm\">Search Users</Button></Link></Form.Group></div>) : \"\"}\n                        {/* {(this.state.users != \"Users Not Found\" && this.state.users != null) ? (<div><Form.Group className=\"col-md-4\"><Form.Label>Selected State : <span style={{ color: \"blue\" }}>{this.state.selectedstatename}</span> </Form.Label><Link href=\"/users\" ref={this.state.selectedstateid} passHref>\n                        <Button variant=\"info\" size=\"sm\">Search Users {this.state.selectedstateid}</Button>\n                        </Link></Form.Group></div>) : \"\"} */}\n\n                    </div>\n\n                </fieldset>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}