{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/components/tasks.component.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Button, Form, Modal } from 'react-bootstrap';\n\nclass UserTasks extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleChange\", e => {\n      // e.preventDefault();\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      }, () => console.log(this.state));\n    });\n\n    _defineProperty(this, \"handleAddTask\", e => {\n      e.preventDefault();\n      fetch('http://127.0.0.1:5000/tasks/create', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(this.state)\n      }).then(r => r.json()).then(res => {\n        this.setState({\n          tasks: res\n        });\n      });\n      this.setState({\n        show: false\n      });\n    });\n\n    this.state = {\n      title: null,\n      comments: null,\n      status: \"\",\n      assignedto: null,\n      data: null,\n      show: false,\n      tasks: [],\n      userslist: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(`http://localhost:5000/users`).then(response => response.json()).then(data => {\n      this.setState({\n        userslist: data\n      });\n    });\n    fetch(`http://localhost:5000/tasks`).then(response => response.json()).then(data => {\n      this.setState({\n        tasks: data\n      });\n    });\n  }\n\n  render() {\n    const handleClose = () => this.setState({\n      show: false\n    });\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundImage: \"linear-gradient(to right, #4880EC, #019CAD)\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          children: \" Add Status \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          children: \" - \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mx-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-3 \",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"OPEN TASKS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 62\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-success card\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                marginLeft: '-24px',\n                marginRight: '-24px',\n                marginTop: '-24px',\n                borderRadius: '10px'\n              },\n              onClick: () => {\n                this.setState({\n                  show: true,\n                  status: \"Open\"\n                });\n              },\n              children: \" Add Task \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this), this.state.tasks.map(task => {\n              if (task.status == \"Open\") {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-info card\",\n                  children: [\"Task Id:\", task.id, \" Title:\", task.title, \" Task Status: \", task.status, \" Assigned To: \", task.assignedto]\n                }, task.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 43\n                }, this);\n              }\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-3 \",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"IN PROGRESS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 62\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-info card\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                marginLeft: '-24px',\n                marginRight: '-24px',\n                marginTop: '-24px',\n                borderRadius: '10px'\n              },\n              onClick: () => {\n                this.setState({\n                  show: true,\n                  status: \"In Progress\"\n                });\n              },\n              children: \" Add Task \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this), this.state.tasks.map(task => {\n              if (task.status == \"In Progress\") {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-info card\",\n                  children: [\"Task Id:\", task.id, \" Title:\", task.title, \" Task Status: \", task.status, \" Assigned To: \", task.assignedto]\n                }, task.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 43\n                }, this);\n              }\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-3 \",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"RECIEVED\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 62\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-secondary card\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                marginLeft: '-24px',\n                marginRight: '-24px',\n                marginTop: '-24px',\n                borderRadius: '10px'\n              },\n              onClick: () => {\n                this.setState({\n                  show: true,\n                  status: \"Recieved\"\n                });\n              },\n              children: \" Add Task \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this), this.state.tasks.map(task => {\n              if (task.status == \"Recieved\") {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-info card\",\n                  children: [\"Task Id:\", task.id, \" Title:\", task.title, \" Task Status: \", task.status, \" Assigned To: \", task.assignedto]\n                }, task.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 43\n                }, this);\n              }\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"CLOSED\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 62\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-warning card\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                marginLeft: '-24px',\n                marginRight: '-24px',\n                marginTop: '-24px',\n                borderRadius: '10px'\n              },\n              onClick: () => {\n                this.setState({\n                  show: true,\n                  status: \"Closed\"\n                });\n              },\n              children: \" Add Task \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this), this.state.tasks.map(task => {\n              if (task.status == \"Closed\") {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-info card\",\n                  children: [\"Task Id:\", task.id, \" Title:\", task.title, \" Task Status: \", task.status, \" Assigned To: \", task.assignedto]\n                }, task.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 43\n                }, this);\n              }\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Modal, {\n          show: this.state.show,\n          onHide: handleClose,\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            closeButton: true,\n            children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n              children: \"New Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: this.handleAddTask,\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-12\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"input\",\n                  name: \"title\",\n                  onChange: this.handleChange,\n                  placeholder: \"Enter Task Title\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-12\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Comments\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"input\",\n                  name: \"comments\",\n                  onChange: this.handleChange,\n                  placeholder: \"Enter Comments\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-12\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Task Progress\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"input\",\n                  value: this.state.status,\n                  readOnly: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-12\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Assigned To :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"select\",\n                  name: \"assignedto\",\n                  onChange: this.handleChange,\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"---Select User---\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 41\n                  }, this), this.state.userslist.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: user.firstname,\n                    children: [user.firstname, \" \", user.lastname, \" Id: \", user.id]\n                  }, user.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 45\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"success\",\n                  className: \"submit-button\",\n                  type: \"submit\",\n                  children: \"Add Task\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"danger\",\n                  onClick: handleClose,\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\nexport default UserTasks;","map":{"version":3,"sources":["/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/components/tasks.component.js"],"names":["React","Button","Form","Modal","UserTasks","Component","constructor","props","e","name","value","target","setState","console","log","state","preventDefault","fetch","method","headers","body","JSON","stringify","then","r","json","res","tasks","show","title","comments","status","assignedto","data","userslist","componentDidMount","response","render","handleClose","backgroundImage","textAlign","marginLeft","marginRight","marginTop","borderRadius","map","task","id","handleAddTask","handleChange","user","firstname","lastname"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Form, Modal } from 'react-bootstrap';\n\n\nclass UserTasks extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: null,\n            comments: null,\n            status: \"\",\n            assignedto: null,\n            data: null,\n            show: false,\n            tasks: [],\n            userslist: [],\n\n        }\n    }\n\n    \n    componentDidMount() {\n        fetch(`http://localhost:5000/users`)\n            .then((response) => response.json())\n            .then(data => {\n                this.setState({ userslist: data });\n            });\n        fetch(`http://localhost:5000/tasks`)\n            .then((response) => response.json())\n            .then(data => {\n                this.setState({ tasks: data });\n            });\n\n\n    }\n\n    handleChange = e => {\n        // e.preventDefault();\n        const { name, value } = e.target;\n        this.setState({ [name]: value }, () => console.log(this.state));\n    };\n\n    handleAddTask = e => {\n        e.preventDefault()\n        fetch('http://127.0.0.1:5000/tasks/create', {\n            method: 'POST',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify(this.state)\n        }).then(r => r.json())\n            .then(res => { this.setState({\n                tasks: res\n            }) })\n        this.setState({ show:false })\n    }\n\n\n    render() {\n        const handleClose = () => this.setState({ show: false });\n        return (\n            <div style={{ backgroundImage: \"linear-gradient(to right, #4880EC, #019CAD)\" }}>\n                <div >\n                    <Button variant=\"success\" > Add Status </Button>\n                    <Button variant=\"danger\" > - </Button>\n                </div>\n                <div className=\"row mx-3\"  >\n                    <div className=\"col-md-3 \" >\n                        <div style={{ textAlign: 'center' }}><h3>OPEN TASKS</h3></div>\n                        <div className=\"bg-success card\" >\n                            <Button style={{ marginLeft: '-24px', marginRight: '-24px', marginTop: '-24px', borderRadius: '10px' }} onClick={() => { this.setState({ show: true, status: \"Open\" }) }} > Add Task </Button>\n\n                            {this.state.tasks.map((task) => {\n                                if (task.status == \"Open\") {\n                                   return <div key={task.id} className=\"bg-info card\">Task Id:{task.id} Title:{task.title} Task Status: {task.status} Assigned To: {task.assignedto}</div>\n                                }\n                            })}\n                        </div>\n                    </div>\n\n                    <div className=\"col-md-3 \">\n                        <div style={{ textAlign: 'center' }}><h3>IN PROGRESS</h3></div>\n                        <div className=\"bg-info card\">\n                            <Button style={{ marginLeft: '-24px', marginRight: '-24px', marginTop: '-24px', borderRadius: '10px' }} onClick={() => { this.setState({ show: true, status: \"In Progress\" }) }}> Add Task </Button>\n                            {this.state.tasks.map((task) => {\n                                if (task.status == \"In Progress\") {\n                                   return <div key={task.id} className=\"bg-info card\">Task Id:{task.id} Title:{task.title} Task Status: {task.status} Assigned To: {task.assignedto}</div>\n                                }\n                            })}\n                        </div>\n\n                    </div>\n\n                    <div className=\"col-md-3 \">\n                        <div style={{ textAlign: 'center' }}><h3>RECIEVED</h3></div>\n                        <div className=\"bg-secondary card\">\n                            <Button style={{ marginLeft: '-24px', marginRight: '-24px', marginTop: '-24px', borderRadius: '10px' }} onClick={() => { this.setState({ show: true, status: \"Recieved\" }) }}> Add Task </Button>\n                            {this.state.tasks.map((task) => {\n                                if (task.status == \"Recieved\") {\n                                   return <div key={task.id} className=\"bg-info card\">Task Id:{task.id} Title:{task.title} Task Status: {task.status} Assigned To: {task.assignedto}</div>\n                                }\n                            })}\n                        </div>\n                    </div>\n\n                    <div className=\"col-md-3\">\n                        <div style={{ textAlign: 'center' }}><h3>CLOSED</h3></div>\n                        <div className=\"bg-warning card\">\n                            <Button style={{ marginLeft: '-24px', marginRight: '-24px', marginTop: '-24px', borderRadius: '10px' }} onClick={() => { this.setState({ show: true, status: \"Closed\" }) }}> Add Task </Button>\n                            {this.state.tasks.map((task) => {\n                                if (task.status == \"Closed\") {\n                                   return <div key={task.id} className=\"bg-info card\">Task Id:{task.id} Title:{task.title} Task Status: {task.status} Assigned To: {task.assignedto}</div>\n                                }\n                            })}\n                        </div>\n                    </div>\n                </div>\n                <div>\n\n                    <Modal show={this.state.show} onHide={handleClose}>\n                        <Modal.Header closeButton>\n                            <Modal.Title>New Task</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <Form onSubmit={this.handleAddTask}>\n                                <Form.Group className=\"col-md-12\">\n                                    <Form.Label>Title</Form.Label>\n                                    <Form.Control type=\"input\" name=\"title\" onChange={this.handleChange} placeholder=\"Enter Task Title\" required ></Form.Control>\n                                </Form.Group>\n                                <Form.Group className=\"col-md-12\">\n                                    <Form.Label>Comments</Form.Label>\n                                    <Form.Control type=\"input\" name=\"comments\" onChange={this.handleChange} placeholder=\"Enter Comments\" ></Form.Control>\n                                </Form.Group>\n                                <Form.Group className=\"col-md-12\">\n                                    <Form.Label>Task Progress</Form.Label>\n                                    <Form.Control type=\"input\" value={this.state.status} readOnly></Form.Control>\n                                </Form.Group>\n                                <Form.Group className=\"col-md-12\">\n                                    <Form.Label>Assigned To :</Form.Label>\n                                    <Form.Control as=\"select\" name=\"assignedto\" onChange={this.handleChange} required>\n                                        <option value=\"\">---Select User---</option>\n                                        {this.state.userslist.map(user => (\n                                            <option key={user.id} value={user.firstname}>{user.firstname} {user.lastname} Id: {user.id}</option>\n                                        ))}\n                                    </Form.Control>\n                                </Form.Group>\n                                <Modal.Footer>\n                                    <Button variant=\"success\" className=\"submit-button\" type=\"submit\">\n                                        Add Task\n                                     </Button>\n                                    <Button variant=\"danger\" onClick={handleClose}>\n                                        Cancel\n                                     </Button>\n                                </Modal.Footer>\n                            </Form>\n                        </Modal.Body>\n\n                    </Modal>\n\n                </div>\n            </div>\n        )\n    }\n\n};\n\nexport default UserTasks;"]},"metadata":{},"sourceType":"module"}