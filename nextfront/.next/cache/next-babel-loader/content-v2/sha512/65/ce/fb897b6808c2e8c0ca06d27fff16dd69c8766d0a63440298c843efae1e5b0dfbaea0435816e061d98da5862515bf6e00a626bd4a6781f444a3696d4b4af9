{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { DropdownButton, Dropdown, Button, Form } from \"react-bootstrap\";\nimport Link from 'next/link'; // import './userbystate.styles.css';\n\nimport { withRouter } from 'next/router'; // import { WithRouterProps } from 'next/dist/client/with-router';\n// const router = withRouter();\n\nclass StateSelect extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"statefetch\", countryid => {\n      fetch(`http://localhost:5000/country/${countryid}`).then(response => response.json()).then(data => {\n        this.setState({\n          states: data\n        });\n      });\n    });\n\n    this.state = {\n      states: [],\n      users: null,\n      selectedstatename: null,\n      selectedstateid: null\n    };\n  }\n\n  statedown(value) {\n    console.log(\"statedown --> \", value);\n\n    if (value === \"India\") {\n      this.statefetch(1);\n      console.log(\"this.state\", this.state.states);\n    } else if (value === \"Usa\") {\n      this.statefetch(2);\n      console.log(\"this.state\", this.state.states);\n    } else if (value == \"\") {\n      this.setState({\n        states: null\n      });\n    }\n  }\n\n  statedropdown(value) {\n    if (value != \"\") {\n      const statedata = value.split(\",\");\n      const statename = statedata[0];\n      const stateid = statedata[1];\n      fetch(`http://localhost:5000/users/state/${stateid}`).then(response => response.json()).then(data => {\n        this.setState({\n          users: data\n        });\n      });\n      this.setState({\n        selectedstatename: statename\n      });\n      this.setState({\n        selectedstateid: stateid\n      });\n    } else {\n      this.setState({\n        selectedstatename: null\n      });\n      this.setState({\n        selectedstateid: null\n      });\n    }\n  } // handleClick = (e) => {\n  //     const router = useRouter()\n  //     e.preventDefault()\n  //     router.push()\n  // }\n\n\n  render() {\n    // const ButtonLink = React.forwardRef(({ onClick, href , ref}) => {\n    //     return (\n    //         <a href={href} onClick={onClick} ref={this.state.selectedstateid}>\n    //             {ref}\n    //         </a>\n    //     )\n    // })\n    const {\n      router\n    } = this.props;\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: \"main-div\",\n      children: /*#__PURE__*/_jsx(\"fieldset\", {\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"row mx-0\",\n          children: [/*#__PURE__*/_jsxs(Form.Group, {\n            className: \"col-md-4\",\n            children: [/*#__PURE__*/_jsx(Form.Label, {\n              children: \"Country\"\n            }), /*#__PURE__*/_jsxs(Form.Control, {\n              as: \"select\",\n              onChange: e => this.statedown(e.target.value),\n              required: true,\n              children: [/*#__PURE__*/_jsx(\"option\", {\n                value: \"\",\n                children: \"---Select Country---\"\n              }), /*#__PURE__*/_jsx(\"option\", {\n                value: \"India\",\n                children: \"India\"\n              }), /*#__PURE__*/_jsx(\"option\", {\n                value: \"Usa\",\n                children: \"Usa\"\n              })]\n            })]\n          }), /*#__PURE__*/_jsxs(Form.Group, {\n            className: \"col-md-4\",\n            children: [/*#__PURE__*/_jsx(Form.Label, {\n              children: \"State\"\n            }), /*#__PURE__*/_jsxs(Form.Control, {\n              as: \"select\",\n              onChange: event => this.statedropdown(event.target.value),\n              required: true,\n              children: [/*#__PURE__*/_jsx(\"option\", {\n                value: \"\",\n                children: \"---Select State---\"\n              }), this.state.states != null ? this.state.states.map(state => /*#__PURE__*/_jsx(\"option\", {\n                value: [[state.statename], [state.id]],\n                children: state.statename\n              }, state.id)) : \"\"]\n            })]\n          }), console.log(\"users: ==>\", this.state.users), this.state.users != \"Users Not Found\" && this.state.users != null ? /*#__PURE__*/_jsx(\"div\", {\n            children: /*#__PURE__*/_jsxs(Form.Group, {\n              className: \"col-md-4\",\n              children: [/*#__PURE__*/_jsxs(Form.Label, {\n                children: [\"Selected State : \", /*#__PURE__*/_jsx(\"span\", {\n                  style: {\n                    color: \"blue\"\n                  },\n                  children: this.state.selectedstatename\n                }), \" \"]\n              }), /*#__PURE__*/_jsx(Button, {\n                variant: \"info\",\n                size: \"sm\",\n                onClick: () => {\n                  router.push({\n                    pathname: '/usersbystateid/[stateid]',\n                    query: {\n                      stateid: this.state.selectedstateid\n                    }\n                  });\n                },\n                children: \"Search Users\"\n              })]\n            })\n          }) : \"\"]\n        })\n      })\n    });\n  }\n\n}\n\nexport default withRouter(StateSelect);","map":null,"metadata":{},"sourceType":"module"}