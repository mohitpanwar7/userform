{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/components/sign-up.component.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport FormInput from './form-input-sign-in-and-sign-out.component';\nimport { Button, Modal } from 'react-bootstrap';\nimport CustomButton from './custom-button.component';\nimport md5 from 'md5';\nimport styles from '../styles/'; // import './sign-up.styles.scss';\n\nclass SignUp extends React.Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"handleSubmit\", async event => {\n      event.preventDefault();\n      const encpassword = md5(this.state.prevPassword);\n      console.log(\"Enc password===>\", encpassword);\n      this.setState({\n        password: encpassword\n      }, () => {\n        const {\n          displayName,\n          email,\n          password,\n          prevPassword,\n          prevConfirmPassword\n        } = this.state;\n\n        if (prevPassword != prevConfirmPassword) {\n          alert(\"password dont match\");\n          return;\n        }\n\n        try {\n          const data = {\n            displayName: this.state.displayName,\n            email: this.state.email,\n            password: this.state.password\n          };\n          fetch('http://127.0.0.1:5000/signup', {\n            method: 'POST',\n            headers: {\n              'Content-type': 'application/json'\n            },\n            body: JSON.stringify(data)\n          }).then(response => response.json()).then(response => {\n            if (response) {\n              console.log(\"response==>\", response);\n\n              if (response != `${email} Already Registered`) {\n                this.setState({\n                  userValid: true\n                });\n                this.setState({\n                  show: true\n                });\n              } else {\n                this.setState({\n                  userValid: false\n                });\n                this.setState({\n                  show: true\n                });\n              }\n            }\n          });\n        } catch (error) {\n          console.log(error);\n        }\n      });\n    });\n\n    _defineProperty(this, \"handleChange\", event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    });\n\n    this.state = {\n      displayName: '',\n      email: '',\n      prevPassword: '',\n      password: '',\n      prevConfirmPassword: '',\n      userValid: true,\n      show: false\n    };\n  }\n\n  render() {\n    const {\n      displayName,\n      email,\n      prevPassword,\n      prevConfirmPassword\n    } = this.state;\n\n    const handleClose = () => this.setState({\n      show: false\n    });\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sign-up\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: \"I do not have a account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Sign up with your email and password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"sign-up-form\",\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"text\",\n          name: \"displayName\",\n          value: displayName,\n          onChange: this.handleChange,\n          label: \"Display Name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"email\",\n          name: \"email\",\n          value: email,\n          onChange: this.handleChange,\n          label: \"Email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"password\",\n          name: \"prevPassword\",\n          value: prevPassword,\n          onChange: this.handleChange,\n          label: \"Password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"password\",\n          name: \"prevConfirmPassword\",\n          value: prevConfirmPassword,\n          onChange: this.handleChange,\n          label: \"Confirm Password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \"SIGN UP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: this.state.show,\n        onHide: handleClose,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Report\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), this.state.userValid == true ? /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [\"New User :\", this.state.displayName, \" is Created with Email : \", this.state.email, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 56\n        }, this) : /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [\"Email : \", this.state.email, \" Is Already Registered.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 164\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SignUp;","map":{"version":3,"sources":["/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/components/sign-up.component.js"],"names":["React","FormInput","Button","Modal","CustomButton","md5","styles","SignUp","Component","constructor","event","preventDefault","encpassword","state","prevPassword","console","log","setState","password","displayName","email","prevConfirmPassword","alert","data","fetch","method","headers","body","JSON","stringify","then","response","json","userValid","show","error","name","value","target","render","handleClose","handleSubmit","handleChange"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport FormInput from './form-input-sign-in-and-sign-out.component';\nimport { Button, Modal } from 'react-bootstrap';\nimport CustomButton from './custom-button.component';\nimport md5 from 'md5';\nimport styles from '../styles/';\n\n// import './sign-up.styles.scss';\n\n\nclass SignUp extends React.Component {\n    constructor() {\n        super();\n\n\n        this.state = {\n            displayName: '',\n            email: '',\n            prevPassword: '',\n            password: '',\n            prevConfirmPassword: '',\n            userValid: true,\n            show: false,\n\n        }\n    }\n    handleSubmit = async event => {\n        event.preventDefault();\n        const encpassword = md5(this.state.prevPassword)\n        console.log(\"Enc password===>\", encpassword);\n        this.setState({ password: encpassword }, () => {\n            const { displayName, email, password, prevPassword, prevConfirmPassword } = this.state;\n\n            if (prevPassword != prevConfirmPassword) {\n                alert(\"password dont match\");\n                return;\n            }\n            try {\n                const data = {\n                    displayName: this.state.displayName,\n                    email: this.state.email,\n                    password: this.state.password,\n                }\n                fetch('http://127.0.0.1:5000/signup', {\n                    method: 'POST',\n                    headers: { 'Content-type': 'application/json' },\n                    body: JSON.stringify(data)\n                })\n                    .then(response => response.json())\n                    .then(response => {\n                        if (response) {\n                            console.log(\"response==>\", response)\n                            if (response != `${email} Already Registered`) {\n                                this.setState({ userValid: true })\n                                this.setState({ show: true })\n                            } else {\n                                this.setState({ userValid: false })\n                                this.setState({ show: true })\n                            }\n\n                        }\n                    })\n\n            } catch (error) {\n                console.log(error);\n            }\n        })\n\n    }\n    handleChange = event => {\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n\n    }\n    render() {\n        const { displayName, email, prevPassword, prevConfirmPassword } = this.state;\n        const handleClose = () => this.setState({ show: false })\n        return (\n            <div className='sign-up'>\n                <h2 className=\"title\">I do not have a account</h2>\n                <span>Sign up with your email and password</span>\n                <form className=\"sign-up-form\" onSubmit={this.handleSubmit}>\n                    <FormInput\n                        type='text'\n                        name=\"displayName\"\n                        value={displayName}\n                        onChange={this.handleChange}\n                        label='Display Name'\n                        required />\n\n                    <FormInput\n                        type='email'\n                        name=\"email\"\n                        value={email}\n                        onChange={this.handleChange}\n                        label='Email'\n                        required />\n\n                    <FormInput\n                        type='password'\n                        name=\"prevPassword\"\n                        value={prevPassword}\n                        onChange={this.handleChange}\n                        label='Password'\n                        required />\n\n                    <FormInput\n                        type='password'\n                        name=\"prevConfirmPassword\"\n                        value={prevConfirmPassword}\n                        onChange={this.handleChange}\n                        label='Confirm Password'\n                        required />\n                    <CustomButton type=\"submit\">SIGN UP</CustomButton>\n                </form>\n                <Modal show={this.state.show} onHide={handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Report</Modal.Title>\n                    </Modal.Header>\n                    {(this.state.userValid == true) ? (<Modal.Body>New User :{this.state.displayName} is Created with Email : {this.state.email} </Modal.Body>) : (<Modal.Body>Email : {this.state.email} Is Already Registered.</Modal.Body>)}\n                    <Modal.Footer>\n                        <Button variant=\"primary\" onClick={handleClose}>\n                            Close\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}