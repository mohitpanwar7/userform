{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/components/tasks.component.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { Button, Form, Modal } from 'react-bootstrap';\nimport DatePicker from './datepicker.component';\n\nvar UserTasks = /*#__PURE__*/function (_React$Component) {\n  _inherits(UserTasks, _React$Component);\n\n  var _super = _createSuper(UserTasks);\n\n  function UserTasks(props) {\n    var _this;\n\n    _classCallCheck(this, UserTasks);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      // e.preventDefault();\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n\n      _this.setState(_defineProperty({}, name, value), function () {\n        return console.log(_this.state);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleStatusChange\", function (e) {\n      // e.preventDefault();\n      var _e$target2 = e.target,\n          name = _e$target2.name,\n          value = _e$target2.value;\n      var tempobj = _this.state.addStatus;\n      tempobj[name] = value;\n\n      _this.setState({\n        addStatus: tempobj\n      }, function () {\n        return console.log(_this.state.addStatus);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleEditTaskChange\", function (e) {\n      // e.preventDefault();\n      var _e$target3 = e.target,\n          name = _e$target3.name,\n          value = _e$target3.value;\n      var tempobj = _this.state.task;\n      tempobj[name] = value;\n\n      _this.setState({\n        task: tempobj\n      }, function () {\n        return console.log(_this.state.task);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleAddTask\", function (e) {\n      e.preventDefault();\n      console.log(\"create called\");\n      fetch('/api/tasks/create', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(_this.state)\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this.setState({\n          allStatus: data\n        });\n      });\n\n      _this.setState({\n        show: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDeleteTask\", function (e) {\n      fetch(\"/api/tasks/delete/\".concat(e), {\n        method: 'POST'\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this.setState({\n          allStatus: data\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleAddStatus\", function (e) {\n      e.preventDefault();\n      fetch('/api/tasks/status/create', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(_this.state.addStatus)\n      }).then(function (r) {\n        return r.json();\n      }).then(function (res) {\n        _this.setState({\n          allStatus: res\n        });\n      });\n\n      _this.setState({\n        statusshow: false\n      }, console.log(\"this.state==>\", _this.state));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDeleteStatus\", function (e) {\n      e.preventDefault();\n      fetch(\"/api/tasks/status/delete/\".concat(_this.state.deleteStatus), {\n        method: 'POST'\n      }).then(function (r) {\n        return r.json();\n      }).then(function (res) {\n        _this.setState({\n          allStatus: res\n        });\n      });\n\n      _this.setState({\n        deletestatusshow: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleUserSelectChange\", function (e) {\n      var value = e.target.value;\n      var valuearray = value.split(\",\");\n      console.log(\"valuearray==>\", valuearray);\n      var assignedto = valuearray[0];\n      var assignedtoid = parseInt(valuearray[1]);\n\n      _this.setState({\n        assignedto: assignedto,\n        assignedtoid: assignedtoid\n      }, function () {\n        return console.log(_this.state);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleEditUserSelectChange\", function (e) {\n      var value = e.target.value;\n      var valuearray = value.split(\",\");\n      console.log(\"valuearray==>\", valuearray);\n      var assignedto = valuearray[0];\n      var assignedtoid = parseInt(valuearray[1]);\n      var tempobj = _this.state.task;\n      tempobj[\"assignedtoid\"] = assignedtoid;\n\n      _this.setState({\n        task: tempobj\n      }, function () {\n        return console.log(_this.state.task);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getDate\", function (datedata) {\n      if (datedata != null) {\n        var date = new Date(datedata);\n        var year = date.getFullYear().toString();\n        var month = (date.getMonth() + 1).toString();\n        var day = date.getDate().toString();\n        day.length == 1 && (day = '0' + day);\n        month.length == 1 && (month = '0' + month);\n        var yyyymmdd = year + '-' + month + '-' + day;\n        return yyyymmdd;\n      } else {\n        return null;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleEditTask\", function (task, statusname, statussequence) {\n      console.log(\"task\", task);\n\n      _this.setState({\n        edittaskshow: true,\n        task: task,\n        selectedstatusname: statusname,\n        selectedstatussequence: statussequence\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleEditTaskSubmit\", function (e) {\n      e.preventDefault();\n      console.log(\"submit called\");\n      fetch('/api/tasks/edit', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(_this.state.task)\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this.setState({\n          allStatus: data\n        });\n      });\n\n      _this.setState({\n        edittaskshow: false\n      });\n    });\n\n    _this.state = {\n      title: '',\n      comments: null,\n      taskstatus: '',\n      taskdeadline: null,\n      taskassigndate: '',\n      selectedstatusid: '',\n      selectedstatusname: '',\n      selectedstatussequence: '',\n      assignedto: null,\n      assignedtoid: null,\n      data: null,\n      show: false,\n      task: {},\n      tasks: [],\n      datepickershow: false,\n      taskByStatusId: [],\n      userslist: [],\n      statusshow: false,\n      edittaskshow: false,\n      deletestatusshow: false,\n      addStatus: {\n        statusname: \"\",\n        statussequence: \"\"\n      },\n      deleteStatus: null,\n      allStatus: []\n    };\n    return _this;\n  }\n\n  _createClass(UserTasks, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"/api/users\").then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this2.setState({\n          userslist: data\n        });\n      }); // fetch(`/api/tasks`)\n      //     .then((response) => response.json())\n      //     .then(data => {\n      //         this.setState({ tasks: data });\n      //     });\n\n      fetch(\"/api/status/tasks/all\").then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this2.setState({\n          allStatus: data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var handleClose = function handleClose() {\n        return _this3.setState({\n          show: false\n        });\n      };\n\n      var handleEditTaskClose = function handleEditTaskClose() {\n        return _this3.setState({\n          edittaskshow: false\n        });\n      };\n\n      var handleAddStatusClose = function handleAddStatusClose() {\n        return _this3.setState({\n          statusshow: false\n        });\n      };\n\n      var handleDeleteStatusClose = function handleDeleteStatusClose() {\n        return _this3.setState({\n          deletestatusshow: false\n        });\n      };\n\n      console.log(\"allStatus ===>\", this.state.allStatus);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'right'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"info\",\n            onClick: function onClick() {\n              _this3.setState({\n                datepickershow: true\n              });\n            },\n            style: {\n              marginTop: '15px',\n              marginBottom: '15px',\n              marginRight: '20px'\n            },\n            children: \"Tasks Timeline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            onClick: function onClick() {\n              _this3.setState({\n                datepickershow: true\n              });\n            },\n            style: {\n              marginTop: '15px',\n              marginBottom: '15px',\n              marginRight: '20px'\n            },\n            children: \" Add Status Type \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 21\n          }, this), this.state.allStatus.length > 0 ? /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: function onClick() {\n              _this3.setState({\n                deletestatusshow: true\n              });\n            },\n            style: {\n              marginLeft: '10px',\n              marginTop: '15px',\n              marginBottom: '15px',\n              marginRight: '20px'\n            },\n            children: \" Delete Status Type \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 57\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 17\n        }, this), this.state.datepickershow == false ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row mx-3\",\n          children: this.state.allStatus.map(function (status) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-3 \",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textAlign: 'center'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [status.statusname, \" (\", status.taskcount, \") \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 70\n                }, _this3)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 33\n              }, _this3), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card\",\n                style: {\n                  backgroundColor: '#b3b3b3',\n                  color: '#e6e6e6'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  style: {\n                    marginLeft: '-24px',\n                    marginRight: '-24px',\n                    marginTop: '-24px',\n                    borderRadius: '10px'\n                  },\n                  onClick: function onClick() {\n                    _this3.setState({\n                      show: true,\n                      selectedstatusid: status.id,\n                      selectedstatusname: status.statusname,\n                      selectedstatussequence: status.statussequence\n                    });\n                  },\n                  children: \" Add Task \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 37\n                }, _this3), status.alltasks.map(function (task) {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"bg-info card\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        textAlign: 'right',\n                        position: 'absolute',\n                        right: '10px',\n                        top: '8px'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        variant: \"transparent\",\n                        onClick: function onClick() {\n                          return _this3.handleDeleteTask(task.id);\n                        },\n                        children: \"X\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 230,\n                        columnNumber: 134\n                      }, _this3)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 230,\n                      columnNumber: 49\n                    }, _this3), /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        textAlign: 'right',\n                        position: 'absolute',\n                        right: '40px',\n                        top: '7px'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        variant: \"transparent\",\n                        onClick: function onClick() {\n                          return _this3.handleEditTask(task, status.statusname, status.statussequence);\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"img\", {\n                          src: \"/pencil.svg\",\n                          alt: \"editicon\",\n                          height: \"14px\",\n                          weight: \"14px\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 231,\n                          columnNumber: 248\n                        }, _this3)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 231,\n                        columnNumber: 134\n                      }, _this3)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 231,\n                      columnNumber: 49\n                    }, _this3), /*#__PURE__*/_jsxDEV(\"ul\", {\n                      style: {\n                        listStyle: 'none',\n                        padding: '0px'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                        children: [\"Id:\", task.id, \" \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 233,\n                        columnNumber: 53\n                      }, _this3), /*#__PURE__*/_jsxDEV(\"li\", {\n                        children: [\"Title:\", task.title]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 234,\n                        columnNumber: 53\n                      }, _this3), /*#__PURE__*/_jsxDEV(\"li\", {\n                        children: [\"Assigned To: \", task.firstname, \" \", task.lastname]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 235,\n                        columnNumber: 53\n                      }, _this3), task.taskassigndate ? /*#__PURE__*/_jsxDEV(\"li\", {\n                        children: [\"Assigned Date: \", _this3.getDate(task.taskassigndate), \" \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 236,\n                        columnNumber: 77\n                      }, _this3) : \"\", task.taskdeadline ? /*#__PURE__*/_jsxDEV(\"li\", {\n                        children: [\"Task Deadline: \", _this3.getDate(task.taskdeadline), \" \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 237,\n                        columnNumber: 75\n                      }, _this3) : '']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 232,\n                      columnNumber: 49\n                    }, _this3)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 45\n                  }, _this3);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 33\n              }, _this3)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 29\n            }, _this3);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 56\n        }, this) : /*#__PURE__*/_jsxDEV(DatePicker, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Modal, {\n            show: this.state.deletestatusshow,\n            onHide: handleDeleteStatusClose,\n            children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n              closeButton: true,\n              children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n                children: \"Delete Status Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: function onSubmit(e) {\n                  return _this3.handleDeleteStatus(e);\n                },\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"col-md-12\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Status :\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"select\",\n                    onChange: function onChange(e) {\n                      return _this3.handleChange(e);\n                    },\n                    name: \"deleteStatus\",\n                    required: true,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"---Select Status---\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 257,\n                      columnNumber: 41\n                    }, this), this.state.allStatus.map(function (status) {\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: status.id,\n                        children: [\" \", status.statusname, \" , Sequence : \", status.statussequence, \" \"]\n                      }, status.id, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 259,\n                        columnNumber: 45\n                      }, _this3);\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"info\",\n                    className: \"submit-button\",\n                    type: \"submit\",\n                    children: \"Delete Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"danger\",\n                    onClick: handleDeleteStatusClose,\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            show: this.state.statusshow,\n            onHide: handleAddStatusClose,\n            children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n              closeButton: true,\n              children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n                children: \"Add Status Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: function onSubmit(e) {\n                  return _this3.handleAddStatus(e);\n                },\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"col-md-12\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Status Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"input\",\n                    name: \"statusname\",\n                    onChange: this.handleStatusChange,\n                    placeholder: \"Enter Status Name\",\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"col-md-12\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Status Sequence\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"number\",\n                    min: \"1\",\n                    name: \"statussequence\",\n                    onChange: this.handleStatusChange,\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"success\",\n                    className: \"submit-button\",\n                    type: \"submit\",\n                    children: \"Add Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"danger\",\n                    onClick: handleAddStatusClose,\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            show: this.state.show,\n            onHide: handleClose,\n            children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n              closeButton: true,\n              children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n                children: \"Add Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: this.handleAddTask,\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"col-md-12\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Title\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 310,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"input\",\n                    name: \"title\",\n                    onChange: this.handleChange,\n                    placeholder: \"Enter Task Title\",\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"col-md-12\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Comments\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 314,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"input\",\n                    name: \"comments\",\n                    onChange: this.handleChange,\n                    placeholder: \"Enter Comments\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 315,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"col-md-12\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Task Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 319,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"select\",\n                    name: \"selectedstatusid\",\n                    onChange: this.handleChange,\n                    required: true,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: this.state.selectedstatusid,\n                      children: [this.state.selectedstatusname, \" , Sequence : \", this.state.selectedstatussequence, \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 322,\n                      columnNumber: 41\n                    }, this), this.state.allStatus.map(function (status) {\n                      if (status.id != _this3.state.selectedstatusid) {\n                        return /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: status.id,\n                          children: [\" \", status.statusname, \" , Sequence : \", status.statussequence, \" \"]\n                        }, status.id, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 325,\n                          columnNumber: 57\n                        }, _this3);\n                      }\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"col-md-12\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Assigned To :\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 331,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"select\",\n                    name: \"assignedto\",\n                    onChange: this.handleUserSelectChange,\n                    required: true,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"---Select User---\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 333,\n                      columnNumber: 41\n                    }, this), this.state.userslist.map(function (user) {\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: [[\"\".concat(user.firstname, \" \").concat(user.lastname)], [user.id]],\n                        children: [user.firstname, \" \", user.lastname, \" Id: \", user.id]\n                      }, user.id, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 335,\n                        columnNumber: 45\n                      }, _this3);\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 332,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"col-md-12\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Task Assign Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 340,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"date\",\n                    min: \"2020-01-01\",\n                    max: \"2025-12-31\",\n                    name: \"taskassigndate\",\n                    onChange: this.handleChange,\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 341,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"col-md-12\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Task Deadline\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 344,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"date\",\n                    min: \"2020-01-01\",\n                    max: \"2025-12-31\",\n                    name: \"taskdeadline\",\n                    onChange: this.handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 345,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"success\",\n                    className: \"submit-button\",\n                    type: \"submit\",\n                    children: \"Add Task\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 348,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"danger\",\n                    onClick: handleClose,\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 351,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            show: this.state.edittaskshow,\n            onHide: handleEditTaskClose,\n            children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n              closeButton: true,\n              children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n                children: [\"Edit Task (Id: \", this.state.task.id, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: this.handleEditTaskSubmit,\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"col-md-12\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Title\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 367,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"input\",\n                    name: \"title\",\n                    defaultValue: this.state.task.title,\n                    onChange: this.handleEditTaskChange,\n                    placeholder: \"Enter Task Title\",\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 368,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"col-md-12\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Comments\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 371,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"input\",\n                    name: \"comments\",\n                    defaultValue: this.state.task.comments,\n                    onChange: this.handleEditTaskChange,\n                    placeholder: \"Enter Comments\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 372,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"col-md-12\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Task Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 376,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"select\",\n                    name: \"statusid\",\n                    defaultValue: this.state.task.statusid,\n                    onChange: this.handleEditTaskChange,\n                    required: true,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: this.state.task.statusid,\n                      children: [this.state.selectedstatusname, \" , Sequence : \", this.state.selectedstatussequence, \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 379,\n                      columnNumber: 41\n                    }, this), this.state.allStatus.map(function (status) {\n                      if (status.id != _this3.state.task.statusid) {\n                        return /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: status.id,\n                          children: [\" \", status.statusname, \" , Sequence : \", status.statussequence, \" \"]\n                        }, status.id, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 382,\n                          columnNumber: 57\n                        }, _this3);\n                      }\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 377,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"col-md-12\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Assigned To :\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 388,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"select\",\n                    name: \"assignedto\",\n                    defaultValue: [[\"\".concat(this.state.task.firstname, \" \").concat(this.state.task.lastname)], [this.state.task.assignedtoid]],\n                    onChange: this.handleEditUserSelectChange,\n                    required: true,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"---Select User---\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 390,\n                      columnNumber: 41\n                    }, this), this.state.userslist.map(function (user) {\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: [[\"\".concat(user.firstname, \" \").concat(user.lastname)], [user.id]],\n                        children: [user.firstname, \" \", user.lastname, \" Id: \", user.id]\n                      }, user.id, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 392,\n                        columnNumber: 45\n                      }, _this3);\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 389,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"col-md-12\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Task Assign Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 397,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"date\",\n                    min: \"2020-01-01\",\n                    max: \"2025-12-31\",\n                    name: \"taskassigndate\",\n                    defaultValue: this.getDate(this.state.task.taskassigndate),\n                    onChange: this.handleEditTaskChange,\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 398,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"col-md-12\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Task Deadline\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 401,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"date\",\n                    min: \"2020-01-01\",\n                    max: \"2025-12-31\",\n                    name: \"taskdeadline\",\n                    defaultValue: this.getDate(this.state.task.taskdeadline),\n                    onChange: this.handleEditTaskChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 402,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"success\",\n                    className: \"submit-button\",\n                    type: \"submit\",\n                    children: \"Add Task\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 405,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"danger\",\n                    onClick: handleEditTaskClose,\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 408,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return UserTasks;\n}(React.Component);\n\n;\nexport default UserTasks;","map":{"version":3,"sources":["/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/components/tasks.component.js"],"names":["React","Button","Form","Modal","DatePicker","UserTasks","props","e","target","name","value","setState","console","log","state","tempobj","addStatus","task","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","data","allStatus","show","r","res","statusshow","deleteStatus","deletestatusshow","valuearray","split","assignedto","assignedtoid","parseInt","datedata","date","Date","year","getFullYear","toString","month","getMonth","day","getDate","length","yyyymmdd","statusname","statussequence","edittaskshow","selectedstatusname","selectedstatussequence","title","comments","taskstatus","taskdeadline","taskassigndate","selectedstatusid","tasks","datepickershow","taskByStatusId","userslist","handleClose","handleEditTaskClose","handleAddStatusClose","handleDeleteStatusClose","textAlign","marginTop","marginBottom","marginRight","marginLeft","map","status","taskcount","backgroundColor","color","borderRadius","id","alltasks","position","right","top","handleDeleteTask","handleEditTask","listStyle","padding","firstname","lastname","handleDeleteStatus","handleChange","handleAddStatus","handleStatusChange","handleAddTask","handleUserSelectChange","user","handleEditTaskSubmit","handleEditTaskChange","statusid","handleEditUserSelectChange","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Form, Modal } from 'react-bootstrap';\nimport DatePicker from './datepicker.component';\n\nclass UserTasks extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: '',\n            comments: null,\n            taskstatus: '',\n            taskdeadline: null,\n            taskassigndate: '',\n            selectedstatusid: '',\n            selectedstatusname: '',\n            selectedstatussequence: '',\n            assignedto: null,\n            assignedtoid: null,\n            data: null,\n            show: false,\n            task: {},\n            tasks: [],\n            datepickershow: false,\n            taskByStatusId: [],\n            userslist: [],\n            statusshow: false,\n            edittaskshow: false,\n            deletestatusshow: false,\n            addStatus: {\n                statusname: \"\",\n                statussequence: \"\"\n            },\n            deleteStatus: null,\n            allStatus: []\n        }\n    }\n\n\n    componentDidMount() {\n        fetch(`/api/users`)\n            .then((response) => response.json())\n            .then(data => {\n                this.setState({ userslist: data });\n            });\n        // fetch(`/api/tasks`)\n        //     .then((response) => response.json())\n        //     .then(data => {\n        //         this.setState({ tasks: data });\n        //     });\n\n        fetch(`/api/status/tasks/all`)\n            .then((response) => response.json())\n            .then(data => {\n                this.setState({ allStatus: data });\n            });\n\n\n    }\n\n    handleChange = e => {\n        // e.preventDefault();\n        const { name, value } = e.target;\n        this.setState({ [name]: value }, () => console.log(this.state));\n    };\n\n    handleStatusChange = e => {\n        // e.preventDefault();\n        const { name, value } = e.target;\n        const tempobj = this.state.addStatus;\n        tempobj[name] = value\n        this.setState({ addStatus: tempobj }, () => console.log(this.state.addStatus));\n    };\n\n    handleEditTaskChange = e => {\n        // e.preventDefault();\n        const { name, value } = e.target;\n        const tempobj = this.state.task;\n        tempobj[name] = value\n        this.setState({ task: tempobj }, () => console.log(this.state.task));\n    };\n\n    handleAddTask = e => {\n        e.preventDefault()\n        console.log(\"create called\")\n        fetch('/api/tasks/create', {\n            method: 'POST',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify(this.state)\n        }).then((response) => response.json())\n            .then(data => {\n                this.setState({ allStatus: data });\n            });\n\n        this.setState({ show: false })\n    }\n\n    handleDeleteTask = e => {\n        fetch(`/api/tasks/delete/${e}`, { method: 'POST' })\n            .then((response) => response.json())\n            .then(data => {\n                this.setState({ allStatus: data });\n            });\n\n\n\n    }\n\n    handleAddStatus = e => {\n        e.preventDefault()\n        fetch('/api/tasks/status/create', {\n            method: 'POST',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify(this.state.addStatus)\n        }).then(r => r.json())\n            .then(res => {\n                this.setState({\n                    allStatus: res\n                })\n            })\n        this.setState({ statusshow: false }, console.log(\"this.state==>\", this.state))\n    }\n\n    handleDeleteStatus = e => {\n\n        e.preventDefault()\n        fetch(`/api/tasks/status/delete/${this.state.deleteStatus}`, {\n            method: 'POST'\n\n        })\n            .then(r => r.json())\n            .then(res => {\n                this.setState({\n                    allStatus: res\n                })\n            })\n        this.setState({ deletestatusshow: false });\n    }\n    handleUserSelectChange = (e) => {\n        const { value } = e.target;\n        var valuearray = value.split(\",\")\n        console.log(\"valuearray==>\", valuearray)\n        var assignedto = valuearray[0]\n        var assignedtoid = parseInt(valuearray[1])\n        this.setState({ assignedto: assignedto, assignedtoid: assignedtoid }, () => console.log(this.state));\n    }\n\n    // countTask = (id) => {\n    //     var count = 0;\n    //     var taskcount = this.state.tasks.filter(task => task.statusid == id)\n    //     count = taskcount.length;\n    //     return (\n    //         <div>({count})</div>\n    //     )\n    // }\n\n    handleEditUserSelectChange = (e) => {\n        const { value } = e.target;\n        var valuearray = value.split(\",\")\n        console.log(\"valuearray==>\", valuearray)\n        var assignedto = valuearray[0]\n        var assignedtoid = parseInt(valuearray[1])\n        const tempobj = this.state.task;\n        tempobj[\"assignedtoid\"] = assignedtoid\n        this.setState({ task: tempobj }, () => console.log(this.state.task));\n    }\n\n    getDate = (datedata) => {\n        if (datedata != null) {\n            var date = new Date(datedata);\n            var year = date.getFullYear().toString();\n            var month = (date.getMonth() + 1).toString();\n            var day = date.getDate().toString();\n            (day.length == 1) && (day = '0' + day);\n            (month.length == 1) && (month = '0' + month);\n            var yyyymmdd = year + '-' + month + '-' + day;\n            return yyyymmdd\n        } else {\n            return null\n        }\n    }\n\n    handleEditTask = (task, statusname, statussequence) => {\n        console.log(\"task\", task)\n        this.setState({ edittaskshow: true, task: task, selectedstatusname: statusname, selectedstatussequence: statussequence })\n\n    }\n\n    handleEditTaskSubmit = e => {\n        e.preventDefault()\n        console.log(\"submit called\")\n        fetch('/api/tasks/edit', {\n            method: 'POST',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify(this.state.task)\n        }).then((response) => response.json())\n            .then(data => {\n                this.setState({ allStatus: data });\n            });\n\n        this.setState({ edittaskshow: false })\n    }\n\n    render() {\n        const handleClose = () => this.setState({ show: false });\n        const handleEditTaskClose = () => this.setState({ edittaskshow: false });\n        const handleAddStatusClose = () => this.setState({ statusshow: false });\n        const handleDeleteStatusClose = () => this.setState({ deletestatusshow: false });\n        console.log(\"allStatus ===>\", this.state.allStatus)\n\n        return (\n            <div >\n                <div style={{ textAlign: 'right' }}>\n                    <Button variant=\"info\" onClick={() => { this.setState({ datepickershow: true }) }} style={{ marginTop: '15px', marginBottom: '15px', marginRight: '20px' }}>Tasks Timeline</Button>\n                    <Button variant=\"success\" onClick={() => { this.setState({ datepickershow: true }) }} style={{ marginTop: '15px', marginBottom: '15px', marginRight: '20px' }}> Add Status Type </Button>\n                    {this.state.allStatus.length > 0 ? (<Button variant=\"danger\" onClick={() => { this.setState({ deletestatusshow: true }) }} style={{ marginLeft: '10px', marginTop: '15px', marginBottom: '15px', marginRight: '20px' }}> Delete Status Type </Button>) : \"\"}\n                </div>\n\n                {this.state.datepickershow == false ? (<div className=\"row mx-3\">\n                    {this.state.allStatus.map((status) => {\n                        return (\n                            <div className=\"col-md-3 \" >\n                                <div style={{ textAlign: 'center' }}><h3>{status.statusname} ({status.taskcount}) </h3></div>\n                                <div className=\"card\" style={{ backgroundColor: '#b3b3b3', color: '#e6e6e6' }}>\n                                    <Button style={{ marginLeft: '-24px', marginRight: '-24px', marginTop: '-24px', borderRadius: '10px' }} onClick={() => { this.setState({ show: true, selectedstatusid: status.id, selectedstatusname: status.statusname, selectedstatussequence: status.statussequence }) }} > Add Task </Button>\n\n                                    {status.alltasks.map((task) => {\n\n                                        return (\n                                            <div className=\"bg-info card\">\n                                                <div style={{ textAlign: 'right', position: 'absolute', right: '10px', top: '8px' }}><Button variant=\"transparent\" onClick={() => this.handleDeleteTask(task.id)}>X</Button></div>\n                                                <div style={{ textAlign: 'right', position: 'absolute', right: '40px', top: '7px' }}><Button variant=\"transparent\" onClick={() => this.handleEditTask(task, status.statusname, status.statussequence)}><img src='/pencil.svg' alt='editicon' height=\"14px\" weight=\"14px\" /></Button></div>\n                                                <ul style={{ listStyle: 'none', padding: '0px' }}>\n                                                    <li>Id:{task.id} </li>\n                                                    <li>Title:{task.title}</li>\n                                                    <li>Assigned To: {task.firstname} {task.lastname}</li>\n                                                    {task.taskassigndate ? (<li>Assigned Date: {this.getDate(task.taskassigndate)} </li>) : \"\"}\n                                                    {task.taskdeadline ? (<li>Task Deadline: {this.getDate(task.taskdeadline)} </li>) : ''}\n                                                </ul>\n                                            </div>\n                                        )\n                                    })}\n                                </div>\n                            </div>)\n                    })}\n\n                </div>) : (<DatePicker/>) }\n                <div>\n                    <Modal show={this.state.deletestatusshow} onHide={handleDeleteStatusClose}>\n                        <Modal.Header closeButton>\n                            <Modal.Title>Delete Status Type</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <Form onSubmit={(e) => this.handleDeleteStatus(e)}>\n                                <Form.Group className=\"col-md-12\">\n                                    <Form.Label>Status :</Form.Label>\n                                    <Form.Control as=\"select\" onChange={(e) => this.handleChange(e)} name=\"deleteStatus\" required>\n                                        <option value=\"\">---Select Status---</option>\n                                        {this.state.allStatus.map(status => (\n                                            <option key={status.id} value={status.id}> {status.statusname} , Sequence : {status.statussequence} </option>\n                                        ))}\n                                    </Form.Control>\n                                </Form.Group>\n                                <Modal.Footer>\n                                    <Button variant=\"info\" className=\"submit-button\" type=\"submit\">\n                                            Delete Status\n                                     </Button>\n                                    <Button variant=\"danger\" onClick={handleDeleteStatusClose}>\n                                            Cancel\n                                     </Button>\n                                </Modal.Footer>\n                            </Form>\n                        </Modal.Body>\n\n                    </Modal>\n\n                    <Modal show={this.state.statusshow} onHide={handleAddStatusClose}>\n                        <Modal.Header closeButton>\n                            <Modal.Title>Add Status Type</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <Form onSubmit={(e) => this.handleAddStatus(e)}>\n                                <Form.Group className=\"col-md-12\">\n                                    <Form.Label>Status Name</Form.Label>\n                                    <Form.Control type=\"input\" name=\"statusname\" onChange={this.handleStatusChange} placeholder=\"Enter Status Name\" required></Form.Control>\n                                </Form.Group>\n                                <Form.Group className=\"col-md-12\">\n                                    <Form.Label>Status Sequence</Form.Label>\n                                    <Form.Control type=\"number\" min=\"1\" name=\"statussequence\" onChange={this.handleStatusChange} required></Form.Control>\n                                </Form.Group>\n                                <Modal.Footer>\n                                    <Button variant=\"success\" className=\"submit-button\" type=\"submit\">\n                                            Add Status\n                                     </Button>\n                                    <Button variant=\"danger\" onClick={handleAddStatusClose}>\n                                            Cancel\n                                     </Button>\n                                </Modal.Footer>\n                            </Form>\n                        </Modal.Body>\n\n                    </Modal>\n\n                    <Modal show={this.state.show} onHide={handleClose}>\n                        <Modal.Header closeButton>\n                            <Modal.Title>Add Task</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <Form onSubmit={this.handleAddTask}>\n                                <Form.Group className=\"col-md-12\">\n                                    <Form.Label>Title</Form.Label>\n                                    <Form.Control type=\"input\" name=\"title\" onChange={this.handleChange} placeholder=\"Enter Task Title\" required ></Form.Control>\n                                </Form.Group>\n                                <Form.Group className=\"col-md-12\">\n                                    <Form.Label>Comments</Form.Label>\n                                    <Form.Control type=\"input\" name=\"comments\" onChange={this.handleChange} placeholder=\"Enter Comments\" ></Form.Control>\n                                </Form.Group>\n\n                                <Form.Group className=\"col-md-12\">\n                                    <Form.Label>Task Status</Form.Label>\n                                    <Form.Control as=\"select\" name=\"selectedstatusid\" onChange={this.handleChange} required>\n\n                                        <option value={this.state.selectedstatusid}>{this.state.selectedstatusname} , Sequence : {this.state.selectedstatussequence} </option>\n                                        {this.state.allStatus.map(status => {\n                                            if (status.id != this.state.selectedstatusid) {\n                                                return (<option key={status.id} value={status.id}> {status.statusname} , Sequence : {status.statussequence} </option>)\n                                            }\n                                        })}\n                                    </Form.Control>\n                                </Form.Group>\n                                <Form.Group className=\"col-md-12\">\n                                    <Form.Label>Assigned To :</Form.Label>\n                                    <Form.Control as=\"select\" name=\"assignedto\" onChange={this.handleUserSelectChange} required>\n                                        <option value=\"\">---Select User---</option>\n                                        {this.state.userslist.map(user => (\n                                            <option key={user.id} value={[[`${user.firstname} ${user.lastname}`], [user.id]]}>{user.firstname} {user.lastname} Id: {user.id}</option>\n                                        ))}\n                                    </Form.Control>\n                                </Form.Group>\n                                <Form.Group className=\"col-md-12\">\n                                    <Form.Label>Task Assign Date</Form.Label>\n                                    <Form.Control type=\"date\" min=\"2020-01-01\" max=\"2025-12-31\" name=\"taskassigndate\" onChange={this.handleChange} required ></Form.Control>\n                                </Form.Group>\n                                <Form.Group className=\"col-md-12\">\n                                    <Form.Label>Task Deadline</Form.Label>\n                                    <Form.Control type=\"date\" min=\"2020-01-01\" max=\"2025-12-31\" name=\"taskdeadline\" onChange={this.handleChange}></Form.Control>\n                                </Form.Group>\n                                <Modal.Footer>\n                                    <Button variant=\"success\" className=\"submit-button\" type=\"submit\">\n                                            Add Task\n                                     </Button>\n                                    <Button variant=\"danger\" onClick={handleClose}>\n                                            Cancel\n                                     </Button>\n                                </Modal.Footer>\n                            </Form>\n                        </Modal.Body>\n\n                    </Modal>\n\n                    <Modal show={this.state.edittaskshow} onHide={handleEditTaskClose}>\n                        <Modal.Header closeButton>\n                            <Modal.Title>Edit Task (Id: {this.state.task.id})</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <Form onSubmit={this.handleEditTaskSubmit}>\n                                <Form.Group className=\"col-md-12\">\n                                    <Form.Label>Title</Form.Label>\n                                    <Form.Control type=\"input\" name=\"title\" defaultValue={this.state.task.title} onChange={this.handleEditTaskChange} placeholder=\"Enter Task Title\" required ></Form.Control>\n                                </Form.Group>\n                                <Form.Group className=\"col-md-12\">\n                                    <Form.Label>Comments</Form.Label>\n                                    <Form.Control type=\"input\" name=\"comments\" defaultValue={this.state.task.comments} onChange={this.handleEditTaskChange} placeholder=\"Enter Comments\" ></Form.Control>\n                                </Form.Group>\n\n                                <Form.Group className=\"col-md-12\">\n                                    <Form.Label>Task Status</Form.Label>\n                                    <Form.Control as=\"select\" name=\"statusid\" defaultValue={this.state.task.statusid} onChange={this.handleEditTaskChange} required>\n\n                                        <option value={this.state.task.statusid}>{this.state.selectedstatusname} , Sequence : {this.state.selectedstatussequence} </option>\n                                        {this.state.allStatus.map(status => {\n                                            if (status.id != this.state.task.statusid) {\n                                                return (<option key={status.id} value={status.id}> {status.statusname} , Sequence : {status.statussequence} </option>)\n                                            }\n                                        })}\n                                    </Form.Control>\n                                </Form.Group>\n                                <Form.Group className=\"col-md-12\">\n                                    <Form.Label>Assigned To :</Form.Label>\n                                    <Form.Control as=\"select\" name=\"assignedto\" defaultValue={[[`${this.state.task.firstname} ${this.state.task.lastname}`], [this.state.task.assignedtoid]]} onChange={this.handleEditUserSelectChange} required>\n                                        <option value=\"\">---Select User---</option>\n                                        {this.state.userslist.map(user => (\n                                            <option key={user.id} value={[[`${user.firstname} ${user.lastname}`], [user.id]]}>{user.firstname} {user.lastname} Id: {user.id}</option>\n                                        ))}\n                                    </Form.Control>\n                                </Form.Group>\n                                <Form.Group className=\"col-md-12\">\n                                    <Form.Label>Task Assign Date</Form.Label>\n                                    <Form.Control type=\"date\" min=\"2020-01-01\" max=\"2025-12-31\" name=\"taskassigndate\" defaultValue={this.getDate(this.state.task.taskassigndate)} onChange={this.handleEditTaskChange} required ></Form.Control>\n                                </Form.Group>\n                                <Form.Group className=\"col-md-12\">\n                                    <Form.Label>Task Deadline</Form.Label>\n                                    <Form.Control type=\"date\" min=\"2020-01-01\" max=\"2025-12-31\" name=\"taskdeadline\" defaultValue={this.getDate(this.state.task.taskdeadline)} onChange={this.handleEditTaskChange}></Form.Control>\n                                </Form.Group>\n                                <Modal.Footer>\n                                    <Button variant=\"success\" className=\"submit-button\" type=\"submit\">\n                                            Add Task\n                                     </Button>\n                                    <Button variant=\"danger\" onClick={handleEditTaskClose}>\n                                            Cancel\n                                     </Button>\n                                </Modal.Footer>\n                            </Form>\n                        </Modal.Body>\n\n                    </Modal>\n\n                </div>\n            </div>\n        )\n    }\n\n};\n\nexport default UserTasks;"]},"metadata":{},"sourceType":"module"}