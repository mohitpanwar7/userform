{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/components/mytimeline.component.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Cookies from 'js-cookie';\nimport { Table } from 'react-bootstrap';\n\nvar MyTimeLine = /*#__PURE__*/function (_React$Component) {\n  _inherits(MyTimeLine, _React$Component);\n\n  var _super = _createSuper(MyTimeLine);\n\n  function MyTimeLine(props) {\n    var _this;\n\n    _classCallCheck(this, MyTimeLine);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"userauth\", function () {\n      var token = Cookies.get(\"token\");\n\n      if (token != undefined) {\n        console.log(\"token======>\", token);\n        fetch('/api/userauth', {\n          method: 'POST',\n          headers: {\n            'Content-type': 'application/json'\n          },\n          body: JSON.stringify(token)\n        }).then(function (response) {\n          return response.json();\n        }).then(function (response) {\n          console.log(\"token response===>\", response);\n\n          if (response.message != \"Token is invalid!\") {\n            console.log(\"userauthresponse===>\", response);\n            Cookies.set(\"id\", response.id);\n            Cookies.set(\"email\", response.email);\n            Cookies.set(\"firstname\", response.firstname);\n            Cookies.set(\"lastname\", response.lastname);\n\n            _this.setState({\n              id: response.id\n            }, function () {\n              _this.fetchTaskforId();\n            });\n          } else {\n            Cookies.remove(\"id\", {\n              path: ''\n            });\n            Cookies.remove(\"email\", {\n              path: ''\n            });\n            Cookies.remove(\"firstname\", {\n              path: ''\n            });\n            Cookies.remove(\"lastname\", {\n              path: ''\n            });\n            Cookies.remove(\"token\", {\n              path: ''\n            });\n\n            _this.setState({\n              auth: false\n            });\n          }\n        });\n        var id = Cookies.get(\"id\");\n        console.log(\"cookiesid\", id);\n\n        if (id != null) {\n          _this.setState({\n            auth: true\n          });\n        } else {\n          _this.setState({\n            auth: false\n          });\n        }\n      } else {\n        _this.setState({\n          auth: false\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"fetchTaskforId\", function () {\n      fetch(\"api/status/tasks/mytimeline\", {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(_this.state)\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this.setState({\n          tasks: data\n        }, function () {\n          console.log(\"this.state\", _this.state);\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"TableData\", function () {\n      console.log(\"tablecalled\");\n      console.log(\"this.state\", _this.state);\n\n      if (_this.state.tasks != null) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            responsive: true,\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: _this.state.tasks.colnamesfortasks.map(function (colnames) {\n                  return /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: colnames\n                  }, colnames, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 19\n                  }, _assertThisInitialized(_this));\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 15\n              }, _assertThisInitialized(_this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 13\n            }, _assertThisInitialized(_this)), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [_this.state.tasks.yesterdaytasks ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: \"Yesterday Tasks\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 23\n                  }, _assertThisInitialized(_this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 21\n                }, _assertThisInitialized(_this)), _this.state.tasks.yesterdaytasks.map(function (task) {\n                  return /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: task.id\n                    }, task.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 104,\n                      columnNumber: 25\n                    }, _assertThisInitialized(_this)), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: task.title\n                    }, task.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 105,\n                      columnNumber: 25\n                    }, _assertThisInitialized(_this)), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: task.comments\n                    }, task.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 106,\n                      columnNumber: 25\n                    }, _assertThisInitialized(_this)), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: task.statusid\n                    }, task.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 107,\n                      columnNumber: 25\n                    }, _assertThisInitialized(_this)), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: task.assignedtoid\n                    }, task.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 108,\n                      columnNumber: 25\n                    }, _assertThisInitialized(_this)), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: task.taskassigndate\n                    }, task.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 109,\n                      columnNumber: 25\n                    }, _assertThisInitialized(_this)), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: task.taskdeadline\n                    }, task.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 110,\n                      columnNumber: 25\n                    }, _assertThisInitialized(_this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 23\n                  }, _assertThisInitialized(_this));\n                })]\n              }, void 0, true) : \"\", _this.state.tasks.todaytasks ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: \"Today Tasks\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 23\n                  }, _assertThisInitialized(_this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 21\n                }, _assertThisInitialized(_this)), _this.state.tasks.todaytasks.map(function (task) {\n                  return /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: task.id\n                    }, task.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 131,\n                      columnNumber: 25\n                    }, _assertThisInitialized(_this)), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: task.title\n                    }, task.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 132,\n                      columnNumber: 25\n                    }, _assertThisInitialized(_this)), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: task.comments\n                    }, task.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 133,\n                      columnNumber: 25\n                    }, _assertThisInitialized(_this)), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: task.statusid\n                    }, task.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 134,\n                      columnNumber: 25\n                    }, _assertThisInitialized(_this)), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: task.assignedtoid\n                    }, task.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 135,\n                      columnNumber: 25\n                    }, _assertThisInitialized(_this)), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: task.taskassigndate\n                    }, task.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 136,\n                      columnNumber: 25\n                    }, _assertThisInitialized(_this)), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: task.taskdeadline\n                    }, task.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 137,\n                      columnNumber: 25\n                    }, _assertThisInitialized(_this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 23\n                  }, _assertThisInitialized(_this));\n                })]\n              }, void 0, true) : \"\", _this.state.tasks.tommorrowtasks ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: \"Tommorrow Tasks\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 21\n                  }, _assertThisInitialized(_this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 19\n                }, _assertThisInitialized(_this)), _this.state.tasks.tommorrowtasks.map(function (task) {\n                  return /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: task.id\n                    }, task.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 156,\n                      columnNumber: 25\n                    }, _assertThisInitialized(_this)), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: task.title\n                    }, task.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 157,\n                      columnNumber: 25\n                    }, _assertThisInitialized(_this)), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: task.comments\n                    }, task.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 158,\n                      columnNumber: 25\n                    }, _assertThisInitialized(_this)), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: task.statusid\n                    }, task.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 159,\n                      columnNumber: 25\n                    }, _assertThisInitialized(_this)), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: task.assignedtoid\n                    }, task.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 160,\n                      columnNumber: 25\n                    }, _assertThisInitialized(_this)), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: task.taskassigndate\n                    }, task.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 161,\n                      columnNumber: 25\n                    }, _assertThisInitialized(_this)), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: task.taskdeadline\n                    }, task.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 162,\n                      columnNumber: 25\n                    }, _assertThisInitialized(_this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 23\n                  }, _assertThisInitialized(_this));\n                })]\n              }, void 0, true) : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 13\n            }, _assertThisInitialized(_this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, _assertThisInitialized(_this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, _assertThisInitialized(_this));\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"No Tasks Found For User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 11\n          }, _assertThisInitialized(_this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 9\n        }, _assertThisInitialized(_this));\n      }\n    });\n\n    _this.state = {\n      auth: null,\n      id: null,\n      tasks: null\n    };\n    return _this;\n  }\n\n  _createClass(MyTimeLine, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.userauth();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.TableData()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return MyTimeLine;\n}(React.Component);\n\nexport default MyTimeLine;","map":{"version":3,"sources":["/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/components/mytimeline.component.js"],"names":["React","Cookies","Table","MyTimeLine","props","token","get","undefined","console","log","fetch","method","headers","body","JSON","stringify","then","response","json","message","set","id","email","firstname","lastname","setState","fetchTaskforId","remove","path","auth","state","data","tasks","colnamesfortasks","map","colnames","yesterdaytasks","task","title","comments","statusid","assignedtoid","taskassigndate","taskdeadline","todaytasks","tommorrowtasks","textAlign","userauth","TableData","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Cookies from 'js-cookie';\nimport { Table } from 'react-bootstrap';\n\n\nclass MyTimeLine extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      auth: null,\n      id: null,\n      tasks: null\n    }\n  }\n  userauth = () => {\n\n    var token = Cookies.get(\"token\")\n    if (token != undefined) {\n      console.log(\"token======>\", token)\n      fetch('/api/userauth',\n        {\n          method: 'POST',\n          headers: { 'Content-type': 'application/json' },\n          body: JSON.stringify(token)\n        })\n        .then(response => response.json())\n        .then(response => {\n          console.log(\"token response===>\", response)\n          if (response.message != \"Token is invalid!\") {\n            console.log(\"userauthresponse===>\", response)\n            Cookies.set(\"id\", response.id);\n            Cookies.set(\"email\", response.email);\n            Cookies.set(\"firstname\", response.firstname);\n            Cookies.set(\"lastname\", response.lastname);\n            this.setState({ id: response.id }, () => { this.fetchTaskforId() })\n          } else {\n\n            Cookies.remove(\"id\", { path: '' });\n            Cookies.remove(\"email\", { path: '' });\n            Cookies.remove(\"firstname\", { path: '' });\n            Cookies.remove(\"lastname\", { path: '' });\n            Cookies.remove(\"token\", { path: '' });\n            this.setState({ auth: false });\n          }\n\n        })\n      const id = Cookies.get(\"id\")\n      console.log(\"cookiesid\", id);\n      if (id != null) {\n        this.setState({ auth: true })\n      } else {\n        this.setState({ auth: false })\n      }\n    } else {\n      this.setState({ auth: false })\n    }\n  }\n\n  fetchTaskforId = () => {\n    fetch(`api/status/tasks/mytimeline`, {\n      method: 'POST',\n      headers: { 'Content-type': 'application/json' },\n      body: JSON.stringify(this.state)\n    })\n      .then((response) => response.json())\n      .then(data => {\n        this.setState({ tasks: data }, () => { console.log(\"this.state\", this.state) });\n      });\n  }\n\n  componentDidMount() {\n    this.userauth();\n\n  }\n\n  TableData = () => {\n    console.log(\"tablecalled\")\n    console.log(\"this.state\", this.state)\n    if (this.state.tasks != null) {\n      return (\n        <div>\n          <Table responsive>\n            <thead>\n              <tr>\n                {this.state.tasks.colnamesfortasks.map((colnames) => (\n                  <th key={colnames}>{colnames}</th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n\n              {this.state.tasks.yesterdaytasks ?\n                (\n                  <>\n                    <thead>\n                      <tr>\n                        Yesterday Tasks\n                                            </tr>\n                    </thead>\n\n                    {this.state.tasks.yesterdaytasks.map((task) => (\n                      <tr>\n\n                        <td key={task.id}>{task.id}</td>\n                        <td key={task.id}>{task.title}</td>\n                        <td key={task.id}>{task.comments}</td>\n                        <td key={task.id}>{task.statusid}</td>\n                        <td key={task.id}>{task.assignedtoid}</td>\n                        <td key={task.id}>{task.taskassigndate}</td>\n                        <td key={task.id}>{task.taskdeadline}</td>\n\n\n                      </tr>\n                    ))}\n\n                  </>\n                ) : \"\"\n              }\n\n              {this.state.tasks.todaytasks ?\n                (\n                  <>\n                    <thead>\n                      <tr>\n                        Today Tasks\n                      </tr>\n                    </thead>\n                    {this.state.tasks.todaytasks.map((task) => (\n                      <tr>\n\n                        <td key={task.id}>{task.id}</td>\n                        <td key={task.id}>{task.title}</td>\n                        <td key={task.id}>{task.comments}</td>\n                        <td key={task.id}>{task.statusid}</td>\n                        <td key={task.id}>{task.assignedtoid}</td>\n                        <td key={task.id}>{task.taskassigndate}</td>\n                        <td key={task.id}>{task.taskdeadline}</td>\n\n\n                      </tr>\n                    ))}\n                  </>\n                ) : \"\"\n              }\n              {this.state.tasks.tommorrowtasks ?\n                (<>\n                  <thead>\n                    <tr>\n                      Tommorrow Tasks\n                      </tr>\n                  </thead>\n                  {\n                    this.state.tasks.tommorrowtasks.map((task) => (\n                      <tr>\n\n                        <td key={task.id}>{task.id}</td>\n                        <td key={task.id}>{task.title}</td>\n                        <td key={task.id}>{task.comments}</td>\n                        <td key={task.id}>{task.statusid}</td>\n                        <td key={task.id}>{task.assignedtoid}</td>\n                        <td key={task.id}>{task.taskassigndate}</td>\n                        <td key={task.id}>{task.taskdeadline}</td>\n\n\n                      </tr>\n                    ))\n                  }\n\n                </>) : \"\"\n              }\n\n\n\n            </tbody>\n\n\n\n\n\n          </Table>\n        </div >\n      )\n\n    } else {\n      return (\n        <div style={{ textAlign: 'center' }}>\n          <h2>No Tasks Found For User</h2>\n        </div>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.TableData()}\n      </div >\n    )\n  }\n}\n\nexport default MyTimeLine;"]},"metadata":{},"sourceType":"module"}