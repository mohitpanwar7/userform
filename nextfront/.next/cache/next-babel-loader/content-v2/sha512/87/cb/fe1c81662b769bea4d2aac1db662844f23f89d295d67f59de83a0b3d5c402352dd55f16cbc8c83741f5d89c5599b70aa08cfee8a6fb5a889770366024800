{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { Form } from 'react-bootstrap';\nimport styles from '../styles/selectstate.module.css';\n\nclass CountryStateSelection extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"statefetch\", countryid => {\n      fetch(`http://localhost:5000/country/${countryid}`).then(response => response.json()).then(data => {\n        this.setState({\n          states: data\n        });\n        console.log(\"states :: \", data);\n      });\n    });\n\n    this.state = {\n      states: []\n    };\n  }\n\n  statedown(value) {\n    this.props.countryOptionHandler(value);\n    console.log(\"statedown --> \", value); // this.statefetch(value);\n\n    if (value === \"India\") {\n      this.statefetch(1);\n      console.log(\"this.state\", this.state.states);\n    } else if (value === \"Usa\") {\n      this.statefetch(2);\n    }\n  } //         try {\n  //             const response = await fetch(`http://localhost:5000/country/${countryid}`, {\n  //                 method: 'GET',\n  //             });\n  //             this.statelist = await response.json();\n  //             return statelist\n  //         } catch (error) {\n  //             console.error(error);\n  //         }\n  // statedown = async (props) => {\n  //     \n  //     const { country, state } = this.props.statedata;\n  //     let options = null;\n  //     if (country === \"India\") {\n  //         // type = India;\n  //         this.statefetch(1);\n  //         console.log(\"this.state\",this.state.states)\n  //     } else if (country === \"Usa\") {\n  //         this.statefetch(2);\n  //     } else if (country === \"Other Country\") {\n  //     }\n  //     if (country) {\n  //         console.log(\"done\")\n  //         options = await this.state.states.map((key) => <option key={key}>{key}</option>);\n  //         this.setState({ options: options })\n  //         console.log(\"options state\", options)\n  //     }\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxs(\"div\", {\n      className: `${styles.statediv} row mx-0`,\n      children: [/*#__PURE__*/_jsxs(Form.Group, {\n        className: \"col-md-6\",\n        children: [/*#__PURE__*/_jsx(Form.Label, {\n          children: \"Country\"\n        }), /*#__PURE__*/_jsxs(Form.Control, {\n          as: \"select\",\n          onChange: e => this.statedown(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsx(\"option\", {\n            value: \"\",\n            children: \"---Select Country---\"\n          }), /*#__PURE__*/_jsx(\"option\", {\n            value: \"India\",\n            children: \"India\"\n          }), /*#__PURE__*/_jsx(\"option\", {\n            value: \"Usa\",\n            children: \"Usa\"\n          })]\n        })]\n      }), /*#__PURE__*/_jsxs(Form.Group, {\n        className: \"col-md-6\",\n        children: [/*#__PURE__*/_jsx(Form.Label, {\n          children: \"State\"\n        }), /*#__PURE__*/_jsxs(Form.Control, {\n          as: \"select\",\n          onChange: this.props.stateOptionHandler,\n          required: true,\n          children: [/*#__PURE__*/_jsx(\"option\", {\n            value: \"\",\n            children: \"---Select State---\"\n          }), this.state.states.map(state => /*#__PURE__*/_jsx(\"option\", {\n            value: [[state.statename], [state.id]],\n            children: state.statename\n          }, state.id))]\n        })]\n      })]\n    });\n  }\n\n}\n\n;\nexport default CountryStateSelection;","map":null,"metadata":{},"sourceType":"module"}