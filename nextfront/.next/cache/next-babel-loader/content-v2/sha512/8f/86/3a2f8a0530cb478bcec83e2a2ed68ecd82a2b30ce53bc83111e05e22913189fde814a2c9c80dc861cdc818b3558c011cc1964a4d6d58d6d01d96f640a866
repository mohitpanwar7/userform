{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/components/mytimeline.component.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Cookies from 'js-cookie';\nimport { Table } from 'react-bootstrap';\n\nclass MyTimeLine extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"userauth\", () => {\n      var token = Cookies.get(\"token\");\n\n      if (token != undefined) {\n        console.log(\"token======>\", token);\n        fetch('/api/userauth', {\n          method: 'POST',\n          headers: {\n            'Content-type': 'application/json'\n          },\n          body: JSON.stringify(token)\n        }).then(response => response.json()).then(response => {\n          console.log(\"token response===>\", response);\n\n          if (response.message != \"Token is invalid!\") {\n            console.log(\"userauthresponse===>\", response);\n            Cookies.set(\"id\", response.id);\n            Cookies.set(\"email\", response.email);\n            Cookies.set(\"firstname\", response.firstname);\n            Cookies.set(\"lastname\", response.lastname);\n            this.setState({\n              id: response.id\n            }, () => {\n              this.fetchTaskforId();\n            });\n          } else {\n            Cookies.remove(\"id\", {\n              path: ''\n            });\n            Cookies.remove(\"email\", {\n              path: ''\n            });\n            Cookies.remove(\"firstname\", {\n              path: ''\n            });\n            Cookies.remove(\"lastname\", {\n              path: ''\n            });\n            Cookies.remove(\"token\", {\n              path: ''\n            });\n            this.setState({\n              auth: false\n            });\n          }\n        });\n        const id = Cookies.get(\"id\");\n        console.log(\"cookiesid\", id);\n\n        if (id != null) {\n          this.setState({\n            auth: true\n          });\n        } else {\n          this.setState({\n            auth: false\n          });\n        }\n      } else {\n        this.setState({\n          auth: false\n        });\n      }\n    });\n\n    _defineProperty(this, \"fetchTaskforId\", () => {\n      fetch(`api/status/tasks/mytimeline`, {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(this.state)\n      }).then(response => response.json()).then(data => {\n        this.setState({\n          tasks: data\n        }, () => {\n          console.log(\"this.state\", this.state);\n        });\n      });\n    });\n\n    _defineProperty(this, \"TableData\", () => {\n      console.log(\"tablecalled\");\n      console.log(\"this.state\", this.state);\n\n      if (this.state.tasks != null) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            responsive: true,\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: this.state.tasks.colnamesfortasks.map(colnames => /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: colnames\n                }, colnames, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 37\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: this.state.tasks.yesterdaytasks.map(task => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: task.id\n                }, task.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: task.title\n                }, task.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: task.comments\n                }, task.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: task.statusid\n                }, task.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: task.assignedto\n                }, task.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: task.taskassigndate\n                }, task.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 33\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"No Tasks Found For User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this);\n      }\n    });\n\n    this.state = {\n      auth: null,\n      id: null,\n      tasks: null\n    };\n  }\n\n  componentDidMount() {\n    this.userauth();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.TableData()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MyTimeLine;","map":{"version":3,"sources":["/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/components/mytimeline.component.js"],"names":["React","Cookies","Table","MyTimeLine","Component","constructor","props","token","get","undefined","console","log","fetch","method","headers","body","JSON","stringify","then","response","json","message","set","id","email","firstname","lastname","setState","fetchTaskforId","remove","path","auth","state","data","tasks","colnamesfortasks","map","colnames","yesterdaytasks","task","title","comments","statusid","assignedto","taskassigndate","textAlign","componentDidMount","userauth","render","TableData"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Cookies from 'js-cookie';\nimport { Table } from 'react-bootstrap';\n\n\nclass MyTimeLine extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            auth: null,\n            id: null,\n            tasks: null\n        }\n    }\n    userauth = () => {\n\n        var token = Cookies.get(\"token\")\n        if (token != undefined) {\n            console.log(\"token======>\", token)\n            fetch('/api/userauth',\n                {\n                    method: 'POST',\n                    headers: { 'Content-type': 'application/json' },\n                    body: JSON.stringify(token)\n                })\n                .then(response => response.json())\n                .then(response => {\n                    console.log(\"token response===>\", response)\n                    if (response.message != \"Token is invalid!\") {\n                        console.log(\"userauthresponse===>\", response)\n                        Cookies.set(\"id\", response.id);\n                        Cookies.set(\"email\", response.email);\n                        Cookies.set(\"firstname\", response.firstname);\n                        Cookies.set(\"lastname\", response.lastname);\n                        this.setState({ id: response.id }, () => { this.fetchTaskforId() })\n                    } else {\n\n                        Cookies.remove(\"id\", { path: '' });\n                        Cookies.remove(\"email\", { path: '' });\n                        Cookies.remove(\"firstname\", { path: '' });\n                        Cookies.remove(\"lastname\", { path: '' });\n                        Cookies.remove(\"token\", { path: '' });\n                        this.setState({ auth: false });\n                    }\n\n                })\n            const id = Cookies.get(\"id\")\n            console.log(\"cookiesid\", id);\n            if (id != null) {\n                this.setState({ auth: true })\n            } else {\n                this.setState({ auth: false })\n            }\n        } else {\n            this.setState({ auth: false })\n        }\n    }\n\n    fetchTaskforId = () => {\n        fetch(`api/status/tasks/mytimeline`, {\n            method: 'POST',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify(this.state)\n        })\n            .then((response) => response.json())\n            .then(data => {\n                this.setState({ tasks: data }, () => { console.log(\"this.state\", this.state) });\n            });\n    }\n\n    componentDidMount() {\n        this.userauth();\n\n    }\n\n    TableData = () => {\n        console.log(\"tablecalled\")\n        console.log(\"this.state\", this.state)\n        if (this.state.tasks != null) {\n            return (\n                <div>\n                    <Table responsive>\n                        <thead>\n                            <tr>\n                                {this.state.tasks.colnamesfortasks.map((colnames) => (\n                                    <th key={colnames}>{colnames}</th>\n                                ))}\n                            </tr>\n                        </thead>\n                        <tbody>\n\n\n                            {this.state.tasks.yesterdaytasks.map((task) => (\n                                <tr>\n\n                                    <td key={task.id}>{task.id}</td>\n                                    <td key={task.id}>{task.title}</td>\n                                    <td key={task.id}>{task.comments}</td>\n                                    <td key={task.id}>{task.statusid}</td>\n                                    <td key={task.id}>{task.assignedto}</td>\n                                    <td key={task.id}>{task.taskassigndate}</td>\n\n\n                                </tr>\n                            ))}\n\n                            \n                        </tbody>\n                    </Table>\n                </div>\n            )\n\n        } else {\n            return (\n                <div style={{ textAlign: 'center' }}>\n                    <h2>No Tasks Found For User</h2>\n                </div>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {this.TableData()}\n            </div >\n        )\n    }\n}\n\nexport default MyTimeLine;"]},"metadata":{},"sourceType":"module"}