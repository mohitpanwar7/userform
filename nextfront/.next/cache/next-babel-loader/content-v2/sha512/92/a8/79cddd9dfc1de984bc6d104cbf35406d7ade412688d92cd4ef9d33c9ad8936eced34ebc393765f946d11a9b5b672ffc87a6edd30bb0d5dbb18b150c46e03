{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport FormInput from './form-input-sign-in-and-sign-out.component';\nimport { Button, Modal } from 'react-bootstrap';\nimport CustomButton from './custom-button.component';\nimport md5 from 'md5';\nimport styles from '../styles/sign-up.module.scss'; // import './sign-up.styles.scss';\n\nclass SignUp extends React.Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"handleSubmit\", async event => {\n      event.preventDefault();\n      const encpassword = md5(this.state.prevPassword);\n      console.log(\"Enc password===>\", encpassword);\n      this.setState({\n        password: encpassword\n      }, () => {\n        const {\n          displayName,\n          email,\n          password,\n          prevPassword,\n          prevConfirmPassword\n        } = this.state;\n\n        if (prevPassword != prevConfirmPassword) {\n          alert(\"password dont match\");\n          return;\n        }\n\n        try {\n          const data = {\n            displayName: this.state.displayName,\n            email: this.state.email,\n            password: this.state.password\n          };\n          fetch('http://127.0.0.1:5000/signup', {\n            method: 'POST',\n            headers: {\n              'Content-type': 'application/json'\n            },\n            body: JSON.stringify(data)\n          }).then(response => response.json()).then(response => {\n            if (response) {\n              console.log(\"response==>\", response);\n\n              if (response != `${email} Already Registered`) {\n                this.setState({\n                  userValid: true\n                });\n                this.setState({\n                  show: true\n                });\n              } else {\n                this.setState({\n                  userValid: false\n                });\n                this.setState({\n                  show: true\n                });\n              }\n            }\n          });\n        } catch (error) {\n          console.log(error);\n        }\n      });\n    });\n\n    _defineProperty(this, \"handleChange\", event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    });\n\n    this.state = {\n      displayName: '',\n      email: '',\n      prevPassword: '',\n      password: '',\n      prevConfirmPassword: '',\n      userValid: true,\n      show: false\n    };\n  }\n\n  render() {\n    const {\n      displayName,\n      email,\n      prevPassword,\n      prevConfirmPassword\n    } = this.state;\n\n    const handleClose = () => this.setState({\n      show: false\n    });\n\n    return /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.signup,\n      children: [/*#__PURE__*/_jsx(\"h2\", {\n        className: \"title\",\n        children: \"I do not have a account\"\n      }), /*#__PURE__*/_jsx(\"span\", {\n        children: \"Sign up with your email and password\"\n      }), /*#__PURE__*/_jsxs(\"form\", {\n        className: \"sign-up-form\",\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsx(FormInput, {\n          type: \"text\",\n          name: \"displayName\",\n          value: displayName,\n          onChange: this.handleChange,\n          label: \"Display Name\",\n          required: true\n        }), /*#__PURE__*/_jsx(FormInput, {\n          type: \"email\",\n          name: \"email\",\n          value: email,\n          onChange: this.handleChange,\n          label: \"Email\",\n          required: true\n        }), /*#__PURE__*/_jsx(FormInput, {\n          type: \"password\",\n          name: \"prevPassword\",\n          value: prevPassword,\n          onChange: this.handleChange,\n          label: \"Password\",\n          required: true\n        }), /*#__PURE__*/_jsx(FormInput, {\n          type: \"password\",\n          name: \"prevConfirmPassword\",\n          value: prevConfirmPassword,\n          onChange: this.handleChange,\n          label: \"Confirm Password\",\n          required: true\n        }), /*#__PURE__*/_jsx(CustomButton, {\n          type: \"submit\",\n          children: \"SIGN UP\"\n        })]\n      }), /*#__PURE__*/_jsxs(Modal, {\n        show: this.state.show,\n        onHide: handleClose,\n        children: [/*#__PURE__*/_jsx(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsx(Modal.Title, {\n            children: \"Report\"\n          })\n        }), this.state.userValid == true ? /*#__PURE__*/_jsxs(Modal.Body, {\n          children: [\"New User :\", this.state.displayName, \" is Created with Email : \", this.state.email, \" \"]\n        }) : /*#__PURE__*/_jsxs(Modal.Body, {\n          children: [\"Email : \", this.state.email, \" Is Already Registered.\"]\n        }), /*#__PURE__*/_jsx(Modal.Footer, {\n          children: /*#__PURE__*/_jsx(Button, {\n            variant: \"primary\",\n            onClick: handleClose,\n            children: \"Close\"\n          })\n        })]\n      })]\n    });\n  }\n\n}\n\nexport default SignUp;","map":null,"metadata":{},"sourceType":"module"}