{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/components/tasks.component.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Button, Form, Modal } from 'react-bootstrap';\n\nclass UserTasks extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleChange\", e => {\n      // e.preventDefault();\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      }, () => console.log(this.state));\n    });\n\n    _defineProperty(this, \"handleStatusChange\", e => {\n      // e.preventDefault();\n      const {\n        name,\n        value\n      } = e.target;\n      const tempobj = this.state.addStatus;\n      tempobj[name] = value;\n      this.setState({\n        addStatus: tempobj\n      }, () => console.log(this.state.addStatus));\n    });\n\n    _defineProperty(this, \"handleAddTask\", e => {\n      e.preventDefault();\n      fetch('/api/tasks/create', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(this.state)\n      }).then(r => r.json()).then(res => {\n        this.setState({\n          tasks: res\n        });\n      });\n      this.setState({\n        show: false\n      });\n    });\n\n    _defineProperty(this, \"handleDeleteTask\", e => {\n      fetch(`/api/tasks/delete/${e}`, {\n        method: 'POST'\n      }).then(r => r.json()).then(res => {\n        this.setState({\n          tasks: res\n        });\n      });\n    });\n\n    _defineProperty(this, \"handleAddStatus\", e => {\n      e.preventDefault();\n      fetch('/api/tasks/status/create', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(this.state.addStatus)\n      }).then(r => r.json()).then(res => {\n        this.setState({\n          allStatus: res\n        });\n      });\n      this.setState({\n        statusshow: false\n      }, console.log(\"this.state==>\", this.state));\n    });\n\n    _defineProperty(this, \"handleDeleteStatus\", e => {\n      e.preventDefault();\n      fetch(`/api/tasks/status/delete/${this.state.deleteStatus}`, {\n        method: 'POST'\n      }).then(r => r.json()).then(res => {\n        this.setState({\n          allStatus: res\n        });\n      });\n      fetch(`/api/tasks`).then(response => response.json()).then(data => {\n        this.setState({\n          deletestatusshow: false,\n          tasks: data\n        });\n      });\n    });\n\n    _defineProperty(this, \"handleUserSelectChange\", e => {\n      const {\n        value\n      } = e.target;\n      var valuearray = value.split(\",\");\n      console.log(\"valuearray==>\", valuearray);\n      var assignedto = valuearray[0];\n      var assignedtoid = parseInt(valuearray[1]);\n      this.setState({\n        assignedto: assignedto,\n        assignedtoid: assignedtoid\n      }, () => console.log(this.state));\n    });\n\n    _defineProperty(this, \"countTask\", id => {\n      var count = 0;\n      var taskcount = this.state.tasks.filter(task => task.statusid == id);\n      count = taskcount.length;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"(\", count, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }, this);\n    });\n\n    _defineProperty(this, \"taskByStatusId\", id => {\n      // fetch(`/api/tasks/status/${id}`, {method: 'POST'}).then((response) => response.json()).then(data => {this.setState({ taskByStatusId : data})});\n      const responsedata = async () => {\n        const responses = await this.state.taskByStatusId;\n        return responses;\n      };\n\n      const responsearray = responsedata();\n      console.log(\"responsearray===>\", responsearray); // return (\n      //     <div> { (responsearray.length > 0 ) ? (responsearray.map((task) => {\n      //         return (<div key={task.id} className=\"bg-info card\">\n      //             <div style={{ textAlign: 'right', position: 'absolute', right: '10px', top: '8px' }}><Button variant=\"transparent\" onClick={() => this.handleDeleteTask(task.id)}>X</Button></div>\n      //             <ul style={{ listStyle: 'none', padding: '0px' }}>\n      //                 <li>Id:{task.id} </li>\n      //                 <li>Title:{task.title}</li>\n      //                 <li>Task Status: {task.status}</li>\n      //                 <li>Assigned To: {task.assignedto}</li>\n      //             </ul>\n      //         </div>)}\n      //     )) : \"\"}\n      //     </div>\n      // )\n    });\n\n    this.state = {\n      title: null,\n      comments: null,\n      taskstatus: \"\",\n      selectedstatusid: '',\n      selectedstatusname: '',\n      selectedstatussequence: '',\n      assignedto: null,\n      assignedtoid: null,\n      data: null,\n      show: false,\n      tasks: [],\n      taskByStatusId: [],\n      userslist: [],\n      statusshow: false,\n      deletestatusshow: false,\n      addStatus: {\n        statusname: \"\",\n        statussequence: \"\"\n      },\n      deleteStatus: null,\n      allStatus: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(`/api/users`).then(response => response.json()).then(data => {\n      this.setState({\n        userslist: data\n      });\n    });\n    fetch(`/api/tasks`).then(response => response.json()).then(data => {\n      this.setState({\n        tasks: data\n      });\n    });\n    fetch(`/api/tasks/status/all`).then(response => response.json()).then(data => {\n      this.setState({\n        allStatus: data\n      });\n    });\n  }\n\n  render() {\n    const handleClose = () => this.setState({\n      show: false\n    });\n\n    const handleAddStatusClose = () => this.setState({\n      statusshow: false\n    });\n\n    const handleDeleteStatusClose = () => this.setState({\n      deletestatusshow: false\n    });\n\n    console.log(\"allStatus ===>\", this.state.allStatus);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundImage: \"linear-gradient(to right, #4880EC, #019CAD)\",\n        minHeight: '91vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'right'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          onClick: () => {\n            this.setState({\n              statusshow: true\n            });\n          },\n          style: {\n            marginTop: '15px',\n            marginBottom: '15px',\n            marginRight: '20px'\n          },\n          children: \" Add Status Type \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this), this.state.allStatus.length > 0 ? /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: () => {\n            this.setState({\n              deletestatusshow: true\n            });\n          },\n          style: {\n            marginLeft: '10px',\n            marginTop: '15px',\n            marginBottom: '15px',\n            marginRight: '20px'\n          },\n          children: \" Delete Status Type \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 57\n        }, this) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mx-3\",\n        children: this.state.allStatus.map(status => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-3 \",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [status.statusname, \" \", this.countTask(status.id), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 66\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-success card\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  marginLeft: '-24px',\n                  marginRight: '-24px',\n                  marginTop: '-24px',\n                  borderRadius: '10px'\n                },\n                onClick: () => {\n                  this.setState({\n                    show: true,\n                    selectedstatusid: status.id,\n                    selectedstatusname: status.statusname,\n                    selectedstatussequence: status.statussequence\n                  });\n                },\n                children: \" Add Task \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 33\n              }, this), this.taskByStatusId(status.id)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Modal, {\n          show: this.state.deletestatusshow,\n          onHide: handleDeleteStatusClose,\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            closeButton: true,\n            children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n              children: \"Delete Status Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: e => this.handleDeleteStatus(e),\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-12\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Status :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"select\",\n                  onChange: e => this.handleChange(e),\n                  name: \"deleteStatus\",\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"---Select Status---\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 41\n                  }, this), this.state.allStatus.map(status => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: status.id,\n                    children: [\" \", status.statusname, \" , Sequence : \", status.statussequence, \" \"]\n                  }, status.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 45\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"info\",\n                  className: \"submit-button\",\n                  type: \"submit\",\n                  children: \"Delete Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"danger\",\n                  onClick: handleDeleteStatusClose,\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          show: this.state.statusshow,\n          onHide: handleAddStatusClose,\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            closeButton: true,\n            children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n              children: \"Add Status Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: e => this.handleAddStatus(e),\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-12\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Status Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"input\",\n                  name: \"statusname\",\n                  onChange: this.handleStatusChange,\n                  placeholder: \"Enter Status Name\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-12\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Status Sequence\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"number\",\n                  min: \"1\",\n                  name: \"statussequence\",\n                  onChange: this.handleStatusChange,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"success\",\n                  className: \"submit-button\",\n                  type: \"submit\",\n                  children: \"Add Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"danger\",\n                  onClick: handleAddStatusClose,\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          show: this.state.show,\n          onHide: handleClose,\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            closeButton: true,\n            children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n              children: \"Add Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: this.handleAddTask,\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-12\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"input\",\n                  name: \"title\",\n                  onChange: this.handleChange,\n                  placeholder: \"Enter Task Title\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-12\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Comments\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"input\",\n                  name: \"comments\",\n                  onChange: this.handleChange,\n                  placeholder: \"Enter Comments\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-12\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Task Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"select\",\n                  name: \"selectedstatusid\",\n                  onChange: this.handleChange,\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: this.state.selectedstatusid,\n                    children: [this.state.selectedstatusname, \" , Sequence : \", this.state.selectedstatussequence, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 41\n                  }, this), this.state.allStatus.map(status => {\n                    if (status.id != this.state.selectedstatusid) {\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: status.id,\n                        children: [\" \", status.statusname, \" , Sequence : \", status.statussequence, \" \"]\n                      }, status.id, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 292,\n                        columnNumber: 57\n                      }, this);\n                    }\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-12\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Assigned To :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"select\",\n                  name: \"assignedto\",\n                  onChange: this.handleUserSelectChange,\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"---Select User---\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 41\n                  }, this), this.state.userslist.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: [[`${user.firstname} ${user.lastname}`], [user.id]],\n                    children: [user.firstname, \" \", user.lastname, \" Id: \", user.id]\n                  }, user.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 302,\n                    columnNumber: 45\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"success\",\n                  className: \"submit-button\",\n                  type: \"submit\",\n                  children: \"Add Task\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"danger\",\n                  onClick: handleClose,\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\nexport default UserTasks;","map":{"version":3,"sources":["/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/components/tasks.component.js"],"names":["React","Button","Form","Modal","UserTasks","Component","constructor","props","e","name","value","target","setState","console","log","state","tempobj","addStatus","preventDefault","fetch","method","headers","body","JSON","stringify","then","r","json","res","tasks","show","allStatus","statusshow","deleteStatus","response","data","deletestatusshow","valuearray","split","assignedto","assignedtoid","parseInt","id","count","taskcount","filter","task","statusid","length","responsedata","responses","taskByStatusId","responsearray","title","comments","taskstatus","selectedstatusid","selectedstatusname","selectedstatussequence","userslist","statusname","statussequence","componentDidMount","render","handleClose","handleAddStatusClose","handleDeleteStatusClose","backgroundImage","minHeight","textAlign","marginTop","marginBottom","marginRight","marginLeft","map","status","countTask","borderRadius","handleDeleteStatus","handleChange","handleAddStatus","handleStatusChange","handleAddTask","handleUserSelectChange","user","firstname","lastname"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Form, Modal } from 'react-bootstrap';\n\n\nclass UserTasks extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: null,\n            comments: null,\n            taskstatus: \"\",\n            selectedstatusid: '',\n            selectedstatusname: '',\n            selectedstatussequence: '',\n            assignedto: null,\n            assignedtoid: null,\n            data: null,\n            show: false,\n            tasks: [],\n            taskByStatusId:[],\n            userslist: [],\n            statusshow: false,\n            deletestatusshow: false,\n            addStatus: {\n                statusname: \"\",\n                statussequence: \"\"\n            },\n            deleteStatus: null,\n            allStatus: []\n        }\n    }\n\n\n    componentDidMount() {\n        fetch(`/api/users`)\n            .then((response) => response.json())\n            .then(data => {\n                this.setState({ userslist: data });\n            });\n        fetch(`/api/tasks`)\n            .then((response) => response.json())\n            .then(data => {\n                this.setState({ tasks: data });\n            });\n\n        fetch(`/api/tasks/status/all`)\n            .then((response) => response.json())\n            .then(data => {\n                this.setState({ allStatus: data });\n            });\n\n\n    }\n\n    handleChange = e => {\n        // e.preventDefault();\n        const { name, value } = e.target;\n        this.setState({ [name]: value }, () => console.log(this.state));\n    };\n\n    handleStatusChange = e => {\n        // e.preventDefault();\n        const { name, value } = e.target;\n        const tempobj = this.state.addStatus;\n        tempobj[name] = value\n        this.setState({ addStatus: tempobj }, () => console.log(this.state.addStatus));\n    };\n\n    handleAddTask = e => {\n        e.preventDefault()\n        fetch('/api/tasks/create', {\n            method: 'POST',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify(this.state)\n        }).then(r => r.json())\n            .then(res => {\n                this.setState({\n                    tasks: res\n                })\n            })\n        this.setState({ show: false })\n    }\n\n    handleDeleteTask = e => {\n        fetch(`/api/tasks/delete/${e}`, { method: 'POST' })\n            .then(r => r.json())\n            .then(res => {\n                this.setState({\n                    tasks: res\n                })\n            })\n\n    }\n\n    handleAddStatus = e => {\n        e.preventDefault()\n        fetch('/api/tasks/status/create', {\n            method: 'POST',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify(this.state.addStatus)\n        }).then(r => r.json())\n            .then(res => {\n                this.setState({\n                    allStatus: res\n                })\n            })\n        this.setState({ statusshow: false }, console.log(\"this.state==>\", this.state))\n    }\n\n    handleDeleteStatus = e => {\n\n        e.preventDefault()\n        fetch(`/api/tasks/status/delete/${this.state.deleteStatus}`, {\n            method: 'POST'\n\n        })\n            .then(r => r.json())\n            .then(res => {\n                this.setState({\n                    allStatus: res\n                })\n            })\n\n        fetch(`/api/tasks`)\n            .then((response) => response.json())\n            .then(data => {\n                this.setState({ deletestatusshow: false, tasks: data });\n            });\n\n    }\n    handleUserSelectChange = (e) => {\n        const { value } = e.target;\n        var valuearray = value.split(\",\")\n        console.log(\"valuearray==>\", valuearray)\n        var assignedto = valuearray[0]\n        var assignedtoid = parseInt(valuearray[1])\n        this.setState({ assignedto: assignedto, assignedtoid: assignedtoid }, () => console.log(this.state));\n    }\n\n    countTask = (id) => {\n        var count = 0;\n        var taskcount = this.state.tasks.filter(task => task.statusid == id)\n        count = taskcount.length;\n        return (\n            <div>({count})</div>\n        )\n    }\n\n    taskByStatusId = (id) => {\n    \n        \n        // fetch(`/api/tasks/status/${id}`, {method: 'POST'}).then((response) => response.json()).then(data => {this.setState({ taskByStatusId : data})});\n        const responsedata = async () => {\n            const responses = await this.state.taskByStatusId;\n            return responses;\n          };\n         const responsearray = responsedata()\n         console.log(\"responsearray===>\",responsearray)\n        // return (\n        //     <div> { (responsearray.length > 0 ) ? (responsearray.map((task) => {\n        //         return (<div key={task.id} className=\"bg-info card\">\n        //             <div style={{ textAlign: 'right', position: 'absolute', right: '10px', top: '8px' }}><Button variant=\"transparent\" onClick={() => this.handleDeleteTask(task.id)}>X</Button></div>\n        //             <ul style={{ listStyle: 'none', padding: '0px' }}>\n        //                 <li>Id:{task.id} </li>\n        //                 <li>Title:{task.title}</li>\n        //                 <li>Task Status: {task.status}</li>\n        //                 <li>Assigned To: {task.assignedto}</li>\n        //             </ul>\n        //         </div>)}\n\n        //     )) : \"\"}\n        //     </div>\n        // )\n    }\n\n    render() {\n        const handleClose = () => this.setState({ show: false });\n        const handleAddStatusClose = () => this.setState({ statusshow: false });\n        const handleDeleteStatusClose = () => this.setState({ deletestatusshow: false });\n        console.log(\"allStatus ===>\", this.state.allStatus)\n\n        return (\n            <div style={{ backgroundImage: \"linear-gradient(to right, #4880EC, #019CAD)\", minHeight: '91vh' }}>\n                <div style={{ textAlign: 'right' }}>\n                    <Button variant=\"success\" onClick={() => { this.setState({ statusshow: true }) }} style={{ marginTop: '15px', marginBottom: '15px', marginRight: '20px' }}> Add Status Type </Button>\n                    {this.state.allStatus.length > 0 ? (<Button variant=\"danger\" onClick={() => { this.setState({ deletestatusshow: true }) }} style={{ marginLeft: '10px', marginTop: '15px', marginBottom: '15px', marginRight: '20px' }}> Delete Status Type </Button>) : \"\"}\n                </div>\n\n                <div className=\"row mx-3\"  >\n                    {this.state.allStatus.map((status) => {\n                        return (<div className=\"col-md-3 \" >\n                            <div style={{ textAlign: 'center' }}><h3>{status.statusname} {this.countTask(status.id)} </h3></div>\n                            <div className=\"bg-success card\" >\n                                <Button style={{ marginLeft: '-24px', marginRight: '-24px', marginTop: '-24px', borderRadius: '10px' }} onClick={() => { this.setState({ show: true, selectedstatusid: status.id, selectedstatusname: status.statusname, selectedstatussequence: status.statussequence }) }} > Add Task </Button>\n                                {this.taskByStatusId(status.id)}\n                                {/* {this.state.tasks.map((task) => {\n                                    if (task.statusid == `${status.id}`) {\n                                        return (<div key={task.id} className=\"bg-info card\">\n                                            <div style={{ textAlign: 'right', position: 'absolute', right: '10px', top: '8px' }}><Button variant=\"transparent\" onClick={() => this.handleDeleteTask(task.id)}>X</Button></div>\n                                            <ul style={{ listStyle: 'none', padding: '0px' }}>\n                                                <li>Id:{task.id} </li>\n                                                <li>Title:{task.title}</li>\n                                                <li>Task Status: {task.status}</li>\n                                                <li>Assigned To: {task.assignedto}</li>\n                                            </ul>\n                                        </div>)\n                                    }\n                                })} */}\n                            </div>\n                        </div>)\n                    })}\n\n                </div>\n                <div>\n                    <Modal show={this.state.deletestatusshow} onHide={handleDeleteStatusClose}>\n                        <Modal.Header closeButton>\n                            <Modal.Title>Delete Status Type</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <Form onSubmit={(e) => this.handleDeleteStatus(e)}>\n                                <Form.Group className=\"col-md-12\">\n                                    <Form.Label>Status :</Form.Label>\n                                    <Form.Control as=\"select\" onChange={(e) => this.handleChange(e)} name=\"deleteStatus\" required>\n                                        <option value=\"\">---Select Status---</option>\n                                        {this.state.allStatus.map(status => (\n                                            <option key={status.id} value={status.id}> {status.statusname} , Sequence : {status.statussequence} </option>\n                                        ))}\n                                    </Form.Control>\n                                </Form.Group>\n                                <Modal.Footer>\n                                    <Button variant=\"info\" className=\"submit-button\" type=\"submit\">\n                                        Delete Status\n                                     </Button>\n                                    <Button variant=\"danger\" onClick={handleDeleteStatusClose}>\n                                        Cancel\n                                     </Button>\n                                </Modal.Footer>\n                            </Form>\n                        </Modal.Body>\n\n                    </Modal>\n\n                    <Modal show={this.state.statusshow} onHide={handleAddStatusClose}>\n                        <Modal.Header closeButton>\n                            <Modal.Title>Add Status Type</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <Form onSubmit={(e) => this.handleAddStatus(e)}>\n                                <Form.Group className=\"col-md-12\">\n                                    <Form.Label>Status Name</Form.Label>\n                                    <Form.Control type=\"input\" name=\"statusname\" onChange={this.handleStatusChange} placeholder=\"Enter Status Name\" required></Form.Control>\n                                </Form.Group>\n                                <Form.Group className=\"col-md-12\">\n                                    <Form.Label>Status Sequence</Form.Label>\n                                    <Form.Control type=\"number\" min=\"1\" name=\"statussequence\" onChange={this.handleStatusChange} required></Form.Control>\n                                </Form.Group>\n                                <Modal.Footer>\n                                    <Button variant=\"success\" className=\"submit-button\" type=\"submit\">\n                                        Add Status\n                                     </Button>\n                                    <Button variant=\"danger\" onClick={handleAddStatusClose}>\n                                        Cancel\n                                     </Button>\n                                </Modal.Footer>\n                            </Form>\n                        </Modal.Body>\n\n                    </Modal>\n\n                    <Modal show={this.state.show} onHide={handleClose}>\n                        <Modal.Header closeButton>\n                            <Modal.Title>Add Task</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <Form onSubmit={this.handleAddTask}>\n                                <Form.Group className=\"col-md-12\">\n                                    <Form.Label>Title</Form.Label>\n                                    <Form.Control type=\"input\" name=\"title\" onChange={this.handleChange} placeholder=\"Enter Task Title\" required ></Form.Control>\n                                </Form.Group>\n                                <Form.Group className=\"col-md-12\">\n                                    <Form.Label>Comments</Form.Label>\n                                    <Form.Control type=\"input\" name=\"comments\" onChange={this.handleChange} placeholder=\"Enter Comments\" ></Form.Control>\n                                </Form.Group>\n\n                                <Form.Group className=\"col-md-12\">\n                                    <Form.Label>Task Status</Form.Label>\n                                    <Form.Control as=\"select\" name=\"selectedstatusid\" onChange={this.handleChange} required>\n\n                                        <option value={this.state.selectedstatusid}>{this.state.selectedstatusname} , Sequence : {this.state.selectedstatussequence} </option>\n                                        {this.state.allStatus.map(status => {\n                                            if (status.id != this.state.selectedstatusid) {\n                                                return (<option key={status.id} value={status.id}> {status.statusname} , Sequence : {status.statussequence} </option>)\n                                            }\n                                        })}\n                                    </Form.Control>\n                                </Form.Group>\n                                <Form.Group className=\"col-md-12\">\n                                    <Form.Label>Assigned To :</Form.Label>\n                                    <Form.Control as=\"select\" name=\"assignedto\" onChange={this.handleUserSelectChange} required>\n                                        <option value=\"\">---Select User---</option>\n                                        {this.state.userslist.map(user => (\n                                            <option key={user.id} value={[[`${user.firstname} ${user.lastname}`], [user.id]]}>{user.firstname} {user.lastname} Id: {user.id}</option>\n                                        ))}\n                                    </Form.Control>\n                                </Form.Group>\n                                <Modal.Footer>\n                                    <Button variant=\"success\" className=\"submit-button\" type=\"submit\">\n                                        Add Task\n                                     </Button>\n                                    <Button variant=\"danger\" onClick={handleClose}>\n                                        Cancel\n                                     </Button>\n                                </Modal.Footer>\n                            </Form>\n                        </Modal.Body>\n\n                    </Modal>\n\n                </div>\n            </div>\n        )\n    }\n\n};\n\nexport default UserTasks;"]},"metadata":{},"sourceType":"module"}