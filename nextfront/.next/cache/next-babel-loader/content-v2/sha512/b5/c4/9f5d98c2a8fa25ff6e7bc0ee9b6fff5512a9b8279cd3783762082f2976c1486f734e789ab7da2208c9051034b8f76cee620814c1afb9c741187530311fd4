{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/components/tasks.component.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { Button, Form, Modal } from 'react-bootstrap';\n\nvar UserTasks = /*#__PURE__*/function (_React$Component) {\n  _inherits(UserTasks, _React$Component);\n\n  var _super = _createSuper(UserTasks);\n\n  function UserTasks(props) {\n    var _this;\n\n    _classCallCheck(this, UserTasks);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      // e.preventDefault();\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n\n      _this.setState(_defineProperty({}, name, value), function () {\n        return console.log(_this.state);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleStatusChange\", function (e) {\n      // e.preventDefault();\n      var _e$target2 = e.target,\n          name = _e$target2.name,\n          value = _e$target2.value;\n      var tempobj = _this.state.addStatus;\n      tempobj[name] = value;\n\n      _this.setState({\n        addStatus: tempobj\n      }, function () {\n        return console.log(_this.state.addStatus);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleAddTask\", function (e) {\n      e.preventDefault();\n      fetch('/api/tasks/create', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(_this.state)\n      }).then(function (r) {\n        return r.json();\n      }).then(function (res) {\n        _this.setState({\n          tasks: res\n        });\n      });\n\n      _this.setState({\n        show: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDeleteTask\", function (e) {\n      fetch(\"/api/tasks/delete/\".concat(e), {\n        method: 'POST'\n      }).then(function (r) {\n        return r.json();\n      }).then(function (res) {\n        _this.setState({\n          tasks: res\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleAddStatus\", function (e) {\n      e.preventDefault();\n      fetch('/api/tasks/status/create', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(_this.state.addStatus)\n      }).then(function (r) {\n        return r.json();\n      }).then(function (res) {\n        _this.setState({\n          allStatus: res\n        });\n      });\n\n      _this.setState({\n        statusshow: false\n      }, console.log(\"this.state==>\", _this.state));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDeleteStatus\", function (e) {\n      e.preventDefault();\n      fetch(\"/api/tasks/status/delete/\".concat(_this.state.deleteStatus), {\n        method: 'POST'\n      }).then(function (r) {\n        return r.json();\n      }).then(function (res) {\n        _this.setState({\n          allStatus: res\n        });\n      });\n      fetch(\"/api/tasks\").then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this.setState({\n          deletestatusshow: false,\n          tasks: data\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleUserSelectChange\", function (e) {\n      var value = e.target.value;\n      var valuearray = value.split(\",\");\n      console.log(\"valuearray==>\", valuearray);\n      var assignedto = valuearray[0];\n      var assignedtoid = parseInt(valuearray[1]);\n\n      _this.setState({\n        assignedto: assignedto,\n        assignedtoid: assignedtoid\n      }, function () {\n        return console.log(_this.state);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"countTask\", function (id) {\n      var count = 0;\n\n      var taskcount = _this.state.tasks.filter(function (task) {\n        return task.statusid == id;\n      });\n\n      count = taskcount.length;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"(\", count, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }, _assertThisInitialized(_this));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"taskByStatusId\", function (id) {\n      var data;\n      fetch(\"/api/tasks/status/\" + id).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        return data = data;\n      });\n      console.log(\"databystatusi===>\", data);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", data, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, _assertThisInitialized(_this));\n    });\n\n    _this.state = {\n      title: null,\n      comments: null,\n      taskstatus: \"\",\n      selectedstatusid: '',\n      selectedstatusname: '',\n      selectedstatussequence: '',\n      assignedto: null,\n      assignedtoid: null,\n      data: null,\n      show: false,\n      tasks: [],\n      userslist: [],\n      statusshow: false,\n      deletestatusshow: false,\n      addStatus: {\n        statusname: \"\",\n        statussequence: \"\"\n      },\n      deleteStatus: null,\n      allStatus: []\n    };\n    return _this;\n  }\n\n  _createClass(UserTasks, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"/api/users\").then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this2.setState({\n          userslist: data\n        });\n      });\n      fetch(\"/api/tasks\").then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this2.setState({\n          tasks: data\n        });\n      });\n      fetch(\"/api/tasks/status/all\").then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this2.setState({\n          allStatus: data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var handleClose = function handleClose() {\n        return _this3.setState({\n          show: false\n        });\n      };\n\n      var handleAddStatusClose = function handleAddStatusClose() {\n        return _this3.setState({\n          statusshow: false\n        });\n      };\n\n      var handleDeleteStatusClose = function handleDeleteStatusClose() {\n        return _this3.setState({\n          deletestatusshow: false\n        });\n      };\n\n      console.log(\"allStatus ===>\", this.state.allStatus);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundImage: \"linear-gradient(to right, #4880EC, #019CAD)\",\n          minHeight: '91vh'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'right'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            onClick: function onClick() {\n              _this3.setState({\n                statusshow: true\n              });\n            },\n            style: {\n              marginTop: '15px',\n              marginBottom: '15px',\n              marginRight: '20px'\n            },\n            children: \" Add Status Type \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 21\n          }, this), this.state.allStatus.length > 0 ? /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: function onClick() {\n              _this3.setState({\n                deletestatusshow: true\n              });\n            },\n            style: {\n              marginLeft: '10px',\n              marginTop: '15px',\n              marginBottom: '15px',\n              marginRight: '20px'\n            },\n            children: \" Delete Status Type \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 57\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row mx-3\",\n          children: this.state.allStatus.map(function (status) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-3 \",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textAlign: 'center'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [status.statusname, \" \", _this3.countTask(status.id), \" \", _this3.taskByStatusId(status.id)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 66\n                }, _this3)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 29\n              }, _this3), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-success card\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  style: {\n                    marginLeft: '-24px',\n                    marginRight: '-24px',\n                    marginTop: '-24px',\n                    borderRadius: '10px'\n                  },\n                  onClick: function onClick() {\n                    _this3.setState({\n                      show: true,\n                      selectedstatusid: status.id,\n                      selectedstatusname: status.statusname,\n                      selectedstatussequence: status.statussequence\n                    });\n                  },\n                  children: \" Add Task \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 33\n                }, _this3), _this3.state.tasks.map(function (task) {\n                  if (task.statusid == \"\".concat(status.id)) {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"bg-info card\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          textAlign: 'right',\n                          position: 'absolute',\n                          right: '10px',\n                          top: '8px'\n                        },\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          variant: \"transparent\",\n                          onClick: function onClick() {\n                            return _this3.handleDeleteTask(task.id);\n                          },\n                          children: \"X\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 181,\n                          columnNumber: 130\n                        }, _this3)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 181,\n                        columnNumber: 45\n                      }, _this3), /*#__PURE__*/_jsxDEV(\"ul\", {\n                        style: {\n                          listStyle: 'none',\n                          padding: '0px'\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                          children: [\"Id:\", task.id, \" \"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 183,\n                          columnNumber: 49\n                        }, _this3), /*#__PURE__*/_jsxDEV(\"li\", {\n                          children: [\"Title:\", task.title]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 184,\n                          columnNumber: 49\n                        }, _this3), /*#__PURE__*/_jsxDEV(\"li\", {\n                          children: [\"Task Status: \", task.status]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 185,\n                          columnNumber: 49\n                        }, _this3), /*#__PURE__*/_jsxDEV(\"li\", {\n                          children: [\"Assigned To: \", task.assignedto]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 186,\n                          columnNumber: 49\n                        }, _this3)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 182,\n                        columnNumber: 45\n                      }, _this3)]\n                    }, task.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 180,\n                      columnNumber: 49\n                    }, _this3);\n                  }\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 29\n              }, _this3)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 33\n            }, _this3);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Modal, {\n            show: this.state.deletestatusshow,\n            onHide: handleDeleteStatusClose,\n            children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n              closeButton: true,\n              children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n                children: \"Delete Status Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: function onSubmit(e) {\n                  return _this3.handleDeleteStatus(e);\n                },\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"col-md-12\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Status :\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"select\",\n                    onChange: function onChange(e) {\n                      return _this3.handleChange(e);\n                    },\n                    name: \"deleteStatus\",\n                    required: true,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"---Select Status---\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 206,\n                      columnNumber: 41\n                    }, this), this.state.allStatus.map(function (status) {\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: status.id,\n                        children: [\" \", status.statusname, \" , Sequence : \", status.statussequence, \" \"]\n                      }, status.id, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 208,\n                        columnNumber: 45\n                      }, _this3);\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"info\",\n                    className: \"submit-button\",\n                    type: \"submit\",\n                    children: \"Delete Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"danger\",\n                    onClick: handleDeleteStatusClose,\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            show: this.state.statusshow,\n            onHide: handleAddStatusClose,\n            children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n              closeButton: true,\n              children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n                children: \"Add Status Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: function onSubmit(e) {\n                  return _this3.handleAddStatus(e);\n                },\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"col-md-12\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Status Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"input\",\n                    name: \"statusname\",\n                    onChange: this.handleStatusChange,\n                    placeholder: \"Enter Status Name\",\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"col-md-12\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Status Sequence\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"number\",\n                    min: \"1\",\n                    name: \"statussequence\",\n                    onChange: this.handleStatusChange,\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"success\",\n                    className: \"submit-button\",\n                    type: \"submit\",\n                    children: \"Add Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"danger\",\n                    onClick: handleAddStatusClose,\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            show: this.state.show,\n            onHide: handleClose,\n            children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n              closeButton: true,\n              children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n                children: \"Add Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: this.handleAddTask,\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"col-md-12\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Title\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"input\",\n                    name: \"title\",\n                    onChange: this.handleChange,\n                    placeholder: \"Enter Task Title\",\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"col-md-12\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Comments\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"input\",\n                    name: \"comments\",\n                    onChange: this.handleChange,\n                    placeholder: \"Enter Comments\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"col-md-12\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Task Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"select\",\n                    name: \"selectedstatusid\",\n                    onChange: this.handleChange,\n                    required: true,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: this.state.selectedstatusid,\n                      children: [this.state.selectedstatusname, \" , Sequence : \", this.state.selectedstatussequence, \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 271,\n                      columnNumber: 41\n                    }, this), this.state.allStatus.map(function (status) {\n                      if (status.id != _this3.state.selectedstatusid) {\n                        return /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: status.id,\n                          children: [\" \", status.statusname, \" , Sequence : \", status.statussequence, \" \"]\n                        }, status.id, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 274,\n                          columnNumber: 57\n                        }, _this3);\n                      }\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"col-md-12\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Assigned To :\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"select\",\n                    name: \"assignedto\",\n                    onChange: this.handleUserSelectChange,\n                    required: true,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"---Select User---\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 282,\n                      columnNumber: 41\n                    }, this), this.state.userslist.map(function (user) {\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: [[\"\".concat(user.firstname, \" \").concat(user.lastname)], [user.id]],\n                        children: [user.firstname, \" \", user.lastname, \" Id: \", user.id]\n                      }, user.id, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 284,\n                        columnNumber: 45\n                      }, _this3);\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"success\",\n                    className: \"submit-button\",\n                    type: \"submit\",\n                    children: \"Add Task\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"danger\",\n                    onClick: handleClose,\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return UserTasks;\n}(React.Component);\n\n;\nexport default UserTasks;","map":{"version":3,"sources":["/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/components/tasks.component.js"],"names":["React","Button","Form","Modal","UserTasks","props","e","target","name","value","setState","console","log","state","tempobj","addStatus","preventDefault","fetch","method","headers","body","JSON","stringify","then","r","json","res","tasks","show","allStatus","statusshow","deleteStatus","response","data","deletestatusshow","valuearray","split","assignedto","assignedtoid","parseInt","id","count","taskcount","filter","task","statusid","length","title","comments","taskstatus","selectedstatusid","selectedstatusname","selectedstatussequence","userslist","statusname","statussequence","handleClose","handleAddStatusClose","handleDeleteStatusClose","backgroundImage","minHeight","textAlign","marginTop","marginBottom","marginRight","marginLeft","map","status","countTask","taskByStatusId","borderRadius","position","right","top","handleDeleteTask","listStyle","padding","handleDeleteStatus","handleChange","handleAddStatus","handleStatusChange","handleAddTask","handleUserSelectChange","user","firstname","lastname","Component"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,iBAApC;;IAGMC,S;;;;;AACF,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,mEAiDJ,UAAAC,CAAC,EAAI;AAChB;AADgB,sBAEQA,CAAC,CAACC,MAFV;AAAA,UAERC,IAFQ,aAERA,IAFQ;AAAA,UAEFC,KAFE,aAEFA,KAFE;;AAGhB,YAAKC,QAAL,qBAAiBF,IAAjB,EAAwBC,KAAxB,GAAiC;AAAA,eAAME,OAAO,CAACC,GAAR,CAAY,MAAKC,KAAjB,CAAN;AAAA,OAAjC;AACH,KArDkB;;AAAA,yEAuDE,UAAAP,CAAC,EAAI;AACtB;AADsB,uBAEEA,CAAC,CAACC,MAFJ;AAAA,UAEdC,IAFc,cAEdA,IAFc;AAAA,UAERC,KAFQ,cAERA,KAFQ;AAGtB,UAAMK,OAAO,GAAG,MAAKD,KAAL,CAAWE,SAA3B;AACAD,MAAAA,OAAO,CAACN,IAAD,CAAP,GAAgBC,KAAhB;;AACA,YAAKC,QAAL,CAAc;AAAEK,QAAAA,SAAS,EAAED;AAAb,OAAd,EAAsC;AAAA,eAAMH,OAAO,CAACC,GAAR,CAAY,MAAKC,KAAL,CAAWE,SAAvB,CAAN;AAAA,OAAtC;AACH,KA7DkB;;AAAA,oEA+DH,UAAAT,CAAC,EAAI;AACjBA,MAAAA,CAAC,CAACU,cAAF;AACAC,MAAAA,KAAK,CAAC,mBAAD,EAAsB;AACvBC,QAAAA,MAAM,EAAE,MADe;AAEvBC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFc;AAGvBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,MAAKT,KAApB;AAHiB,OAAtB,CAAL,CAIGU,IAJH,CAIQ,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACC,IAAF,EAAJ;AAAA,OAJT,EAKKF,IALL,CAKU,UAAAG,GAAG,EAAI;AACT,cAAKhB,QAAL,CAAc;AACViB,UAAAA,KAAK,EAAED;AADG,SAAd;AAGH,OATL;;AAUA,YAAKhB,QAAL,CAAc;AAAEkB,QAAAA,IAAI,EAAE;AAAR,OAAd;AACH,KA5EkB;;AAAA,uEA8EA,UAAAtB,CAAC,EAAI;AACpBW,MAAAA,KAAK,6BAAsBX,CAAtB,GAA2B;AAAEY,QAAAA,MAAM,EAAE;AAAV,OAA3B,CAAL,CACKK,IADL,CACU,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACC,IAAF,EAAJ;AAAA,OADX,EAEKF,IAFL,CAEU,UAAAG,GAAG,EAAI;AACT,cAAKhB,QAAL,CAAc;AACViB,UAAAA,KAAK,EAAED;AADG,SAAd;AAGH,OANL;AAQH,KAvFkB;;AAAA,sEAyFD,UAAApB,CAAC,EAAI;AACnBA,MAAAA,CAAC,CAACU,cAAF;AACAC,MAAAA,KAAK,CAAC,0BAAD,EAA6B;AAC9BC,QAAAA,MAAM,EAAE,MADsB;AAE9BC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFqB;AAG9BC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,MAAKT,KAAL,CAAWE,SAA1B;AAHwB,OAA7B,CAAL,CAIGQ,IAJH,CAIQ,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACC,IAAF,EAAJ;AAAA,OAJT,EAKKF,IALL,CAKU,UAAAG,GAAG,EAAI;AACT,cAAKhB,QAAL,CAAc;AACVmB,UAAAA,SAAS,EAAEH;AADD,SAAd;AAGH,OATL;;AAUA,YAAKhB,QAAL,CAAc;AAAEoB,QAAAA,UAAU,EAAE;AAAd,OAAd,EAAqCnB,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B,MAAKC,KAAlC,CAArC;AACH,KAtGkB;;AAAA,yEAwGE,UAAAP,CAAC,EAAI;AAEtBA,MAAAA,CAAC,CAACU,cAAF;AACAC,MAAAA,KAAK,oCAA6B,MAAKJ,KAAL,CAAWkB,YAAxC,GAAwD;AACzDb,QAAAA,MAAM,EAAE;AADiD,OAAxD,CAAL,CAIKK,IAJL,CAIU,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACC,IAAF,EAAJ;AAAA,OAJX,EAKKF,IALL,CAKU,UAAAG,GAAG,EAAI;AACT,cAAKhB,QAAL,CAAc;AACVmB,UAAAA,SAAS,EAAEH;AADD,SAAd;AAGH,OATL;AAWAT,MAAAA,KAAK,cAAL,CACKM,IADL,CACU,UAACS,QAAD;AAAA,eAAcA,QAAQ,CAACP,IAAT,EAAd;AAAA,OADV,EAEKF,IAFL,CAEU,UAAAU,IAAI,EAAI;AACV,cAAKvB,QAAL,CAAc;AAAEwB,UAAAA,gBAAgB,EAAE,KAApB;AAA2BP,UAAAA,KAAK,EAAEM;AAAlC,SAAd;AACH,OAJL;AAMH,KA5HkB;;AAAA,6EA6HM,UAAC3B,CAAD,EAAO;AAAA,UACpBG,KADoB,GACVH,CAAC,CAACC,MADQ,CACpBE,KADoB;AAE5B,UAAI0B,UAAU,GAAG1B,KAAK,CAAC2B,KAAN,CAAY,GAAZ,CAAjB;AACAzB,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BuB,UAA7B;AACA,UAAIE,UAAU,GAAGF,UAAU,CAAC,CAAD,CAA3B;AACA,UAAIG,YAAY,GAAGC,QAAQ,CAACJ,UAAU,CAAC,CAAD,CAAX,CAA3B;;AACA,YAAKzB,QAAL,CAAc;AAAE2B,QAAAA,UAAU,EAAEA,UAAd;AAA0BC,QAAAA,YAAY,EAAEA;AAAxC,OAAd,EAAsE;AAAA,eAAM3B,OAAO,CAACC,GAAR,CAAY,MAAKC,KAAjB,CAAN;AAAA,OAAtE;AACH,KApIkB;;AAAA,gEAsIP,UAAC2B,EAAD,EAAQ;AAChB,UAAIC,KAAK,GAAG,CAAZ;;AACA,UAAIC,SAAS,GAAG,MAAK7B,KAAL,CAAWc,KAAX,CAAiBgB,MAAjB,CAAwB,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,QAAL,IAAiBL,EAArB;AAAA,OAA5B,CAAhB;;AACAC,MAAAA,KAAK,GAAGC,SAAS,CAACI,MAAlB;AACA,0BACI;AAAA,wBAAOL,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA,uCADJ;AAGH,KA7IkB;;AAAA,qEA+IF,UAACD,EAAD,EAAQ;AACrB,UAAIP,IAAJ;AACAhB,MAAAA,KAAK,CAAC,uBAAuBuB,EAAxB,CAAL,CACKjB,IADL,CACU,UAACS,QAAD;AAAA,eAAcA,QAAQ,CAACP,IAAT,EAAd;AAAA,OADV,EAEKF,IAFL,CAEU,UAAAU,IAAI;AAAA,eAAIA,IAAI,GAAGA,IAAX;AAAA,OAFd;AAGAtB,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCqB,IAAjC;AACA,0BAAQ;AAAA,wBAAOA,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA,uCAAR;AACH,KAtJkB;;AAEf,UAAKpB,KAAL,GAAa;AACTkC,MAAAA,KAAK,EAAE,IADE;AAETC,MAAAA,QAAQ,EAAE,IAFD;AAGTC,MAAAA,UAAU,EAAE,EAHH;AAITC,MAAAA,gBAAgB,EAAE,EAJT;AAKTC,MAAAA,kBAAkB,EAAE,EALX;AAMTC,MAAAA,sBAAsB,EAAE,EANf;AAOTf,MAAAA,UAAU,EAAE,IAPH;AAQTC,MAAAA,YAAY,EAAE,IARL;AASTL,MAAAA,IAAI,EAAE,IATG;AAUTL,MAAAA,IAAI,EAAE,KAVG;AAWTD,MAAAA,KAAK,EAAE,EAXE;AAYT0B,MAAAA,SAAS,EAAE,EAZF;AAaTvB,MAAAA,UAAU,EAAE,KAbH;AAcTI,MAAAA,gBAAgB,EAAE,KAdT;AAgBTnB,MAAAA,SAAS,EAAE;AACPuC,QAAAA,UAAU,EAAE,EADL;AAEPC,QAAAA,cAAc,EAAE;AAFT,OAhBF;AAoBTxB,MAAAA,YAAY,EAAE,IApBL;AAqBTF,MAAAA,SAAS,EAAE;AArBF,KAAb;AAFe;AAyBlB;;;;wCAGmB;AAAA;;AAChBZ,MAAAA,KAAK,cAAL,CACKM,IADL,CACU,UAACS,QAAD;AAAA,eAAcA,QAAQ,CAACP,IAAT,EAAd;AAAA,OADV,EAEKF,IAFL,CAEU,UAAAU,IAAI,EAAI;AACV,QAAA,MAAI,CAACvB,QAAL,CAAc;AAAE2C,UAAAA,SAAS,EAAEpB;AAAb,SAAd;AACH,OAJL;AAKAhB,MAAAA,KAAK,cAAL,CACKM,IADL,CACU,UAACS,QAAD;AAAA,eAAcA,QAAQ,CAACP,IAAT,EAAd;AAAA,OADV,EAEKF,IAFL,CAEU,UAAAU,IAAI,EAAI;AACV,QAAA,MAAI,CAACvB,QAAL,CAAc;AAAEiB,UAAAA,KAAK,EAAEM;AAAT,SAAd;AACH,OAJL;AAMAhB,MAAAA,KAAK,yBAAL,CACKM,IADL,CACU,UAACS,QAAD;AAAA,eAAcA,QAAQ,CAACP,IAAT,EAAd;AAAA,OADV,EAEKF,IAFL,CAEU,UAAAU,IAAI,EAAI;AACV,QAAA,MAAI,CAACvB,QAAL,CAAc;AAAEmB,UAAAA,SAAS,EAAEI;AAAb,SAAd;AACH,OAJL;AAOH;;;6BAyGQ;AAAA;;AACL,UAAMuB,WAAW,GAAG,SAAdA,WAAc;AAAA,eAAM,MAAI,CAAC9C,QAAL,CAAc;AAAEkB,UAAAA,IAAI,EAAE;AAAR,SAAd,CAAN;AAAA,OAApB;;AACA,UAAM6B,oBAAoB,GAAG,SAAvBA,oBAAuB;AAAA,eAAM,MAAI,CAAC/C,QAAL,CAAc;AAAEoB,UAAAA,UAAU,EAAE;AAAd,SAAd,CAAN;AAAA,OAA7B;;AACA,UAAM4B,uBAAuB,GAAG,SAA1BA,uBAA0B;AAAA,eAAM,MAAI,CAAChD,QAAL,CAAc;AAAEwB,UAAAA,gBAAgB,EAAE;AAApB,SAAd,CAAN;AAAA,OAAhC;;AACAvB,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,KAAKC,KAAL,CAAWgB,SAAzC;AAEA,0BACI;AAAK,QAAA,KAAK,EAAE;AAAE8B,UAAAA,eAAe,EAAE,6CAAnB;AAAkEC,UAAAA,SAAS,EAAE;AAA7E,SAAZ;AAAA,gCACI;AAAK,UAAA,KAAK,EAAE;AAAEC,YAAAA,SAAS,EAAE;AAAb,WAAZ;AAAA,kCACI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,SAAhB;AAA0B,YAAA,OAAO,EAAE,mBAAM;AAAE,cAAA,MAAI,CAACnD,QAAL,CAAc;AAAEoB,gBAAAA,UAAU,EAAE;AAAd,eAAd;AAAqC,aAAhF;AAAkF,YAAA,KAAK,EAAE;AAAEgC,cAAAA,SAAS,EAAE,MAAb;AAAqBC,cAAAA,YAAY,EAAE,MAAnC;AAA2CC,cAAAA,WAAW,EAAE;AAAxD,aAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEK,KAAKnD,KAAL,CAAWgB,SAAX,CAAqBiB,MAArB,GAA8B,CAA9B,gBAAmC,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,QAAhB;AAAyB,YAAA,OAAO,EAAE,mBAAM;AAAE,cAAA,MAAI,CAACpC,QAAL,CAAc;AAAEwB,gBAAAA,gBAAgB,EAAE;AAApB,eAAd;AAA2C,aAArF;AAAuF,YAAA,KAAK,EAAE;AAAE+B,cAAAA,UAAU,EAAE,MAAd;AAAsBH,cAAAA,SAAS,EAAE,MAAjC;AAAyCC,cAAAA,YAAY,EAAE,MAAvD;AAA+DC,cAAAA,WAAW,EAAE;AAA5E,aAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAnC,GAAwP,EAF7P;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,oBACK,KAAKnD,KAAL,CAAWgB,SAAX,CAAqBqC,GAArB,CAAyB,UAACC,MAAD,EAAY;AAClC,gCAAQ;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,sCACJ;AAAK,gBAAA,KAAK,EAAE;AAAEN,kBAAAA,SAAS,EAAE;AAAb,iBAAZ;AAAA,uCAAqC;AAAA,6BAAKM,MAAM,CAACb,UAAZ,OAAyB,MAAI,CAACc,SAAL,CAAeD,MAAM,CAAC3B,EAAtB,CAAzB,OAAqD,MAAI,CAAC6B,cAAL,CAAoBF,MAAM,CAAC3B,EAA3B,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAArC;AAAA;AAAA;AAAA;AAAA,wBADI,eAEJ;AAAK,gBAAA,SAAS,EAAC,iBAAf;AAAA,wCACI,QAAC,MAAD;AAAQ,kBAAA,KAAK,EAAE;AAAEyB,oBAAAA,UAAU,EAAE,OAAd;AAAuBD,oBAAAA,WAAW,EAAE,OAApC;AAA6CF,oBAAAA,SAAS,EAAE,OAAxD;AAAiEQ,oBAAAA,YAAY,EAAE;AAA/E,mBAAf;AAAwG,kBAAA,OAAO,EAAE,mBAAM;AAAE,oBAAA,MAAI,CAAC5D,QAAL,CAAc;AAAEkB,sBAAAA,IAAI,EAAE,IAAR;AAAcsB,sBAAAA,gBAAgB,EAAEiB,MAAM,CAAC3B,EAAvC;AAA2CW,sBAAAA,kBAAkB,EAAEgB,MAAM,CAACb,UAAtE;AAAkFF,sBAAAA,sBAAsB,EAAEe,MAAM,CAACZ;AAAjH,qBAAd;AAAkJ,mBAA3Q;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAGK,MAAI,CAAC1C,KAAL,CAAWc,KAAX,CAAiBuC,GAAjB,CAAqB,UAACtB,IAAD,EAAU;AAC5B,sBAAIA,IAAI,CAACC,QAAL,cAAoBsB,MAAM,CAAC3B,EAA3B,CAAJ,EAAqC;AACjC,wCAAQ;AAAmB,sBAAA,SAAS,EAAC,cAA7B;AAAA,8CACJ;AAAK,wBAAA,KAAK,EAAE;AAAEqB,0BAAAA,SAAS,EAAE,OAAb;AAAsBU,0BAAAA,QAAQ,EAAE,UAAhC;AAA4CC,0BAAAA,KAAK,EAAE,MAAnD;AAA2DC,0BAAAA,GAAG,EAAE;AAAhE,yBAAZ;AAAA,+CAAqF,QAAC,MAAD;AAAQ,0BAAA,OAAO,EAAC,aAAhB;AAA8B,0BAAA,OAAO,EAAE;AAAA,mCAAM,MAAI,CAACC,gBAAL,CAAsB9B,IAAI,CAACJ,EAA3B,CAAN;AAAA,2BAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAArF;AAAA;AAAA;AAAA;AAAA,gCADI,eAEJ;AAAI,wBAAA,KAAK,EAAE;AAAEmC,0BAAAA,SAAS,EAAE,MAAb;AAAqBC,0BAAAA,OAAO,EAAE;AAA9B,yBAAX;AAAA,gDACI;AAAA,4CAAQhC,IAAI,CAACJ,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,eAEI;AAAA,+CAAWI,IAAI,CAACG,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFJ,eAGI;AAAA,sDAAkBH,IAAI,CAACuB,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,kCAHJ,eAII;AAAA,sDAAkBvB,IAAI,CAACP,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,kCAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFI;AAAA,uBAAUO,IAAI,CAACJ,EAAf;AAAA;AAAA;AAAA;AAAA,8BAAR;AASH;AACJ,iBAZA,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFI;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAR;AAoBH,WArBA;AADL;AAAA;AAAA;AAAA;AAAA,gBANJ,eA+BI;AAAA,kCACI,QAAC,KAAD;AAAO,YAAA,IAAI,EAAE,KAAK3B,KAAL,CAAWqB,gBAAxB;AAA0C,YAAA,MAAM,EAAEwB,uBAAlD;AAAA,oCACI,QAAC,KAAD,CAAO,MAAP;AAAc,cAAA,WAAW,MAAzB;AAAA,qCACI,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII,QAAC,KAAD,CAAO,IAAP;AAAA,qCACI,QAAC,IAAD;AAAM,gBAAA,QAAQ,EAAE,kBAACpD,CAAD;AAAA,yBAAO,MAAI,CAACuE,kBAAL,CAAwBvE,CAAxB,CAAP;AAAA,iBAAhB;AAAA,wCACI,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,SAAS,EAAC,WAAtB;AAAA,0CACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,oBAAA,EAAE,EAAC,QAAjB;AAA0B,oBAAA,QAAQ,EAAE,kBAACA,CAAD;AAAA,6BAAO,MAAI,CAACwE,YAAL,CAAkBxE,CAAlB,CAAP;AAAA,qBAApC;AAAiE,oBAAA,IAAI,EAAC,cAAtE;AAAqF,oBAAA,QAAQ,MAA7F;AAAA,4CACI;AAAQ,sBAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEK,KAAKO,KAAL,CAAWgB,SAAX,CAAqBqC,GAArB,CAAyB,UAAAC,MAAM;AAAA,0CAC5B;AAAwB,wBAAA,KAAK,EAAEA,MAAM,CAAC3B,EAAtC;AAAA,wCAA4C2B,MAAM,CAACb,UAAnD,oBAA6Ea,MAAM,CAACZ,cAApF;AAAA,yBAAaY,MAAM,CAAC3B,EAApB;AAAA;AAAA;AAAA;AAAA,gCAD4B;AAAA,qBAA/B,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAUI,QAAC,KAAD,CAAO,MAAP;AAAA,0CACI,QAAC,MAAD;AAAQ,oBAAA,OAAO,EAAC,MAAhB;AAAuB,oBAAA,SAAS,EAAC,eAAjC;AAAiD,oBAAA,IAAI,EAAC,QAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAII,QAAC,MAAD;AAAQ,oBAAA,OAAO,EAAC,QAAhB;AAAyB,oBAAA,OAAO,EAAEkB,uBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eA6BI,QAAC,KAAD;AAAO,YAAA,IAAI,EAAE,KAAK7C,KAAL,CAAWiB,UAAxB;AAAoC,YAAA,MAAM,EAAE2B,oBAA5C;AAAA,oCACI,QAAC,KAAD,CAAO,MAAP;AAAc,cAAA,WAAW,MAAzB;AAAA,qCACI,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII,QAAC,KAAD,CAAO,IAAP;AAAA,qCACI,QAAC,IAAD;AAAM,gBAAA,QAAQ,EAAE,kBAACnD,CAAD;AAAA,yBAAO,MAAI,CAACyE,eAAL,CAAqBzE,CAArB,CAAP;AAAA,iBAAhB;AAAA,wCACI,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,SAAS,EAAC,WAAtB;AAAA,0CACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,oBAAA,IAAI,EAAC,OAAnB;AAA2B,oBAAA,IAAI,EAAC,YAAhC;AAA6C,oBAAA,QAAQ,EAAE,KAAK0E,kBAA5D;AAAgF,oBAAA,WAAW,EAAC,mBAA5F;AAAgH,oBAAA,QAAQ;AAAxH;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAKI,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,SAAS,EAAC,WAAtB;AAAA,0CACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,oBAAA,IAAI,EAAC,QAAnB;AAA4B,oBAAA,GAAG,EAAC,GAAhC;AAAoC,oBAAA,IAAI,EAAC,gBAAzC;AAA0D,oBAAA,QAAQ,EAAE,KAAKA,kBAAzE;AAA6F,oBAAA,QAAQ;AAArG;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBALJ,eASI,QAAC,KAAD,CAAO,MAAP;AAAA,0CACI,QAAC,MAAD;AAAQ,oBAAA,OAAO,EAAC,SAAhB;AAA0B,oBAAA,SAAS,EAAC,eAApC;AAAoD,oBAAA,IAAI,EAAC,QAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAII,QAAC,MAAD;AAAQ,oBAAA,OAAO,EAAC,QAAhB;AAAyB,oBAAA,OAAO,EAAEvB,oBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBA7BJ,eAwDI,QAAC,KAAD;AAAO,YAAA,IAAI,EAAE,KAAK5C,KAAL,CAAWe,IAAxB;AAA8B,YAAA,MAAM,EAAE4B,WAAtC;AAAA,oCACI,QAAC,KAAD,CAAO,MAAP;AAAc,cAAA,WAAW,MAAzB;AAAA,qCACI,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII,QAAC,KAAD,CAAO,IAAP;AAAA,qCACI,QAAC,IAAD;AAAM,gBAAA,QAAQ,EAAE,KAAKyB,aAArB;AAAA,wCACI,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,SAAS,EAAC,WAAtB;AAAA,0CACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,oBAAA,IAAI,EAAC,OAAnB;AAA2B,oBAAA,IAAI,EAAC,OAAhC;AAAwC,oBAAA,QAAQ,EAAE,KAAKH,YAAvD;AAAqE,oBAAA,WAAW,EAAC,kBAAjF;AAAoG,oBAAA,QAAQ;AAA5G;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAKI,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,SAAS,EAAC,WAAtB;AAAA,0CACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,oBAAA,IAAI,EAAC,OAAnB;AAA2B,oBAAA,IAAI,EAAC,UAAhC;AAA2C,oBAAA,QAAQ,EAAE,KAAKA,YAA1D;AAAwE,oBAAA,WAAW,EAAC;AAApF;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBALJ,eAUI,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,SAAS,EAAC,WAAtB;AAAA,0CACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,oBAAA,EAAE,EAAC,QAAjB;AAA0B,oBAAA,IAAI,EAAC,kBAA/B;AAAkD,oBAAA,QAAQ,EAAE,KAAKA,YAAjE;AAA+E,oBAAA,QAAQ,MAAvF;AAAA,4CAEI;AAAQ,sBAAA,KAAK,EAAE,KAAKjE,KAAL,CAAWqC,gBAA1B;AAAA,iCAA6C,KAAKrC,KAAL,CAAWsC,kBAAxD,oBAA0F,KAAKtC,KAAL,CAAWuC,sBAArG;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ,EAGK,KAAKvC,KAAL,CAAWgB,SAAX,CAAqBqC,GAArB,CAAyB,UAAAC,MAAM,EAAI;AAChC,0BAAIA,MAAM,CAAC3B,EAAP,IAAa,MAAI,CAAC3B,KAAL,CAAWqC,gBAA5B,EAA8C;AAC1C,4CAAQ;AAAwB,0BAAA,KAAK,EAAEiB,MAAM,CAAC3B,EAAtC;AAAA,0CAA4C2B,MAAM,CAACb,UAAnD,oBAA6Ea,MAAM,CAACZ,cAApF;AAAA,2BAAaY,MAAM,CAAC3B,EAApB;AAAA;AAAA;AAAA;AAAA,kCAAR;AACH;AACJ,qBAJA,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAVJ,eAsBI,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,SAAS,EAAC,WAAtB;AAAA,0CACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,oBAAA,EAAE,EAAC,QAAjB;AAA0B,oBAAA,IAAI,EAAC,YAA/B;AAA4C,oBAAA,QAAQ,EAAE,KAAK0C,sBAA3D;AAAmF,oBAAA,QAAQ,MAA3F;AAAA,4CACI;AAAQ,sBAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEK,KAAKrE,KAAL,CAAWwC,SAAX,CAAqBa,GAArB,CAAyB,UAAAiB,IAAI;AAAA,0CAC1B;AAAsB,wBAAA,KAAK,EAAE,CAAC,WAAIA,IAAI,CAACC,SAAT,cAAsBD,IAAI,CAACE,QAA3B,EAAD,EAAyC,CAACF,IAAI,CAAC3C,EAAN,CAAzC,CAA7B;AAAA,mCAAmF2C,IAAI,CAACC,SAAxF,OAAoGD,IAAI,CAACE,QAAzG,WAAwHF,IAAI,CAAC3C,EAA7H;AAAA,yBAAa2C,IAAI,CAAC3C,EAAlB;AAAA;AAAA;AAAA;AAAA,gCAD0B;AAAA,qBAA7B,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAtBJ,eA+BI,QAAC,KAAD,CAAO,MAAP;AAAA,0CACI,QAAC,MAAD;AAAQ,oBAAA,OAAO,EAAC,SAAhB;AAA0B,oBAAA,SAAS,EAAC,eAApC;AAAoD,oBAAA,IAAI,EAAC,QAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAII,QAAC,MAAD;AAAQ,oBAAA,OAAO,EAAC,QAAhB;AAAyB,oBAAA,OAAO,EAAEgB,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBA/BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAxDJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/BJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AA4IH;;;;EA3SmBxD,KAAK,CAACsF,S;;AA6S7B;AAED,eAAelF,SAAf","sourcesContent":["import React from 'react';\nimport { Button, Form, Modal } from 'react-bootstrap';\n\n\nclass UserTasks extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: null,\n            comments: null,\n            taskstatus: \"\",\n            selectedstatusid: '',\n            selectedstatusname: '',\n            selectedstatussequence: '',\n            assignedto: null,\n            assignedtoid: null,\n            data: null,\n            show: false,\n            tasks: [],\n            userslist: [],\n            statusshow: false,\n            deletestatusshow: false,\n\n            addStatus: {\n                statusname: \"\",\n                statussequence: \"\"\n            },\n            deleteStatus: null,\n            allStatus: []\n        }\n    }\n\n\n    componentDidMount() {\n        fetch(`/api/users`)\n            .then((response) => response.json())\n            .then(data => {\n                this.setState({ userslist: data });\n            });\n        fetch(`/api/tasks`)\n            .then((response) => response.json())\n            .then(data => {\n                this.setState({ tasks: data });\n            });\n\n        fetch(`/api/tasks/status/all`)\n            .then((response) => response.json())\n            .then(data => {\n                this.setState({ allStatus: data });\n            });\n\n\n    }\n\n    handleChange = e => {\n        // e.preventDefault();\n        const { name, value } = e.target;\n        this.setState({ [name]: value }, () => console.log(this.state));\n    };\n\n    handleStatusChange = e => {\n        // e.preventDefault();\n        const { name, value } = e.target;\n        const tempobj = this.state.addStatus;\n        tempobj[name] = value\n        this.setState({ addStatus: tempobj }, () => console.log(this.state.addStatus));\n    };\n\n    handleAddTask = e => {\n        e.preventDefault()\n        fetch('/api/tasks/create', {\n            method: 'POST',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify(this.state)\n        }).then(r => r.json())\n            .then(res => {\n                this.setState({\n                    tasks: res\n                })\n            })\n        this.setState({ show: false })\n    }\n\n    handleDeleteTask = e => {\n        fetch(`/api/tasks/delete/${e}`, { method: 'POST' })\n            .then(r => r.json())\n            .then(res => {\n                this.setState({\n                    tasks: res\n                })\n            })\n\n    }\n\n    handleAddStatus = e => {\n        e.preventDefault()\n        fetch('/api/tasks/status/create', {\n            method: 'POST',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify(this.state.addStatus)\n        }).then(r => r.json())\n            .then(res => {\n                this.setState({\n                    allStatus: res\n                })\n            })\n        this.setState({ statusshow: false }, console.log(\"this.state==>\", this.state))\n    }\n\n    handleDeleteStatus = e => {\n\n        e.preventDefault()\n        fetch(`/api/tasks/status/delete/${this.state.deleteStatus}`, {\n            method: 'POST'\n\n        })\n            .then(r => r.json())\n            .then(res => {\n                this.setState({\n                    allStatus: res\n                })\n            })\n\n        fetch(`/api/tasks`)\n            .then((response) => response.json())\n            .then(data => {\n                this.setState({ deletestatusshow: false, tasks: data });\n            });\n\n    }\n    handleUserSelectChange = (e) => {\n        const { value } = e.target;\n        var valuearray = value.split(\",\")\n        console.log(\"valuearray==>\", valuearray)\n        var assignedto = valuearray[0]\n        var assignedtoid = parseInt(valuearray[1])\n        this.setState({ assignedto: assignedto, assignedtoid: assignedtoid }, () => console.log(this.state));\n    }\n\n    countTask = (id) => {\n        var count = 0;\n        var taskcount = this.state.tasks.filter(task => task.statusid == id)\n        count = taskcount.length;\n        return (\n            <div>({count})</div>\n        )\n    }\n\n    taskByStatusId = (id) => {\n        var data;\n        fetch(`/api/tasks/status/` + id)\n            .then((response) => response.json())\n            .then(data => data = data);\n        console.log(\"databystatusi===>\", data)\n        return (<div> {data} </div>)\n    }\n\n    render() {\n        const handleClose = () => this.setState({ show: false });\n        const handleAddStatusClose = () => this.setState({ statusshow: false });\n        const handleDeleteStatusClose = () => this.setState({ deletestatusshow: false });\n        console.log(\"allStatus ===>\", this.state.allStatus)\n\n        return (\n            <div style={{ backgroundImage: \"linear-gradient(to right, #4880EC, #019CAD)\", minHeight: '91vh' }}>\n                <div style={{ textAlign: 'right' }}>\n                    <Button variant=\"success\" onClick={() => { this.setState({ statusshow: true }) }} style={{ marginTop: '15px', marginBottom: '15px', marginRight: '20px' }}> Add Status Type </Button>\n                    {this.state.allStatus.length > 0 ? (<Button variant=\"danger\" onClick={() => { this.setState({ deletestatusshow: true }) }} style={{ marginLeft: '10px', marginTop: '15px', marginBottom: '15px', marginRight: '20px' }}> Delete Status Type </Button>) : \"\"}\n                </div>\n\n                <div className=\"row mx-3\"  >\n                    {this.state.allStatus.map((status) => {\n                        return (<div className=\"col-md-3 \" >\n                            <div style={{ textAlign: 'center' }}><h3>{status.statusname} {this.countTask(status.id)} {this.taskByStatusId(status.id)}</h3></div>\n                            <div className=\"bg-success card\" >\n                                <Button style={{ marginLeft: '-24px', marginRight: '-24px', marginTop: '-24px', borderRadius: '10px' }} onClick={() => { this.setState({ show: true, selectedstatusid: status.id, selectedstatusname: status.statusname, selectedstatussequence: status.statussequence }) }} > Add Task </Button>\n\n                                {this.state.tasks.map((task) => {\n                                    if (task.statusid == `${status.id}`) {\n                                        return (<div key={task.id} className=\"bg-info card\">\n                                            <div style={{ textAlign: 'right', position: 'absolute', right: '10px', top: '8px' }}><Button variant=\"transparent\" onClick={() => this.handleDeleteTask(task.id)}>X</Button></div>\n                                            <ul style={{ listStyle: 'none', padding: '0px' }}>\n                                                <li>Id:{task.id} </li>\n                                                <li>Title:{task.title}</li>\n                                                <li>Task Status: {task.status}</li>\n                                                <li>Assigned To: {task.assignedto}</li>\n                                            </ul>\n                                        </div>)\n                                    }\n                                })}\n                            </div>\n                        </div>)\n                    })}\n\n                </div>\n                <div>\n                    <Modal show={this.state.deletestatusshow} onHide={handleDeleteStatusClose}>\n                        <Modal.Header closeButton>\n                            <Modal.Title>Delete Status Type</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <Form onSubmit={(e) => this.handleDeleteStatus(e)}>\n                                <Form.Group className=\"col-md-12\">\n                                    <Form.Label>Status :</Form.Label>\n                                    <Form.Control as=\"select\" onChange={(e) => this.handleChange(e)} name=\"deleteStatus\" required>\n                                        <option value=\"\">---Select Status---</option>\n                                        {this.state.allStatus.map(status => (\n                                            <option key={status.id} value={status.id}> {status.statusname} , Sequence : {status.statussequence} </option>\n                                        ))}\n                                    </Form.Control>\n                                </Form.Group>\n                                <Modal.Footer>\n                                    <Button variant=\"info\" className=\"submit-button\" type=\"submit\">\n                                        Delete Status\n                                     </Button>\n                                    <Button variant=\"danger\" onClick={handleDeleteStatusClose}>\n                                        Cancel\n                                     </Button>\n                                </Modal.Footer>\n                            </Form>\n                        </Modal.Body>\n\n                    </Modal>\n\n                    <Modal show={this.state.statusshow} onHide={handleAddStatusClose}>\n                        <Modal.Header closeButton>\n                            <Modal.Title>Add Status Type</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <Form onSubmit={(e) => this.handleAddStatus(e)}>\n                                <Form.Group className=\"col-md-12\">\n                                    <Form.Label>Status Name</Form.Label>\n                                    <Form.Control type=\"input\" name=\"statusname\" onChange={this.handleStatusChange} placeholder=\"Enter Status Name\" required></Form.Control>\n                                </Form.Group>\n                                <Form.Group className=\"col-md-12\">\n                                    <Form.Label>Status Sequence</Form.Label>\n                                    <Form.Control type=\"number\" min=\"1\" name=\"statussequence\" onChange={this.handleStatusChange} required></Form.Control>\n                                </Form.Group>\n                                <Modal.Footer>\n                                    <Button variant=\"success\" className=\"submit-button\" type=\"submit\">\n                                        Add Status\n                                     </Button>\n                                    <Button variant=\"danger\" onClick={handleAddStatusClose}>\n                                        Cancel\n                                     </Button>\n                                </Modal.Footer>\n                            </Form>\n                        </Modal.Body>\n\n                    </Modal>\n\n                    <Modal show={this.state.show} onHide={handleClose}>\n                        <Modal.Header closeButton>\n                            <Modal.Title>Add Task</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <Form onSubmit={this.handleAddTask}>\n                                <Form.Group className=\"col-md-12\">\n                                    <Form.Label>Title</Form.Label>\n                                    <Form.Control type=\"input\" name=\"title\" onChange={this.handleChange} placeholder=\"Enter Task Title\" required ></Form.Control>\n                                </Form.Group>\n                                <Form.Group className=\"col-md-12\">\n                                    <Form.Label>Comments</Form.Label>\n                                    <Form.Control type=\"input\" name=\"comments\" onChange={this.handleChange} placeholder=\"Enter Comments\" ></Form.Control>\n                                </Form.Group>\n\n                                <Form.Group className=\"col-md-12\">\n                                    <Form.Label>Task Status</Form.Label>\n                                    <Form.Control as=\"select\" name=\"selectedstatusid\" onChange={this.handleChange} required>\n\n                                        <option value={this.state.selectedstatusid}>{this.state.selectedstatusname} , Sequence : {this.state.selectedstatussequence} </option>\n                                        {this.state.allStatus.map(status => {\n                                            if (status.id != this.state.selectedstatusid) {\n                                                return (<option key={status.id} value={status.id}> {status.statusname} , Sequence : {status.statussequence} </option>)\n                                            }\n                                        })}\n                                    </Form.Control>\n                                </Form.Group>\n                                <Form.Group className=\"col-md-12\">\n                                    <Form.Label>Assigned To :</Form.Label>\n                                    <Form.Control as=\"select\" name=\"assignedto\" onChange={this.handleUserSelectChange} required>\n                                        <option value=\"\">---Select User---</option>\n                                        {this.state.userslist.map(user => (\n                                            <option key={user.id} value={[[`${user.firstname} ${user.lastname}`], [user.id]]}>{user.firstname} {user.lastname} Id: {user.id}</option>\n                                        ))}\n                                    </Form.Control>\n                                </Form.Group>\n                                <Modal.Footer>\n                                    <Button variant=\"success\" className=\"submit-button\" type=\"submit\">\n                                        Add Task\n                                     </Button>\n                                    <Button variant=\"danger\" onClick={handleClose}>\n                                        Cancel\n                                     </Button>\n                                </Modal.Footer>\n                            </Form>\n                        </Modal.Body>\n\n                    </Modal>\n\n                </div>\n            </div>\n        )\n    }\n\n};\n\nexport default UserTasks;"]},"metadata":{},"sourceType":"module"}