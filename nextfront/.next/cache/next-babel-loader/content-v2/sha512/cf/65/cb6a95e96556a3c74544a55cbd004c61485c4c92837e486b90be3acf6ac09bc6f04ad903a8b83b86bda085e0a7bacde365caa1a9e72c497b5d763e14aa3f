{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/components/tasks.component.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Button, Form, Modal } from 'react-bootstrap';\nimport DatePicker from './datepicker.component';\nimport { addDays } from 'date-fns';\nimport MyTimeLine from './mytimeline.component';\n\nclass UserTasks extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleChange\", e => {\n      // e.preventDefault();\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      }, () => console.log(this.state));\n    });\n\n    _defineProperty(this, \"handleStatusChange\", e => {\n      // e.preventDefault();\n      const {\n        name,\n        value\n      } = e.target;\n      const tempobj = this.state.addStatus;\n      tempobj[name] = value;\n      this.setState({\n        addStatus: tempobj\n      }, () => console.log(this.state.addStatus));\n    });\n\n    _defineProperty(this, \"handleEditTaskChange\", e => {\n      // e.preventDefault();\n      const {\n        name,\n        value\n      } = e.target;\n      const tempobj = this.state.task;\n      tempobj[name] = value;\n      this.setState({\n        task: tempobj\n      }, () => console.log(this.state.task));\n    });\n\n    _defineProperty(this, \"handleAddTask\", e => {\n      e.preventDefault();\n      console.log(\"create called\");\n      fetch('/api/tasks/create', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(this.state)\n      }).then(response => response.json()).then(data => {\n        this.setState({\n          allStatus: data\n        });\n      });\n      this.setState({\n        show: false\n      });\n    });\n\n    _defineProperty(this, \"handleDeleteTask\", e => {\n      fetch(`/api/tasks/delete/${e}`, {\n        method: 'POST'\n      }).then(response => response.json()).then(data => {\n        this.setState({\n          allStatus: data\n        });\n      });\n    });\n\n    _defineProperty(this, \"handleAddStatus\", e => {\n      e.preventDefault();\n      fetch('/api/tasks/status/create', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(this.state.addStatus)\n      }).then(r => r.json()).then(res => {\n        this.setState({\n          allStatus: res\n        });\n      });\n      this.setState({\n        statusshow: false\n      }, console.log(\"this.state==>\", this.state));\n    });\n\n    _defineProperty(this, \"handleDeleteStatus\", e => {\n      e.preventDefault();\n      fetch(`/api/tasks/status/delete/${this.state.deleteStatus}`, {\n        method: 'POST'\n      }).then(r => r.json()).then(res => {\n        this.setState({\n          allStatus: res\n        });\n      });\n      this.setState({\n        deletestatusshow: false\n      });\n    });\n\n    _defineProperty(this, \"handleUserSelectChange\", e => {\n      const {\n        value\n      } = e.target;\n      var valuearray = value.split(\",\");\n      console.log(\"valuearray==>\", valuearray);\n      var assignedto = valuearray[0];\n      var assignedtoid = parseInt(valuearray[1]);\n      this.setState({\n        assignedto: assignedto,\n        assignedtoid: assignedtoid\n      }, () => console.log(this.state));\n    });\n\n    _defineProperty(this, \"handleEditUserSelectChange\", e => {\n      const {\n        value\n      } = e.target;\n      var valuearray = value.split(\",\");\n      console.log(\"valuearray==>\", valuearray);\n      var assignedto = valuearray[0];\n      var assignedtoid = parseInt(valuearray[1]);\n      const tempobj = this.state.task;\n      tempobj[\"assignedtoid\"] = assignedtoid;\n      this.setState({\n        task: tempobj\n      }, () => console.log(this.state.task));\n    });\n\n    _defineProperty(this, \"getDate\", datedata => {\n      if (datedata != null) {\n        var date = new Date(datedata);\n        var year = date.getFullYear().toString();\n        var month = (date.getMonth() + 1).toString();\n        var day = date.getDate().toString();\n        day.length == 1 && (day = '0' + day);\n        month.length == 1 && (month = '0' + month);\n        var yyyymmdd = year + '-' + month + '-' + day;\n        return yyyymmdd;\n      } else {\n        return null;\n      }\n    });\n\n    _defineProperty(this, \"handleEditTask\", (task, statusname, statussequence) => {\n      console.log(\"task\", task);\n      this.setState({\n        edittaskshow: true,\n        task: task,\n        selectedstatusname: statusname,\n        selectedstatussequence: statussequence\n      });\n    });\n\n    _defineProperty(this, \"handleEditTaskSubmit\", e => {\n      e.preventDefault();\n      console.log(\"submit called\");\n      fetch('/api/tasks/edit', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(this.state.task)\n      }).then(response => response.json()).then(data => {\n        this.setState({\n          allStatus: data\n        });\n      });\n      this.setState({\n        edittaskshow: false\n      });\n    });\n\n    _defineProperty(this, \"handleChildState\", ranges => {\n      console.log(\"ranges\", ranges);\n      this.setState({\n        ranges: ranges\n      });\n    });\n\n    _defineProperty(this, \"getStatusDatafromDatePicker\", () => {\n      fetch('/api/status/tasks/between', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(this.state.ranges)\n      }).then(response => response.json()).then(data => {\n        this.setState({\n          allStatus: data\n        });\n      });\n      this.setState({\n        datepickershow: false\n      });\n      this.setState({\n        showallstatusbutton: true\n      });\n    });\n\n    _defineProperty(this, \"showAllStatus\", () => {\n      fetch(`/api/status/tasks/all`).then(response => response.json()).then(data => {\n        this.setState({\n          allStatus: data\n        });\n      });\n      this.setState({\n        showallstatusbutton: false\n      });\n    });\n\n    this.state = {\n      title: '',\n      comments: null,\n      taskstatus: '',\n      taskdeadline: null,\n      taskassigndate: '',\n      selectedstatusid: '',\n      selectedstatusname: '',\n      selectedstatussequence: '',\n      assignedto: null,\n      assignedtoid: null,\n      data: null,\n      show: false,\n      task: {},\n      tasks: [],\n      datepickershow: false,\n      taskByStatusId: [],\n      userslist: [],\n      statusshow: false,\n      edittaskshow: false,\n      deletestatusshow: false,\n      addStatus: {\n        statusname: \"\",\n        statussequence: \"\"\n      },\n      showallstatusbutton: false,\n      deleteStatus: null,\n      allStatus: [],\n      ranges: {\n        startDate: new Date(),\n        endDate: addDays(new Date(), -7),\n        key: 'selection'\n      }\n    };\n  }\n\n  componentDidMount() {\n    fetch(`/api/users`).then(response => response.json()).then(data => {\n      this.setState({\n        userslist: data\n      });\n    }); // fetch(`/api/tasks`)\n    //     .then((response) => response.json())\n    //     .then(data => {\n    //         this.setState({ tasks: data });\n    //     });\n\n    fetch(`/api/status/tasks/all`).then(response => response.json()).then(data => {\n      this.setState({\n        allStatus: data\n      });\n    });\n  }\n\n  render() {\n    const handleClose = () => this.setState({\n      show: false\n    });\n\n    const handleEditTaskClose = () => this.setState({\n      edittaskshow: false\n    });\n\n    const handleAddStatusClose = () => this.setState({\n      statusshow: false\n    });\n\n    const handleDeleteStatusClose = () => this.setState({\n      deletestatusshow: false\n    });\n\n    console.log(\"allStatus ===>\", this.state.allStatus);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'right'\n        },\n        children: [this.state.showtimelinebutton ? /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"warning\",\n          onClick: this.showAllStatus,\n          style: {\n            marginTop: '15px',\n            marginBottom: '15px',\n            marginRight: '20px'\n          },\n          children: \"My Timeline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 55\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"warning\",\n          onClick: this.showAllStatus,\n          style: {\n            marginTop: '15px',\n            marginBottom: '15px',\n            marginRight: '20px'\n          },\n          children: \"Assign Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 208\n        }, this), this.state.showallstatusbutton ? /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"warning\",\n          onClick: this.showAllStatus,\n          style: {\n            marginTop: '15px',\n            marginBottom: '15px',\n            marginRight: '20px'\n          },\n          children: \"Show All Status \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 56\n        }, this) : \"\", this.state.datepickershow ? /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"info\",\n          onClick: () => {\n            this.setState({\n              datepickershow: false\n            });\n          },\n          style: {\n            marginTop: '15px',\n            marginBottom: '15px',\n            marginRight: '20px'\n          },\n          children: \"Show Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 51\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"info\",\n          onClick: () => {\n            this.setState({\n              datepickershow: true\n            });\n          },\n          style: {\n            marginTop: '15px',\n            marginBottom: '15px',\n            marginRight: '20px'\n          },\n          children: \"Tasks Timeline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 232\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          onClick: () => {\n            this.setState({\n              statusshow: true\n            });\n          },\n          style: {\n            marginTop: '15px',\n            marginBottom: '15px',\n            marginRight: '20px'\n          },\n          children: \" Add Status Type \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }, this), this.state.allStatus.length > 0 ? /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: () => {\n            this.setState({\n              deletestatusshow: true\n            });\n          },\n          style: {\n            marginLeft: '10px',\n            marginTop: '15px',\n            marginBottom: '15px',\n            marginRight: '20px'\n          },\n          children: \" Delete Status Type \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 57\n        }, this) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this), this.state.datepickershow == false ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mx-3\",\n        children: this.state.allStatus.map(status => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-3 \",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [status.statusname, \" (\", status.taskcount, \") \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 70\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              style: {\n                backgroundColor: '#b3b3b3',\n                color: '#e6e6e6'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  marginLeft: '-24px',\n                  marginRight: '-24px',\n                  marginTop: '-24px',\n                  borderRadius: '10px'\n                },\n                onClick: () => {\n                  this.setState({\n                    show: true,\n                    selectedstatusid: status.id,\n                    selectedstatusname: status.statusname,\n                    selectedstatussequence: status.statussequence\n                  });\n                },\n                children: \" Add Task \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 37\n              }, this), status.alltasks.map(task => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-info card\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      textAlign: 'right',\n                      position: 'absolute',\n                      right: '10px',\n                      top: '8px'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"transparent\",\n                      onClick: () => this.handleDeleteTask(task.id),\n                      children: \"X\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 266,\n                      columnNumber: 134\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      textAlign: 'right',\n                      position: 'absolute',\n                      right: '40px',\n                      top: '7px'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"transparent\",\n                      onClick: () => this.handleEditTask(task, status.statusname, status.statussequence),\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: \"/pencil.svg\",\n                        alt: \"editicon\",\n                        height: \"14px\",\n                        weight: \"14px\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 267,\n                        columnNumber: 248\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 267,\n                      columnNumber: 134\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                    style: {\n                      listStyle: 'none',\n                      padding: '0px'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                      children: [\"Id:\", task.id, \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 269,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: [\"Title:\", task.title]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 270,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: [\"Comments: \", task.comments]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 271,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: [\"Assigned To: \", task.firstname, \" \", task.lastname]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 272,\n                      columnNumber: 53\n                    }, this), task.taskassigndate ? /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: [\"Assigned Date: \", this.getDate(task.taskassigndate), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 273,\n                      columnNumber: 77\n                    }, this) : \"\", task.taskdeadline ? /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: [\"Task Deadline: \", this.getDate(task.taskdeadline), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 274,\n                      columnNumber: 75\n                    }, this) : '']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 45\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 56\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n          ranges: this.state.ranges,\n          handleChildState: this.handleChildState.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 25\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '20px',\n            textAlign: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"warning\",\n            size: \"xl\",\n            onClick: this.getStatusDatafromDatePicker,\n            children: \" Show Tasks From Selected Dates\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 119\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Modal, {\n          show: this.state.deletestatusshow,\n          onHide: handleDeleteStatusClose,\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            closeButton: true,\n            children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n              children: \"Delete Status Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: e => this.handleDeleteStatus(e),\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-12\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Status :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"select\",\n                  onChange: e => this.handleChange(e),\n                  name: \"deleteStatus\",\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"---Select Status---\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 41\n                  }, this), this.state.allStatus.map(status => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: status.id,\n                    children: [\" \", status.statusname, \" , Sequence : \", status.statussequence, \" \"]\n                  }, status.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 302,\n                    columnNumber: 45\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"info\",\n                  className: \"submit-button\",\n                  type: \"submit\",\n                  children: \"Delete Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"danger\",\n                  onClick: handleDeleteStatusClose,\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          show: this.state.statusshow,\n          onHide: handleAddStatusClose,\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            closeButton: true,\n            children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n              children: \"Add Status Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: e => this.handleAddStatus(e),\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-12\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Status Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"input\",\n                  name: \"statusname\",\n                  onChange: this.handleStatusChange,\n                  placeholder: \"Enter Status Name\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-12\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Status Sequence\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"number\",\n                  min: \"1\",\n                  name: \"statussequence\",\n                  onChange: this.handleStatusChange,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"success\",\n                  className: \"submit-button\",\n                  type: \"submit\",\n                  children: \"Add Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"danger\",\n                  onClick: handleAddStatusClose,\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          show: this.state.show,\n          onHide: handleClose,\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            closeButton: true,\n            children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n              children: \"Add Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: this.handleAddTask,\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-12\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"input\",\n                  name: \"title\",\n                  onChange: this.handleChange,\n                  placeholder: \"Enter Task Title\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-12\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Comments\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"input\",\n                  name: \"comments\",\n                  onChange: this.handleChange,\n                  placeholder: \"Enter Comments\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-12\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Task Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"select\",\n                  name: \"selectedstatusid\",\n                  onChange: this.handleChange,\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: this.state.selectedstatusid,\n                    children: [this.state.selectedstatusname, \" , Sequence : \", this.state.selectedstatussequence, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 365,\n                    columnNumber: 41\n                  }, this), this.state.allStatus.map(status => {\n                    if (status.id != this.state.selectedstatusid) {\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: status.id,\n                        children: [\" \", status.statusname, \" , Sequence : \", status.statussequence, \" \"]\n                      }, status.id, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 368,\n                        columnNumber: 57\n                      }, this);\n                    }\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-12\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Assigned To :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"select\",\n                  name: \"assignedto\",\n                  onChange: this.handleUserSelectChange,\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"---Select User---\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 376,\n                    columnNumber: 41\n                  }, this), this.state.userslist.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: [[`${user.firstname} ${user.lastname}`], [user.id]],\n                    children: [user.firstname, \" \", user.lastname, \" Id: \", user.id]\n                  }, user.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 378,\n                    columnNumber: 45\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-12\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Task Assign Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"date\",\n                  min: \"2020-01-01\",\n                  max: \"2025-12-31\",\n                  name: \"taskassigndate\",\n                  onChange: this.handleChange,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-12\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Task Deadline\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"date\",\n                  min: \"2020-01-01\",\n                  max: \"2025-12-31\",\n                  name: \"taskdeadline\",\n                  onChange: this.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"success\",\n                  className: \"submit-button\",\n                  type: \"submit\",\n                  children: \"Add Task\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"danger\",\n                  onClick: handleClose,\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          show: this.state.edittaskshow,\n          onHide: handleEditTaskClose,\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            closeButton: true,\n            children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n              children: [\"Edit Task (Id: \", this.state.task.id, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: this.handleEditTaskSubmit,\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-12\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"input\",\n                  name: \"title\",\n                  defaultValue: this.state.task.title,\n                  onChange: this.handleEditTaskChange,\n                  placeholder: \"Enter Task Title\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 411,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-12\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Comments\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 414,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"input\",\n                  name: \"comments\",\n                  defaultValue: this.state.task.comments,\n                  onChange: this.handleEditTaskChange,\n                  placeholder: \"Enter Comments\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 415,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-12\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Task Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 419,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"select\",\n                  name: \"statusid\",\n                  defaultValue: this.state.task.statusid,\n                  onChange: this.handleEditTaskChange,\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: this.state.task.statusid,\n                    children: [this.state.selectedstatusname, \" , Sequence : \", this.state.selectedstatussequence, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 422,\n                    columnNumber: 41\n                  }, this), this.state.allStatus.map(status => {\n                    if (status.id != this.state.task.statusid) {\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: status.id,\n                        children: [\" \", status.statusname, \" , Sequence : \", status.statussequence, \" \"]\n                      }, status.id, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 425,\n                        columnNumber: 57\n                      }, this);\n                    }\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-12\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Assigned To :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 431,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"select\",\n                  name: \"assignedto\",\n                  defaultValue: [[`${this.state.task.firstname} ${this.state.task.lastname}`], [this.state.task.assignedtoid]],\n                  onChange: this.handleEditUserSelectChange,\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"---Select User---\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 433,\n                    columnNumber: 41\n                  }, this), this.state.userslist.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: [[`${user.firstname} ${user.lastname}`], [user.id]],\n                    children: [user.firstname, \" \", user.lastname, \" Id: \", user.id]\n                  }, user.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 435,\n                    columnNumber: 45\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 432,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-12\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Task Assign Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"date\",\n                  min: \"2020-01-01\",\n                  max: \"2025-12-31\",\n                  name: \"taskassigndate\",\n                  defaultValue: this.getDate(this.state.task.taskassigndate),\n                  onChange: this.handleEditTaskChange,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"col-md-12\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Task Deadline\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 444,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"date\",\n                  min: \"2020-01-01\",\n                  max: \"2025-12-31\",\n                  name: \"taskdeadline\",\n                  defaultValue: this.getDate(this.state.task.taskdeadline),\n                  onChange: this.handleEditTaskChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 445,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"success\",\n                  className: \"submit-button\",\n                  type: \"submit\",\n                  children: \"Add Task\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 448,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"danger\",\n                  onClick: handleEditTaskClose,\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 451,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\nexport default UserTasks;","map":{"version":3,"sources":["/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/components/tasks.component.js"],"names":["React","Button","Form","Modal","DatePicker","addDays","MyTimeLine","UserTasks","Component","constructor","props","e","name","value","target","setState","console","log","state","tempobj","addStatus","task","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","data","allStatus","show","r","res","statusshow","deleteStatus","deletestatusshow","valuearray","split","assignedto","assignedtoid","parseInt","datedata","date","Date","year","getFullYear","toString","month","getMonth","day","getDate","length","yyyymmdd","statusname","statussequence","edittaskshow","selectedstatusname","selectedstatussequence","ranges","datepickershow","showallstatusbutton","title","comments","taskstatus","taskdeadline","taskassigndate","selectedstatusid","tasks","taskByStatusId","userslist","startDate","endDate","key","componentDidMount","render","handleClose","handleEditTaskClose","handleAddStatusClose","handleDeleteStatusClose","textAlign","showtimelinebutton","showAllStatus","marginTop","marginBottom","marginRight","marginLeft","map","status","taskcount","backgroundColor","color","borderRadius","id","alltasks","position","right","top","handleDeleteTask","handleEditTask","listStyle","padding","firstname","lastname","handleChildState","bind","getStatusDatafromDatePicker","handleDeleteStatus","handleChange","handleAddStatus","handleStatusChange","handleAddTask","handleUserSelectChange","user","handleEditTaskSubmit","handleEditTaskChange","statusid","handleEditUserSelectChange"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Form, Modal } from 'react-bootstrap';\nimport DatePicker from './datepicker.component';\nimport { addDays } from 'date-fns';\nimport MyTimeLine from './mytimeline.component';\n\nclass UserTasks extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: '',\n            comments: null,\n            taskstatus: '',\n            taskdeadline: null,\n            taskassigndate: '',\n            selectedstatusid: '',\n            selectedstatusname: '',\n            selectedstatussequence: '',\n            assignedto: null,\n            assignedtoid: null,\n            data: null,\n            show: false,\n            task: {},\n            tasks: [],\n            datepickershow: false,\n            taskByStatusId: [],\n            userslist: [],\n            statusshow: false,\n            edittaskshow: false,\n            deletestatusshow: false,\n            addStatus: {\n                statusname: \"\",\n                statussequence: \"\"\n            },\n            showallstatusbutton: false,\n            deleteStatus: null,\n            allStatus: [],\n            \n            ranges: {\n                startDate: new Date(),\n                endDate: addDays(new Date(), -7),\n                key: 'selection'\n            }\n        }\n    }\n\n\n    componentDidMount() {\n        fetch(`/api/users`)\n            .then((response) => response.json())\n            .then(data => {\n                this.setState({ userslist: data });\n            });\n        // fetch(`/api/tasks`)\n        //     .then((response) => response.json())\n        //     .then(data => {\n        //         this.setState({ tasks: data });\n        //     });\n\n        fetch(`/api/status/tasks/all`)\n            .then((response) => response.json())\n            .then(data => {\n                this.setState({ allStatus: data });\n            });\n\n\n    }\n\n    handleChange = e => {\n        // e.preventDefault();\n        const { name, value } = e.target;\n        this.setState({ [name]: value }, () => console.log(this.state));\n    };\n\n    handleStatusChange = e => {\n        // e.preventDefault();\n        const { name, value } = e.target;\n        const tempobj = this.state.addStatus;\n        tempobj[name] = value\n        this.setState({ addStatus: tempobj }, () => console.log(this.state.addStatus));\n    };\n\n    handleEditTaskChange = e => {\n        // e.preventDefault();\n        const { name, value } = e.target;\n        const tempobj = this.state.task;\n        tempobj[name] = value\n        this.setState({ task: tempobj }, () => console.log(this.state.task));\n    };\n\n    handleAddTask = e => {\n        e.preventDefault()\n        console.log(\"create called\")\n        fetch('/api/tasks/create', {\n            method: 'POST',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify(this.state)\n        }).then((response) => response.json())\n            .then(data => {\n                this.setState({ allStatus: data });\n            });\n\n        this.setState({ show: false })\n    }\n\n    handleDeleteTask = e => {\n        fetch(`/api/tasks/delete/${e}`, { method: 'POST' })\n            .then((response) => response.json())\n            .then(data => {\n                this.setState({ allStatus: data });\n            });\n\n\n\n    }\n\n    handleAddStatus = e => {\n        e.preventDefault()\n        fetch('/api/tasks/status/create', {\n            method: 'POST',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify(this.state.addStatus)\n        }).then(r => r.json())\n            .then(res => {\n                this.setState({\n                    allStatus: res\n                })\n            })\n        this.setState({ statusshow: false }, console.log(\"this.state==>\", this.state))\n    }\n\n    handleDeleteStatus = e => {\n\n        e.preventDefault()\n        fetch(`/api/tasks/status/delete/${this.state.deleteStatus}`, {\n            method: 'POST'\n\n        })\n            .then(r => r.json())\n            .then(res => {\n                this.setState({\n                    allStatus: res\n                })\n            })\n        this.setState({ deletestatusshow: false });\n    }\n    handleUserSelectChange = (e) => {\n        const { value } = e.target;\n        var valuearray = value.split(\",\")\n        console.log(\"valuearray==>\", valuearray)\n        var assignedto = valuearray[0]\n        var assignedtoid = parseInt(valuearray[1])\n        this.setState({ assignedto: assignedto, assignedtoid: assignedtoid }, () => console.log(this.state));\n    }\n\n    // countTask = (id) => {\n    //     var count = 0;\n    //     var taskcount = this.state.tasks.filter(task => task.statusid == id)\n    //     count = taskcount.length;\n    //     return (\n    //         <div>({count})</div>\n    //     )\n    // }\n\n    handleEditUserSelectChange = (e) => {\n        const { value } = e.target;\n        var valuearray = value.split(\",\")\n        console.log(\"valuearray==>\", valuearray)\n        var assignedto = valuearray[0]\n        var assignedtoid = parseInt(valuearray[1])\n        const tempobj = this.state.task;\n        tempobj[\"assignedtoid\"] = assignedtoid\n        this.setState({ task: tempobj }, () => console.log(this.state.task));\n    }\n\n    getDate = (datedata) => {\n        if (datedata != null) {\n            var date = new Date(datedata);\n            var year = date.getFullYear().toString();\n            var month = (date.getMonth() + 1).toString();\n            var day = date.getDate().toString();\n            (day.length == 1) && (day = '0' + day);\n            (month.length == 1) && (month = '0' + month);\n            var yyyymmdd = year + '-' + month + '-' + day;\n            return yyyymmdd\n        } else {\n            return null\n        }\n    }\n\n    handleEditTask = (task, statusname, statussequence) => {\n        console.log(\"task\", task)\n        this.setState({ edittaskshow: true, task: task, selectedstatusname: statusname, selectedstatussequence: statussequence })\n\n    }\n\n    handleEditTaskSubmit = e => {\n        e.preventDefault()\n        console.log(\"submit called\")\n        fetch('/api/tasks/edit', {\n            method: 'POST',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify(this.state.task)\n        }).then((response) => response.json())\n            .then(data => {\n                this.setState({ allStatus: data });\n            });\n\n        this.setState({ edittaskshow: false })\n    }\n    handleChildState = (ranges) => {\n        console.log(\"ranges\", ranges)\n        this.setState({ ranges: ranges });\n    }\n\n    getStatusDatafromDatePicker = () => {\n        fetch('/api/status/tasks/between',\n            {\n                method: 'POST',\n                headers: { 'Content-type': 'application/json' },\n                body: JSON.stringify(this.state.ranges)\n            }).then((response) => response.json())\n            .then(data => {\n                this.setState({ allStatus: data });\n            });\n        this.setState({ datepickershow: false })\n        this.setState({ showallstatusbutton: true })\n    }\n    showAllStatus = () => {\n        fetch(`/api/status/tasks/all`)\n            .then((response) => response.json())\n            .then(data => {\n                this.setState({ allStatus: data });\n            });\n        this.setState({ showallstatusbutton: false })\n    }\n    render() {\n        const handleClose = () => this.setState({ show: false });\n        const handleEditTaskClose = () => this.setState({ edittaskshow: false });\n        const handleAddStatusClose = () => this.setState({ statusshow: false });\n        const handleDeleteStatusClose = () => this.setState({ deletestatusshow: false });\n        console.log(\"allStatus ===>\", this.state.allStatus)\n\n        return (\n            <div >\n                <div style={{ textAlign: 'right' }}>\n                    {this.state.showtimelinebutton ? (<Button variant=\"warning\" onClick={this.showAllStatus} style={{ marginTop: '15px', marginBottom: '15px', marginRight: '20px' }}>My Timeline</Button>) : (<Button variant=\"warning\" onClick={this.showAllStatus} style={{ marginTop: '15px', marginBottom: '15px', marginRight: '20px' }}>Assign Task</Button>)}\n                    {this.state.showallstatusbutton ? (<Button variant=\"warning\" onClick={this.showAllStatus} style={{ marginTop: '15px', marginBottom: '15px', marginRight: '20px' }}>Show All Status </Button>) : \"\"}\n                    {this.state.datepickershow ? (<Button variant=\"info\" onClick={() => { this.setState({ datepickershow: false }) }} style={{ marginTop: '15px', marginBottom: '15px', marginRight: '20px' }}>Show Tasks</Button>) : (<Button variant=\"info\" onClick={() => { this.setState({ datepickershow: true }) }} style={{ marginTop: '15px', marginBottom: '15px', marginRight: '20px' }}>Tasks Timeline</Button>)}\n                    <Button variant=\"success\" onClick={() => { this.setState({ statusshow: true }) }} style={{ marginTop: '15px', marginBottom: '15px', marginRight: '20px' }}> Add Status Type </Button>\n                    {this.state.allStatus.length > 0 ? (<Button variant=\"danger\" onClick={() => { this.setState({ deletestatusshow: true }) }} style={{ marginLeft: '10px', marginTop: '15px', marginBottom: '15px', marginRight: '20px' }}> Delete Status Type </Button>) : \"\"}\n                </div>\n\n                {this.state.datepickershow == false ? (<div className=\"row mx-3\">\n                    {this.state.allStatus.map((status) => {\n                        return (\n                            <div className=\"col-md-3 \" >\n                                <div style={{ textAlign: 'center' }}><h3>{status.statusname} ({status.taskcount}) </h3></div>\n                                <div className=\"card\" style={{ backgroundColor: '#b3b3b3', color: '#e6e6e6' }}>\n                                    <Button style={{ marginLeft: '-24px', marginRight: '-24px', marginTop: '-24px', borderRadius: '10px' }} onClick={() => { this.setState({ show: true, selectedstatusid: status.id, selectedstatusname: status.statusname, selectedstatussequence: status.statussequence }) }} > Add Task </Button>\n\n                                    {status.alltasks.map((task) => {\n\n                                        return (\n                                            <div className=\"bg-info card\">\n                                                <div style={{ textAlign: 'right', position: 'absolute', right: '10px', top: '8px' }}><Button variant=\"transparent\" onClick={() => this.handleDeleteTask(task.id)}>X</Button></div>\n                                                <div style={{ textAlign: 'right', position: 'absolute', right: '40px', top: '7px' }}><Button variant=\"transparent\" onClick={() => this.handleEditTask(task, status.statusname, status.statussequence)}><img src='/pencil.svg' alt='editicon' height=\"14px\" weight=\"14px\" /></Button></div>\n                                                <ul style={{ listStyle: 'none', padding: '0px' }}>\n                                                    <li>Id:{task.id} </li>\n                                                    <li>Title:{task.title}</li>\n                                                    <li>Comments: {task.comments}</li>\n                                                    <li>Assigned To: {task.firstname} {task.lastname}</li>\n                                                    {task.taskassigndate ? (<li>Assigned Date: {this.getDate(task.taskassigndate)} </li>) : \"\"}\n                                                    {task.taskdeadline ? (<li>Task Deadline: {this.getDate(task.taskdeadline)} </li>) : ''}\n                                                </ul>\n                                            </div>\n                                        )\n                                    })}\n                                </div>\n                            </div>)\n                    })}\n\n                </div>) : (\n                    <div>\n                        <DatePicker ranges={this.state.ranges} handleChildState={this.handleChildState.bind(this)} /> <div style={{ marginTop: '20px', textAlign: 'center' }}>\n                            <Button variant=\"warning\" size=\"xl\" onClick={this.getStatusDatafromDatePicker}> Show Tasks From Selected Dates</Button>\n                        </div>\n                    </div>\n                )}\n                <div>\n                    <Modal show={this.state.deletestatusshow} onHide={handleDeleteStatusClose}>\n                        <Modal.Header closeButton>\n                            <Modal.Title>Delete Status Type</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <Form onSubmit={(e) => this.handleDeleteStatus(e)}>\n                                <Form.Group className=\"col-md-12\">\n                                    <Form.Label>Status :</Form.Label>\n                                    <Form.Control as=\"select\" onChange={(e) => this.handleChange(e)} name=\"deleteStatus\" required>\n                                        <option value=\"\">---Select Status---</option>\n                                        {this.state.allStatus.map(status => (\n                                            <option key={status.id} value={status.id}> {status.statusname} , Sequence : {status.statussequence} </option>\n                                        ))}\n                                    </Form.Control>\n                                </Form.Group>\n                                <Modal.Footer>\n                                    <Button variant=\"info\" className=\"submit-button\" type=\"submit\">\n                                        Delete Status\n                                     </Button>\n                                    <Button variant=\"danger\" onClick={handleDeleteStatusClose}>\n                                        Cancel\n                                     </Button>\n                                </Modal.Footer>\n                            </Form>\n                        </Modal.Body>\n\n                    </Modal>\n\n                    <Modal show={this.state.statusshow} onHide={handleAddStatusClose}>\n                        <Modal.Header closeButton>\n                            <Modal.Title>Add Status Type</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <Form onSubmit={(e) => this.handleAddStatus(e)}>\n                                <Form.Group className=\"col-md-12\">\n                                    <Form.Label>Status Name</Form.Label>\n                                    <Form.Control type=\"input\" name=\"statusname\" onChange={this.handleStatusChange} placeholder=\"Enter Status Name\" required></Form.Control>\n                                </Form.Group>\n                                <Form.Group className=\"col-md-12\">\n                                    <Form.Label>Status Sequence</Form.Label>\n                                    <Form.Control type=\"number\" min=\"1\" name=\"statussequence\" onChange={this.handleStatusChange} required></Form.Control>\n                                </Form.Group>\n                                <Modal.Footer>\n                                    <Button variant=\"success\" className=\"submit-button\" type=\"submit\">\n                                        Add Status\n                                     </Button>\n                                    <Button variant=\"danger\" onClick={handleAddStatusClose}>\n                                        Cancel\n                                     </Button>\n                                </Modal.Footer>\n                            </Form>\n                        </Modal.Body>\n\n                    </Modal>\n\n                    <Modal show={this.state.show} onHide={handleClose}>\n                        <Modal.Header closeButton>\n                            <Modal.Title>Add Task</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <Form onSubmit={this.handleAddTask}>\n                                <Form.Group className=\"col-md-12\">\n                                    <Form.Label>Title</Form.Label>\n                                    <Form.Control type=\"input\" name=\"title\" onChange={this.handleChange} placeholder=\"Enter Task Title\" required ></Form.Control>\n                                </Form.Group>\n                                <Form.Group className=\"col-md-12\">\n                                    <Form.Label>Comments</Form.Label>\n                                    <Form.Control type=\"input\" name=\"comments\" onChange={this.handleChange} placeholder=\"Enter Comments\" ></Form.Control>\n                                </Form.Group>\n\n                                <Form.Group className=\"col-md-12\">\n                                    <Form.Label>Task Status</Form.Label>\n                                    <Form.Control as=\"select\" name=\"selectedstatusid\" onChange={this.handleChange} required>\n\n                                        <option value={this.state.selectedstatusid}>{this.state.selectedstatusname} , Sequence : {this.state.selectedstatussequence} </option>\n                                        {this.state.allStatus.map(status => {\n                                            if (status.id != this.state.selectedstatusid) {\n                                                return (<option key={status.id} value={status.id}> {status.statusname} , Sequence : {status.statussequence} </option>)\n                                            }\n                                        })}\n                                    </Form.Control>\n                                </Form.Group>\n                                <Form.Group className=\"col-md-12\">\n                                    <Form.Label>Assigned To :</Form.Label>\n                                    <Form.Control as=\"select\" name=\"assignedto\" onChange={this.handleUserSelectChange} required>\n                                        <option value=\"\">---Select User---</option>\n                                        {this.state.userslist.map(user => (\n                                            <option key={user.id} value={[[`${user.firstname} ${user.lastname}`], [user.id]]}>{user.firstname} {user.lastname} Id: {user.id}</option>\n                                        ))}\n                                    </Form.Control>\n                                </Form.Group>\n                                <Form.Group className=\"col-md-12\">\n                                    <Form.Label>Task Assign Date</Form.Label>\n                                    <Form.Control type=\"date\" min=\"2020-01-01\" max=\"2025-12-31\" name=\"taskassigndate\" onChange={this.handleChange} required ></Form.Control>\n                                </Form.Group>\n                                <Form.Group className=\"col-md-12\">\n                                    <Form.Label>Task Deadline</Form.Label>\n                                    <Form.Control type=\"date\" min=\"2020-01-01\" max=\"2025-12-31\" name=\"taskdeadline\" onChange={this.handleChange}></Form.Control>\n                                </Form.Group>\n                                <Modal.Footer>\n                                    <Button variant=\"success\" className=\"submit-button\" type=\"submit\">\n                                        Add Task\n                                     </Button>\n                                    <Button variant=\"danger\" onClick={handleClose}>\n                                        Cancel\n                                     </Button>\n                                </Modal.Footer>\n                            </Form>\n                        </Modal.Body>\n\n                    </Modal>\n\n                    <Modal show={this.state.edittaskshow} onHide={handleEditTaskClose}>\n                        <Modal.Header closeButton>\n                            <Modal.Title>Edit Task (Id: {this.state.task.id})</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <Form onSubmit={this.handleEditTaskSubmit}>\n                                <Form.Group className=\"col-md-12\">\n                                    <Form.Label>Title</Form.Label>\n                                    <Form.Control type=\"input\" name=\"title\" defaultValue={this.state.task.title} onChange={this.handleEditTaskChange} placeholder=\"Enter Task Title\" required ></Form.Control>\n                                </Form.Group>\n                                <Form.Group className=\"col-md-12\">\n                                    <Form.Label>Comments</Form.Label>\n                                    <Form.Control type=\"input\" name=\"comments\" defaultValue={this.state.task.comments} onChange={this.handleEditTaskChange} placeholder=\"Enter Comments\" ></Form.Control>\n                                </Form.Group>\n\n                                <Form.Group className=\"col-md-12\">\n                                    <Form.Label>Task Status</Form.Label>\n                                    <Form.Control as=\"select\" name=\"statusid\" defaultValue={this.state.task.statusid} onChange={this.handleEditTaskChange} required>\n\n                                        <option value={this.state.task.statusid}>{this.state.selectedstatusname} , Sequence : {this.state.selectedstatussequence} </option>\n                                        {this.state.allStatus.map(status => {\n                                            if (status.id != this.state.task.statusid) {\n                                                return (<option key={status.id} value={status.id}> {status.statusname} , Sequence : {status.statussequence} </option>)\n                                            }\n                                        })}\n                                    </Form.Control>\n                                </Form.Group>\n                                <Form.Group className=\"col-md-12\">\n                                    <Form.Label>Assigned To :</Form.Label>\n                                    <Form.Control as=\"select\" name=\"assignedto\" defaultValue={[[`${this.state.task.firstname} ${this.state.task.lastname}`], [this.state.task.assignedtoid]]} onChange={this.handleEditUserSelectChange} required>\n                                        <option value=\"\">---Select User---</option>\n                                        {this.state.userslist.map(user => (\n                                            <option key={user.id} value={[[`${user.firstname} ${user.lastname}`], [user.id]]}>{user.firstname} {user.lastname} Id: {user.id}</option>\n                                        ))}\n                                    </Form.Control>\n                                </Form.Group>\n                                <Form.Group className=\"col-md-12\">\n                                    <Form.Label>Task Assign Date</Form.Label>\n                                    <Form.Control type=\"date\" min=\"2020-01-01\" max=\"2025-12-31\" name=\"taskassigndate\" defaultValue={this.getDate(this.state.task.taskassigndate)} onChange={this.handleEditTaskChange} required ></Form.Control>\n                                </Form.Group>\n                                <Form.Group className=\"col-md-12\">\n                                    <Form.Label>Task Deadline</Form.Label>\n                                    <Form.Control type=\"date\" min=\"2020-01-01\" max=\"2025-12-31\" name=\"taskdeadline\" defaultValue={this.getDate(this.state.task.taskdeadline)} onChange={this.handleEditTaskChange}></Form.Control>\n                                </Form.Group>\n                                <Modal.Footer>\n                                    <Button variant=\"success\" className=\"submit-button\" type=\"submit\">\n                                        Add Task\n                                     </Button>\n                                    <Button variant=\"danger\" onClick={handleEditTaskClose}>\n                                        Cancel\n                                     </Button>\n                                </Modal.Footer>\n                            </Form>\n                        </Modal.Body>\n\n                    </Modal>\n\n                </div>\n            </div>\n        )\n    }\n\n};\n\nexport default UserTasks;"]},"metadata":{},"sourceType":"module"}