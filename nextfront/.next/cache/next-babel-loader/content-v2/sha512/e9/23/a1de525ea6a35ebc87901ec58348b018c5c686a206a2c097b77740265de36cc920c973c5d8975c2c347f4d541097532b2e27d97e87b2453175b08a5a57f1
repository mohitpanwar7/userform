{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport Link from 'next/link';\nimport { Form, Button, Modal } from 'react-bootstrap'; // import AddressComponents from './address.component';\n\nimport { FormInput } from './form-input.component';\nimport AddressBox from './addressbox.component';\nimport update from 'react-addons-update';\nimport styles from '../styles/personaldetails.module.css';\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\nconst mobilenumberRegex = RegExp(/^[0]?[6789]\\d{9}$/);\nconst dobRegex = RegExp(/^\\d{4}-\\d{1,2}-\\d{1,2}$/);\n\nconst formValid = (_ref) => {\n  let {\n    formErrors\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"formErrors\"]);\n\n  let valid = true;\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  });\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n  return valid;\n};\n\nvar addressboxcount = 0;\nconst addressArray = {\n  id: '',\n  address: '',\n  city: '',\n  country: '',\n  state: '',\n  stateid: '',\n  zipcode: '',\n  formErrors: {\n    address: '',\n    city: '',\n    country: '',\n    state: '',\n    zipcode: ''\n  }\n};\n\nclass PersonalDetailsFormComponents extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleSubmit\", async e => {\n      e.preventDefault();\n      console.log(\"this.state ==>\", this.state);\n      this.props.userauth();\n      const auth = true;\n      console.log(\"this.props.auth==>\", this.props.auth);\n\n      if (this.props.auth === true) {\n        // if (auth === true) {\n        if (formValid(this.state)) {\n          console.log(\"submitcalled\");\n          fetch('http://127.0.0.1:5000/users/create', {\n            method: 'POST',\n            headers: {\n              'Content-type': 'application/json'\n            },\n            body: JSON.stringify(this.state)\n          }).then(r => r.json()).then(res => {\n            if (res) {\n              console.log(\"response==>\", res); // this.setState({ show: true })\n\n              let data = new FormData();\n              data.append(\"file\", this.state.file[0]);\n              console.log(\"data==>\", this.state.file[0]);\n              fetch(`http://127.0.0.1:5000/users/upload/image/${res}`, {\n                method: 'POST',\n                headers: {},\n                body: data\n              }).then(r => r.json()).then(res => {\n                if (res) {\n                  this.setState({\n                    show: true\n                  });\n                  console.log(\"response==>\", res);\n                }\n              });\n            }\n          });\n        } else {\n          console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\n        }\n      } // console.log(\"userauth data ========>\",this.props.userauth)\n\n    });\n\n    _defineProperty(this, \"handleChange\", e => {\n      // e.preventDefault();\n      const {\n        name,\n        value\n      } = e.target;\n\n      let formErrors = _objectSpread({}, this.state.formErrors);\n\n      switch (name) {\n        case \"firstname\":\n          formErrors.firstname = value.length < 3 ? \"Minimum 3 characaters required!\" : \"\";\n          break;\n\n        case \"lastname\":\n          formErrors.lastname = value.length < 3 ? \"Minimum 3 characaters required!\" : \"\";\n          break;\n\n        case \"email\":\n          formErrors.email = emailRegex.test(value) ? \"\" : \"Please Enter a valid Email Id\";\n          break;\n\n        case \"mobilenumber\":\n          formErrors.mobilenumber = mobilenumberRegex.test(value) ? \"\" : \"Please Enter a Valid 10 Digit Mobile Number\";\n          break;\n\n        case \"dob\":\n          formErrors.dob = dobRegex.test(value) ? \"\" : \"Please Enter Valid Date Of Birth\";\n          break;\n\n        case \"maritalstatus\":\n          formErrors.maritalstatus = value === \"\" ? \"Please Select Marital Status!\" : \"\";\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        formErrors,\n        [name]: value\n      }, () => console.log(this.state));\n    });\n\n    _defineProperty(this, \"handleFileChange\", e => {\n      const {\n        name,\n        files\n      } = e.target;\n      this.setState({\n        file: files\n      });\n    });\n\n    _defineProperty(this, \"addaddressbox\", () => {\n      const val = this.state.addressBoxList;\n      addressboxcount += 1;\n      val.push(addressArray);\n      this.setState({\n        addressBoxList: val\n      });\n      this.setState({\n        rowlen: val.length\n      });\n      console.log(\"address box count\", addressboxcount);\n      console.log(\"address box array\", this.state.addressBoxList);\n    });\n\n    _defineProperty(this, \"removeaddressbox\", () => {\n      const val = this.state.addressBoxList;\n      val.splice(-1);\n      addressboxcount -= 1;\n      this.setState({\n        addressBoxList: val\n      });\n      this.setState({\n        rowlen: val.length\n      });\n      console.log(\"address box count\", addressboxcount);\n      console.log(\"address box array\", this.state.addressBoxList);\n    });\n\n    _defineProperty(this, \"handleAddressChange\", e => {\n      // e.preventDefault();\n      const {\n        name,\n        value\n      } = e.target;\n\n      let formErrors = _objectSpread({}, this.state.formErrors);\n\n      switch (name) {\n        case \"address\":\n          formErrors.address = value.length < 6 ? \"Please Enter Valid Address!\" : \"\";\n          break;\n\n        case \"city\":\n          formErrors.city = value.length < 4 ? \"Please Enter Valid City!\" : \"\";\n          break;\n\n        case \"zipcode\":\n          formErrors.zipcode = value.length < 4 || value.length > 9 || /[0-9]/.test(value) === false ? \"Please Enter Valid ZipCode!\" : \"\";\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        formErrors,\n        [name]: value\n      }, () => console.log(this.state));\n    });\n\n    _defineProperty(this, \"handleChildState\", (state, item) => {\n      console.log(\"address state  =>\", state);\n      console.log(\"address item  =>\", item);\n      this.setState(update(this.state, {\n        addressBoxList: {\n          [item]: {\n            $set: state\n          }\n        }\n      }));\n    });\n\n    this.state = {\n      file: null,\n      firstname: '',\n      lastname: '',\n      mobilenumber: '',\n      email: '',\n      dob: '',\n      gender: '',\n      maritalstatus: '',\n      termsandconditions: false,\n      show: false,\n      formErrors: {\n        firstname: '',\n        lastname: '',\n        mobilenumber: '',\n        email: '',\n        dob: '',\n        gender: '',\n        maritalstatus: '',\n        termsandconditions: ''\n      },\n      addressBoxList: [{\n        id: '',\n        address: '',\n        city: '',\n        country: '',\n        state: '',\n        stateid: '',\n        zipcode: '',\n        formErrors: {\n          address: '',\n          city: '',\n          country: '',\n          state: '',\n          zipcode: ''\n        }\n      }]\n    };\n  }\n\n  render() {\n    const {\n      formErrors\n    } = this.state;\n    const statedata = this.state;\n\n    const handleClose = () => this.setState({\n      show: false\n    });\n\n    return /*#__PURE__*/_jsxs(\"div\", {\n      children: [/*#__PURE__*/_jsx(Form, {\n        onSubmit: this.handleSubmit,\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: ('styles.formdiv', 'row'),\n          children: [/*#__PURE__*/_jsx(FormInput, {\n            className: \"col-md-4\",\n            label: \"User Image\",\n            name: \"file\",\n            type: \"file\",\n            placeholder: \"Select User image\",\n            onChange: this.handleFileChange\n          }), /*#__PURE__*/_jsx(FormInput, {\n            className: \"col-md-4\",\n            inputClassName: formErrors.firstname.length > 0 ? `${styles.error}` : \"\",\n            label: \"First Name\",\n            name: \"firstname\",\n            type: \"text\",\n            placeholder: \"Enter First Name\",\n            errorMessage: formErrors.firstname.length > 0 && /*#__PURE__*/_jsx(\"span\", {\n              className: styles.errormessage,\n              children: formErrors.firstname\n            }),\n            onChange: this.handleChange\n          }), /*#__PURE__*/_jsx(FormInput, {\n            className: \"col-md-4\",\n            inputClassName: formErrors.lastname.length > 0 ? `${styles.error}` : \"\",\n            errorMessage: formErrors.lastname.length > 0 && /*#__PURE__*/_jsx(\"span\", {\n              className: styles.errormessage,\n              children: formErrors.lastname\n            }),\n            onChange: this.handleChange,\n            label: \"Last Name\",\n            name: \"lastname\",\n            type: \"text\",\n            placeholder: \"Enter Last Name\"\n          }), /*#__PURE__*/_jsx(FormInput, {\n            className: \"col-md-4\",\n            inputClassName: formErrors.mobilenumber.length > 0 ? `${styles.error}` : \"\",\n            errorMessage: formErrors.mobilenumber.length > 0 && /*#__PURE__*/_jsx(\"span\", {\n              className: styles.errormessage,\n              children: formErrors.mobilenumber\n            }),\n            onChange: this.handleChange,\n            label: \"Mobile Number\",\n            name: \"mobilenumber\",\n            type: \"tel\",\n            placeholder: \"Enter Mobile Number\"\n          }), /*#__PURE__*/_jsx(FormInput, {\n            className: \"col-md-4\",\n            inputClassName: formErrors.email.length > 0 ? `${styles.error}` : \"\",\n            errorMessage: formErrors.email.length > 0 && /*#__PURE__*/_jsx(\"span\", {\n              className: styles.errormessage,\n              children: formErrors.email\n            }),\n            label: \"Email\",\n            name: \"email\",\n            type: \"email\",\n            placeholder: \"Enter Email Id\",\n            onChange: this.handleChange\n          }), /*#__PURE__*/_jsx(FormInput, {\n            className: \"col-md-2\",\n            label: \"Date of Birth\",\n            name: \"dob\",\n            type: \"date\",\n            placeholder: \"Date of Birth\",\n            inputClassName: formErrors.dob.length > 0 ? `${styles.error}` : \"\",\n            onChange: this.handleChange,\n            errorMessage: formErrors.dob.length > 0 && /*#__PURE__*/_jsx(\"span\", {\n              className: styles.errormessage,\n              children: formErrors.dob\n            })\n          }), /*#__PURE__*/_jsxs(Form.Group, {\n            className: \"col-md-2\",\n            children: [/*#__PURE__*/_jsx(Form.Label, {\n              children: \"Gender\"\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              children: [/*#__PURE__*/_jsx(Form.Check, {\n                inline: \"true\",\n                className: \"styles.box\",\n                type: \"radio\",\n                id: \"male\",\n                name: \"gender\",\n                value: \"male\",\n                onChange: this.handleChange,\n                required: true\n              }), /*#__PURE__*/_jsx(Form.Label, {\n                inline: \"true\",\n                htmlFor: \"male\",\n                className: styles.label1,\n                children: \"Male\"\n              }), /*#__PURE__*/_jsx(Form.Check, {\n                inline: \"true\",\n                id: \"female\",\n                type: \"radio\",\n                name: \"gender\",\n                value: \"female\",\n                onChange: this.handleChange,\n                required: true\n              }), /*#__PURE__*/_jsx(Form.Label, {\n                inline: \"true\",\n                htmlFor: \"female\",\n                className: styles.label2,\n                children: \"Female\"\n              })]\n            })]\n          }), /*#__PURE__*/_jsxs(Form.Group, {\n            className: \"col-md-4\",\n            children: [/*#__PURE__*/_jsx(Form.Label, {\n              children: \"Marital Status\"\n            }), /*#__PURE__*/_jsxs(Form.Control, {\n              name: \"maritalstatus\",\n              as: \"select\",\n              className: formErrors.maritalstatus.length > 0 ? `${styles.error}` : \"\",\n              onChange: this.handleChange,\n              required: true,\n              children: [/*#__PURE__*/_jsx(\"option\", {\n                value: \"\",\n                children: \"---Select Marital Status---\"\n              }), /*#__PURE__*/_jsx(\"option\", {\n                value: \"single\",\n                children: \"Single\"\n              }), /*#__PURE__*/_jsx(\"option\", {\n                value: \"married\",\n                children: \"Married\"\n              })]\n            }), formErrors.maritalstatus.length > 0 && /*#__PURE__*/_jsx(\"span\", {\n              className: styles.errormessage,\n              children: formErrors.maritalstatus\n            })]\n          }), this.state.addressBoxList.map((key, item) => /*#__PURE__*/_jsx(AddressBox, {\n            item: item,\n            handleChildState: this.handleChildState.bind(this),\n            addaddressbox: this.addaddressbox,\n            statedata: statedata,\n            handleAddressChange: () => this.handleAddressChange(item),\n            removeaddressbox: this.removeaddressbox,\n            rowlength: this.state.rowlen\n          }, key)), /*#__PURE__*/_jsxs(Form.Group, {\n            children: [/*#__PURE__*/_jsx(Form.Check, {\n              type: \"checkbox\",\n              id: \"termsandconditions\",\n              inline: \"true\",\n              required: true\n            }), /*#__PURE__*/_jsx(Form.Label, {\n              htmlFor: \"termsandconditions\",\n              inline: \"true\",\n              name: \"termsandconditions\",\n              children: \"Agree to terms & conditions\"\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: styles.buttondiv,\n            children: [/*#__PURE__*/_jsx(Button, {\n              className: \"submit-button\",\n              type: \"submit\",\n              children: \"Submit Form\"\n            }), /*#__PURE__*/_jsx(Link, {\n              href: \"/search\",\n              children: /*#__PURE__*/_jsx(Button, {\n                className: \"submit-button\",\n                variant: \"info\",\n                style: {\n                  marginLeft: \"15px\"\n                },\n                children: \"Search Users By State\"\n              })\n            })]\n          })]\n        })\n      }), /*#__PURE__*/_jsxs(Modal, {\n        show: this.state.show,\n        onHide: handleClose,\n        children: [/*#__PURE__*/_jsx(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsx(Modal.Title, {\n            children: \"Report\"\n          })\n        }), /*#__PURE__*/_jsxs(Modal.Body, {\n          children: [\"New User \", this.state.firstname, \" \", this.state.lastname, \" is Created.\"]\n        }), /*#__PURE__*/_jsx(Modal.Footer, {\n          children: /*#__PURE__*/_jsx(Button, {\n            variant: \"primary\",\n            onClick: handleClose,\n            children: \"Close\"\n          })\n        })]\n      })]\n    });\n  }\n\n}\n\nexport default PersonalDetailsFormComponents;","map":null,"metadata":{},"sourceType":"module"}