{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/components/selectstate.component.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport { Form } from 'react-bootstrap';\nimport styles from '../styles/selectstate.module.css';\n\nvar CountryStateSelection = /*#__PURE__*/function (_React$Component) {\n  _inherits(CountryStateSelection, _React$Component);\n\n  var _super = _createSuper(CountryStateSelection);\n\n  function CountryStateSelection(props) {\n    var _this;\n\n    _classCallCheck(this, CountryStateSelection);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"statefetch\", function (countryid) {\n      fetch(\"/api/country/\".concat(countryid)).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this.setState({\n          states: data\n        });\n\n        console.log(\"states :: \", data);\n      });\n    });\n\n    _this.state = {\n      states: []\n    };\n    return _this;\n  }\n\n  _createClass(CountryStateSelection, [{\n    key: \"statedown\",\n    value: function statedown(value) {\n      this.props.countryOptionHandler(value);\n      console.log(\"statedown --> \", value); // this.statefetch(value);\n\n      if (value === \"India\") {\n        this.statefetch(1);\n        console.log(\"this.state\", this.state.states);\n      } else if (value === \"Usa\") {\n        this.statefetch(2);\n      }\n    } //         try {\n    //             const response = await fetch(`http://localhost:5000/country/${countryid}`, {\n    //                 method: 'GET',\n    //             });\n    //             this.statelist = await response.json();\n    //             return statelist\n    //         } catch (error) {\n    //             console.error(error);\n    //         }\n    // statedown = async (props) => {\n    //     \n    //     const { country, state } = this.props.statedata;\n    //     let options = null;\n    //     if (country === \"India\") {\n    //         // type = India;\n    //         this.statefetch(1);\n    //         console.log(\"this.state\",this.state.states)\n    //     } else if (country === \"Usa\") {\n    //         this.statefetch(2);\n    //     } else if (country === \"Other Country\") {\n    //     }\n    //     if (country) {\n    //         console.log(\"done\")\n    //         options = await this.state.states.map((key) => <option key={key}>{key}</option>);\n    //         this.setState({ options: options })\n    //         console.log(\"options state\", options)\n    //     }\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\".concat(styles.statediv, \" row mx-0\"),\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"col-md-6\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            onChange: function onChange(e) {\n              return _this2.statedown(e.target.value);\n            },\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"---Select Country---\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"India\",\n              children: \"India\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Usa\",\n              children: \"Usa\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"col-md-6\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"State\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            onChange: this.props.stateOptionHandler,\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"---Select State---\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 33\n            }, this), this.state.states.map(function (state) {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: [[state.statename], [state.id]],\n                children: state.statename\n              }, state.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 37\n              }, _this2);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this);\n    }\n  }]);\n\n  return CountryStateSelection;\n}(React.Component);\n\n;\nexport default CountryStateSelection;","map":{"version":3,"sources":["/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/components/selectstate.component.js"],"names":["React","Form","styles","CountryStateSelection","props","countryid","fetch","then","response","json","data","setState","states","console","log","state","value","countryOptionHandler","statefetch","statediv","e","statedown","target","stateOptionHandler","map","statename","id","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Form } from 'react-bootstrap';\nimport styles from '../styles/selectstate.module.css';\n\nclass CountryStateSelection extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            states: [],\n        }\n    };\n\n    // componentDidMount() {\n    //     fetch(`http://localhost:5000/country/1`)\n    //         .then((response) => response.json())\n    //         .then(data => {\n    //             this.setState({ states: data });\n    //         });\n    // }\n\n    statefetch = (countryid) => {\n        fetch(`/api/country/${countryid}`)\n            .then((response) => response.json())\n            .then(data => {\n                this.setState({ states: data });\n                console.log(\"states :: \", data)\n            });\n\n    }\n\n    statedown(value) {\n        this.props.countryOptionHandler(value)\n        console.log(\"statedown --> \", value)\n\n        // this.statefetch(value);\n\n        if (value === \"India\") {\n\n            this.statefetch(1);\n            console.log(\"this.state\", this.state.states)\n        } else if (value === \"Usa\") {\n            this.statefetch(2);\n        }\n    }\n    //         try {\n    //             const response = await fetch(`http://localhost:5000/country/${countryid}`, {\n    //                 method: 'GET',\n\n    //             });\n    //             this.statelist = await response.json();\n    //             return statelist\n\n    //         } catch (error) {\n    //             console.error(error);\n    //         }\n\n\n\n    // statedown = async (props) => {\n    //     \n\n    //     const { country, state } = this.props.statedata;\n\n    //     let options = null;\n\n    //     if (country === \"India\") {\n    //         // type = India;\n\n    //         this.statefetch(1);\n    //         console.log(\"this.state\",this.state.states)\n\n\n\n    //     } else if (country === \"Usa\") {\n    //         this.statefetch(2);\n\n    //     } else if (country === \"Other Country\") {\n\n    //     }\n\n    //     if (country) {\n    //         console.log(\"done\")\n    //         options = await this.state.states.map((key) => <option key={key}>{key}</option>);\n\n    //         this.setState({ options: options })\n    //         console.log(\"options state\", options)\n    //     }\n    // }\n\n\n\n    render() {\n        return (\n            \n\n\n                    <div className={`${styles.statediv} row mx-0`}  >\n                        <Form.Group className=\"col-md-6\">\n                            <Form.Label>Country</Form.Label>\n                            <Form.Control as=\"select\" onChange={(e) => this.statedown(e.target.value)} required>\n                                <option value=''>---Select Country---</option>\n                                <option value=\"India\">India</option>\n                                <option value=\"Usa\">Usa</option>\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group className=\"col-md-6\">\n                            <Form.Label>State</Form.Label>\n                            <Form.Control as=\"select\" onChange={this.props.stateOptionHandler} required>\n                                <option value=\"\">---Select State---</option>\n                                {this.state.states.map(state => (\n                                    <option key={state.id} value={[[state.statename], [state.id]]}>{state.statename}</option>\n                                ))}\n                            </Form.Control>\n                        </Form.Group>\n                    </div>\n             \n        )\n    }\n};\n\nexport default CountryStateSelection;"]},"metadata":{},"sourceType":"module"}