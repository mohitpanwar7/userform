{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/components/userbystate.component.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { DropdownButton, Dropdown, Button, Form } from \"react-bootstrap\";\nimport Link from 'next/link'; // import './userbystate.styles.css';\n\nimport { withRouter } from 'next/router'; // const router = withRouter();\n\nexport class StateSelect extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"statefetch\", countryid => {\n      fetch(`http://localhost:5000/country/${countryid}`).then(response => response.json()).then(data => {\n        this.setState({\n          states: data\n        });\n      });\n    });\n\n    this.state = {\n      states: [],\n      users: null,\n      selectedstatename: null,\n      selectedstateid: null\n    };\n  }\n\n  statedown(value) {\n    console.log(\"statedown --> \", value);\n\n    if (value === \"India\") {\n      this.statefetch(1);\n      console.log(\"this.state\", this.state.states);\n    } else if (value === \"Usa\") {\n      this.statefetch(2);\n      console.log(\"this.state\", this.state.states);\n    } else if (value == \"\") {\n      this.setState({\n        states: null\n      });\n    }\n  }\n\n  statedropdown(value) {\n    if (value != \"\") {\n      const statedata = value.split(\",\");\n      const statename = statedata[0];\n      const stateid = statedata[1];\n      fetch(`http://localhost:5000/users/state/${stateid}`).then(response => response.json()).then(data => {\n        this.setState({\n          users: data\n        });\n      });\n      this.setState({\n        selectedstatename: statename\n      });\n      this.setState({\n        selectedstateid: stateid\n      });\n    } else {\n      this.setState({\n        selectedstatename: null\n      });\n      this.setState({\n        selectedstateid: null\n      });\n    }\n  } // handleClick = (e) => {\n  //     const router = useRouter()\n  //     e.preventDefault()\n  //     router.push()\n  // }\n\n\n  render() {\n    // const ButtonLink = React.forwardRef(({ onClick, href , ref}) => {\n    //     return (\n    //         <a href={href} onClick={onClick} ref={this.state.selectedstateid}>\n    //             {ref}\n    //         </a>\n    //     )\n    // })\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-div\",\n      children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row mx-0\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"col-md-4\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              onChange: e => this.statedown(e.target.value),\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"---Select Country---\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"India\",\n                children: \"India\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Usa\",\n                children: \"Usa\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"col-md-4\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"State\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              onChange: event => this.statedropdown(event.target.value),\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"---Select State---\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 33\n              }, this), this.state.states != null ? this.state.states.map(state => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: [[state.statename], [state.id]],\n                children: state.statename\n              }, state.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 97\n              }, this)) : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), console.log(\"users: ==>\", this.state.users), this.state.users != \"Users Not Found\" && this.state.users != null ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"col-md-4\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: [\"Selected State : \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: \"blue\"\n                  },\n                  children: this.state.selectedstatename\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 164\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 135\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                onClick: () => {\n                  router.push({\n                    pathname: '/users/[stateid]',\n                    query: {\n                      stateid: this.state.selectedstateid\n                    }\n                  });\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"info\",\n                  size: \"sm\",\n                  children: \"Search Users\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 364\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 248\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 102\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 97\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/trex/Desktop/practiceapp/personaldetailsfull/nextfront/components/userbystate.component.js"],"names":["React","DropdownButton","Dropdown","Button","Form","Link","withRouter","StateSelect","Component","constructor","props","countryid","fetch","then","response","json","data","setState","states","state","users","selectedstatename","selectedstateid","statedown","value","console","log","statefetch","statedropdown","statedata","split","statename","stateid","render","e","target","event","map","id","color","router","push","pathname","query"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { DropdownButton, Dropdown, Button, Form } from \"react-bootstrap\";\nimport Link from 'next/link';\n// import './userbystate.styles.css';\nimport { withRouter } from 'next/router'\n\n// const router = withRouter();\n       \n\n\n\nexport class StateSelect extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            states: [],\n            users: null,\n            selectedstatename: null,\n            selectedstateid: null\n        }\n    }\n\n    statefetch = (countryid) => {\n        fetch(`http://localhost:5000/country/${countryid}`)\n            .then((response) => response.json())\n            .then(data => {\n                this.setState({ states: data });\n            });\n\n    }\n\n    statedown(value) {\n\n        console.log(\"statedown --> \", value)\n\n        if (value === \"India\") {\n            this.statefetch(1);\n            console.log(\"this.state\", this.state.states)\n        } else if (value === \"Usa\") {\n            this.statefetch(2);\n            console.log(\"this.state\", this.state.states)\n        } else if (value == \"\") {\n            this.setState({ states: null })\n        }\n    }\n    statedropdown(value) {\n        if (value != \"\") {\n            const statedata = value.split(\",\")\n            const statename = statedata[0]\n            const stateid = statedata[1]\n            fetch(`http://localhost:5000/users/state/${stateid}`)\n                .then((response) => response.json())\n                .then(data => {\n                    this.setState({ users: data });\n                });\n            this.setState({ selectedstatename: statename })\n            this.setState({ selectedstateid: stateid })\n\n        } else {\n            this.setState({ selectedstatename: null })\n            this.setState({ selectedstateid: null })\n        }\n\n    }\n    // handleClick = (e) => {\n    //     const router = useRouter()\n    //     e.preventDefault()\n    //     router.push()\n    // }\n\n    \n\n    render() {\n        // const ButtonLink = React.forwardRef(({ onClick, href , ref}) => {\n        //     return (\n        //         <a href={href} onClick={onClick} ref={this.state.selectedstateid}>\n        //             {ref}\n        //         </a>\n        //     )\n        // })\n        \n        return (\n            <div className=\"main-div\">\n                <fieldset>\n\n                    <div className=\"row mx-0\">\n                        <Form.Group className=\"col-md-4\">\n                            <Form.Label>Country</Form.Label>\n                            <Form.Control as=\"select\" onChange={(e) => this.statedown(e.target.value)} required>\n                                <option value=\"\">---Select Country---</option>\n                                <option value=\"India\">India</option>\n                                <option value=\"Usa\">Usa</option>\n\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group className=\"col-md-4\">\n                            <Form.Label>State</Form.Label>\n                            <Form.Control as=\"select\" onChange={(event) => this.statedropdown(event.target.value)} required>\n                                <option value=\"\">---Select State---</option>\n                                {/* { if (this.state.states != null){\n                                this.state.states.map(state => (\n                                    <option key={state.id} value={[[state.statename], [state.id]]}>{state.statename}</option>\n                                ))}\n                        } */}\n                                {(this.state.states != null) ? (this.state.states.map(state => (<option key={state.id} value={[[state.statename], [state.id]]}>{state.statename}</option>))) : \"\"}\n\n                            </Form.Control>\n\n                        </Form.Group>\n                        {console.log(\"users: ==>\", this.state.users)}\n                        {(this.state.users != \"Users Not Found\" && this.state.users != null) ? (<div><Form.Group className=\"col-md-4\"><Form.Label>Selected State : <span style={{ color: \"blue\" }}>{this.state.selectedstatename}</span> </Form.Label ><Link onClick={() => {router.push({ pathname: '/users/[stateid]', query: {stateid: this.state.selectedstateid} })}}><Button variant=\"info\" size=\"sm\">Search Users</Button></Link></Form.Group></div>) : \"\"}\n                        {/* {(this.state.users != \"Users Not Found\" && this.state.users != null) ? (<div><Form.Group className=\"col-md-4\"><Form.Label>Selected State : <span style={{ color: \"blue\" }}>{this.state.selectedstatename}</span> </Form.Label><Link href=\"/users\" ref={this.state.selectedstateid} passHref>\n                        <Button variant=\"info\" size=\"sm\">Search Users {this.state.selectedstateid}</Button>\n                        </Link></Form.Group></div>) : \"\"} */}\n\n                    </div>\n\n                </fieldset>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}